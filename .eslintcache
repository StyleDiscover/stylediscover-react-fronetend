[{"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\index.js":"1","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\App.js":"2","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\UserContext.js":"3","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\UserReducer.js":"4","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\UserEvents.js":"5","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\MainPostContext.js":"6","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\MainPostReducer.js":"7","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\MainPostEvents.js":"8","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Home.jsx":"9","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\Navbar.jsx":"10","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Login.jsx":"11","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\AuthRoute.jsx":"12","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\Theme.jsx":"13","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Register.jsx":"14","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Create.jsx":"15","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\UnAuthRoute.jsx":"16","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ComponentPost\\EditableComponentPost.jsx":"17","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\UserPage.jsx":"18","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\MainPost\\NonEditableMainPost.jsx":"19","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ComponentPost\\NonEditableComponentPost.jsx":"20","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Profile.jsx":"21","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Profile\\CopyRedirect.jsx":"22","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\WishlistContext.js":"23","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\WishlistEvents.js":"24","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\WishlistReducer.js":"25","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Wishlist.jsx":"26","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Wishlist\\WishlistComponent.jsx":"27","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\MainPost\\EditableMainPost.jsx":"28","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Login\\FacebookLogin.jsx":"29","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\ChangeUsername.jsx":"30","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\ResetPassword.jsx":"31","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ResetPassword\\ResetEmailSentScreen.jsx":"32","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\ResetPasswordConfirm.jsx":"33","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ResetPassword\\LoginAfterResetScreen.jsx":"34","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\AnalyticsEvents.js":"35","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\TermsAndConditions.jsx":"36","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Create\\MyComponents.jsx":"37","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\MyComponentContext.js":"38","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\MyComponentReducer.js":"39","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Create\\SelectableComponentPost.jsx":"40","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\PostPage.jsx":"41","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\MainPost\\PostPageMainPost.jsx":"42","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\AboutUs.jsx":"43","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\PrivacyPolicy.jsx":"44","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\IAmBrand.jsx":"45","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\AddComponents.jsx":"46","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\AdminRoute.jsx":"47","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\LoginAsUser.jsx":"48","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\MyCollection.jsx":"49","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\MyComponentEvents.js":"50","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\ImageWithContent.jsx":"51","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\HeroHome.jsx":"52","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\ImageSlider.jsx":"53","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\VideoWithContent.jsx":"54","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\Footer.jsx":"55","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\HeroBrand.jsx":"56","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\ContentInMiddle.jsx":"57","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\ImageWithFrame.jsx":"58","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\IAmInfluencer.jsx":"59","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\HeroInfluencer.jsx":"60","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\ScrollToTop.jsx":"61","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\Cropper.jsx":"62","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\CropUtils.js":"63"},{"size":811,"mtime":1609485026726,"results":"64","hashOfConfig":"65"},{"size":5660,"mtime":1610035887387,"results":"66","hashOfConfig":"65"},{"size":594,"mtime":1608545608356,"results":"67","hashOfConfig":"65"},{"size":1709,"mtime":1609320963157,"results":"68","hashOfConfig":"65"},{"size":10691,"mtime":1609961879029,"results":"69","hashOfConfig":"65"},{"size":574,"mtime":1608706894624,"results":"70","hashOfConfig":"65"},{"size":1402,"mtime":1609503389734,"results":"71","hashOfConfig":"65"},{"size":8673,"mtime":1610011569164,"results":"72","hashOfConfig":"65"},{"size":5355,"mtime":1610040457091,"results":"73","hashOfConfig":"65"},{"size":8380,"mtime":1610012594287,"results":"74","hashOfConfig":"65"},{"size":5135,"mtime":1610009091424,"results":"75","hashOfConfig":"65"},{"size":578,"mtime":1610009236943,"results":"76","hashOfConfig":"65"},{"size":186,"mtime":1608709642938,"results":"77","hashOfConfig":"65"},{"size":7149,"mtime":1609417891809,"results":"78","hashOfConfig":"65"},{"size":10212,"mtime":1610118346310,"results":"79","hashOfConfig":"65"},{"size":460,"mtime":1610009242095,"results":"80","hashOfConfig":"65"},{"size":16021,"mtime":1610119752035,"results":"81","hashOfConfig":"65"},{"size":3958,"mtime":1609343518006,"results":"82","hashOfConfig":"65"},{"size":5668,"mtime":1610019099704,"results":"83","hashOfConfig":"65"},{"size":7502,"mtime":1610119282455,"results":"84","hashOfConfig":"65"},{"size":11651,"mtime":1610009072519,"results":"85","hashOfConfig":"65"},{"size":4597,"mtime":1608744016148,"results":"86","hashOfConfig":"65"},{"size":574,"mtime":1609060645821,"results":"87","hashOfConfig":"65"},{"size":2727,"mtime":1609229712555,"results":"88","hashOfConfig":"65"},{"size":859,"mtime":1609068802616,"results":"89","hashOfConfig":"65"},{"size":2706,"mtime":1609073572099,"results":"90","hashOfConfig":"65"},{"size":3879,"mtime":1609071929737,"results":"91","hashOfConfig":"65"},{"size":16818,"mtime":1610019062162,"results":"92","hashOfConfig":"65"},{"size":2073,"mtime":1609419181770,"results":"93","hashOfConfig":"65"},{"size":5833,"mtime":1609325344578,"results":"94","hashOfConfig":"65"},{"size":4352,"mtime":1609331942558,"results":"95","hashOfConfig":"65"},{"size":1444,"mtime":1609328994179,"results":"96","hashOfConfig":"65"},{"size":6394,"mtime":1609331677386,"results":"97","hashOfConfig":"65"},{"size":1780,"mtime":1610009115817,"results":"98","hashOfConfig":"65"},{"size":601,"mtime":1609769150264,"results":"99","hashOfConfig":"65"},{"size":30838,"mtime":1609419108276,"results":"100","hashOfConfig":"65"},{"size":3815,"mtime":1610011557767,"results":"101","hashOfConfig":"65"},{"size":642,"mtime":1610010562524,"results":"102","hashOfConfig":"65"},{"size":1019,"mtime":1610011960594,"results":"103","hashOfConfig":"65"},{"size":3881,"mtime":1609502046863,"results":"104","hashOfConfig":"65"},{"size":1590,"mtime":1610019084673,"results":"105","hashOfConfig":"65"},{"size":5838,"mtime":1609864487878,"results":"106","hashOfConfig":"65"},{"size":1763,"mtime":1609850911890,"results":"107","hashOfConfig":"65"},{"size":31867,"mtime":1609849512520,"results":"108","hashOfConfig":"65"},{"size":4153,"mtime":1610037929842,"results":"109","hashOfConfig":"65"},{"size":11058,"mtime":1610121046037,"results":"110","hashOfConfig":"65"},{"size":579,"mtime":1610009231817,"results":"111","hashOfConfig":"65"},{"size":4265,"mtime":1609956624085,"results":"112","hashOfConfig":"65"},{"size":3007,"mtime":1610012646357,"results":"113","hashOfConfig":"65"},{"size":1564,"mtime":1610011879611,"results":"114","hashOfConfig":"65"},{"size":3807,"mtime":1610038374884,"results":"115","hashOfConfig":"65"},{"size":1419,"mtime":1610037713599,"results":"116","hashOfConfig":"65"},{"size":2617,"mtime":1610091112229,"results":"117","hashOfConfig":"65"},{"size":3622,"mtime":1610039090698,"results":"118","hashOfConfig":"65"},{"size":4905,"mtime":1610032987953,"results":"119","hashOfConfig":"65"},{"size":1248,"mtime":1610039260745,"results":"120","hashOfConfig":"65"},{"size":1225,"mtime":1610038424980,"results":"121","hashOfConfig":"65"},{"size":3938,"mtime":1610038404212,"results":"122","hashOfConfig":"65"},{"size":8472,"mtime":1610039481400,"results":"123","hashOfConfig":"65"},{"size":1144,"mtime":1610037739957,"results":"124","hashOfConfig":"65"},{"size":272,"mtime":1610035866516,"results":"125","hashOfConfig":"65"},{"size":6297,"mtime":1610120646520,"results":"126","hashOfConfig":"65"},{"size":3354,"mtime":1610119980893,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1ply5lq",{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"130"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"130"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"130"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"130"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"130"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"130"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"130"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"130"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"130"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"130"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"130"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"130"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"130"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"130"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"130"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"130"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\index.js",[],["290","291"],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\App.js",["292","293","294","295","296","297"],"//react imports\nimport { useEffect, useContext } from 'react';\nimport {\n   BrowserRouter as Router,\n   Route,\n   Switch,\n   Redirect,\n} from 'react-router-dom';\n\n//context imports\nimport { UserContext } from './context/UserContext';\nimport { MainPostContext } from './context/MainPostContext';\nimport { WishlistContext } from './context/WishlistContext';\nimport { MyComponentsContext } from './context/MyComponentContext';\n\n//Event imports\nimport { setUserData } from './events/UserEvents';\nimport { setMainPost } from './events/MainPostEvents';\nimport { setWishlist } from './events/WishlistEvents';\nimport { setMyComponents } from './events/MyComponentEvents';\n\n//MUI imports\nimport {\n   ThemeProvider as MUIThemeProvider,\n   createMuiTheme,\n   responsiveFontSizes,\n} from '@material-ui/core';\n\n//component imports\nimport Navbar from './components/General/Navbar';\n\n//utils import\nimport AuthRoute from './utils/AuthRoute';\nimport UnAuthRoute from './utils/UnAuthRoute';\nimport AdminRoute from './utils/AdminRoute';\nimport Theme from './utils/Theme';\n\n//page imports\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Create from './pages/Create';\nimport UserPage from './pages/UserPage';\nimport Profile from './pages/Profile';\nimport Wishlist from './pages/Wishlist';\nimport ChangeUsername from './pages/ChangeUsername';\nimport ResetPassword from './pages/ResetPassword';\nimport ResetPasswordConfirm from './pages/ResetPasswordConfirm';\nimport TermsAndConditions from './pages/TermsAndConditions';\nimport PostPage from './pages/PostPage';\nimport AboutUs from './pages/AboutUs';\nimport PrivacyPolicy from './pages/PrivacyPolicy';\nimport IAmBrand from './pages/IAmBrand';\nimport LoginAsUser from './pages/LoginAsUser';\nimport MyCollection from './pages/MyCollection';\nimport Footer from './components/Static/Footer';\nimport IAmInfluencer from './pages/IAmInfluencer';\nimport ScrollToTop from './components/General/ScrollToTop';\n\n//theme\nlet theme = createMuiTheme(Theme);\ntheme = responsiveFontSizes(theme);\n\nfunction App() {\n   //global consts\n   const { user, userDispatch } = useContext(UserContext);\n   const { mainPosts, mainPostDispatch } = useContext(MainPostContext);\n   const { wishlists, wishlistDispatch } = useContext(WishlistContext);\n   const { myComponentData, componentDispatch } = useContext(\n      MyComponentsContext\n   );\n\n   useEffect(() => {\n      //get token\n      const username = localStorage.Username;\n\n      if (username) {\n         setUserData(username, userDispatch).then(() => {\n            setMainPost(username, mainPostDispatch);\n            setWishlist(username, wishlistDispatch);\n            setMyComponents(username, componentDispatch);\n         });\n      }\n   }, []);\n\n   return (\n      <div style={{ minHeight: '100vh', position: 'relative' }}>\n         <MUIThemeProvider theme={theme}>\n            <Router>\n               <Navbar />\n               {/* //scroll to top */}\n               <ScrollToTop />\n               <Switch>\n                  <Route exact path=\"/\" component={Home} />\n                  <Route exact path=\"/sd/aboutus\" component={AboutUs} />\n                  <Route exact path=\"/sd/iamabrand\" component={IAmBrand} />\n                  <Route\n                     exact\n                     path=\"/sd/iamaninfluencer\"\n                     component={IAmInfluencer}\n                  />\n                  <Route\n                     exact\n                     path=\"/policy/termsandconditions\"\n                     component={TermsAndConditions}\n                  />\n                  <Route\n                     exact\n                     path=\"/policy/privacy\"\n                     component={PrivacyPolicy}\n                  />\n\n                  {/* AUTH ROUTES CANNOT ACCESS WHEN AUTHENTICATED*/}\n                  <AuthRoute exact path=\"/login\" component={Login} />\n                  <AuthRoute exact path=\"/signup\" component={Register} />\n                  <AuthRoute\n                     exact\n                     path=\"/password/reset\"\n                     component={ResetPassword}\n                  />\n                  {/* UNAUTH ROUTE CANNOT ACCESS WHEN UNAUTHENTICATED*/}\n                  <UnAuthRoute exact path=\"/create\" component={Create} />\n                  <UnAuthRoute exact path=\"/profile\" component={Profile} />\n                  <UnAuthRoute exact path=\"/wishlist\" component={Wishlist} />\n                  <UnAuthRoute\n                     exact\n                     path=\"/mycollection\"\n                     component={MyCollection}\n                  />\n                  <UnAuthRoute\n                     exact\n                     path=\"/firsttimelogin/changeusername\"\n                     component={ChangeUsername}\n                  />\n                  <Route\n                     exact\n                     path=\"/users/password/reset/confirm/:uid/:token\"\n                     component={ResetPasswordConfirm}\n                  />\n                  {/* ADMIN ROUTE */}\n                  <AdminRoute\n                     exact\n                     path=\"/sd/admin/loginasuser\"\n                     component={LoginAsUser}\n                  />\n                  {/* USERNAME ROUTE */}\n                  <Route exact path=\"/:username\" component={UserPage} />\n                  <Route exact path=\"/post/:id\" component={PostPage} />\n               </Switch>\n               <div\n                  style={{\n                     paddingBottom: 125,\n                  }}\n               ></div>\n               <Footer />\n            </Router>\n         </MUIThemeProvider>\n      </div>\n   );\n}\n\nexport default App;\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\UserContext.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\UserReducer.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\UserEvents.js",["298"],"//axios import\r\nimport axios from 'axios';\r\nimport { setMainPost } from './MainPostEvents';\r\n\r\n//Axios Settings\r\naxios.defaults.baseURL =\r\n   window.location.port === '3000'\r\n      ? 'http://localhost:8000/'\r\n      : `${window.location.protocol}//${\r\n           window.location.hostname + ':' + window.location.port\r\n        }/`;\r\n\r\n// EXPORT FUNTIONS\r\n//login event\r\nexport const loginWithEmail = async (userData, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const data = {\r\n      username: userData.username,\r\n      password: userData.password,\r\n   };\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   await axios\r\n      .post('/users/auth/login/', data, config)\r\n      .then((res) => {\r\n         userDispatch({ type: 'AUTHENTICATE' });\r\n         userDispatch({ type: 'UNSET_ERROR_DATA' });\r\n         userDispatch({ type: 'SET_LOGIN_METHOD', data: 'email' });\r\n         userDispatch({ type: 'SET_USER_DATA', data: res.data.user });\r\n         const token = res.data.token.split(',')[1].split(\"'\")[1];\r\n         _setAuthToken(token, userData.username);\r\n         userDispatch({ type: 'NOT_LOADING' });\r\n         window.location.reload(false);\r\n      })\r\n      .catch((e) => {\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'LOADING' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//admin login as user event\r\nexport const adminLoginAsUser = async (username, userDispatch, history) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   await axios\r\n      .get(`/users/admin/loginwithusername/${username}/`)\r\n      .then(async (res) => {\r\n         var token = localStorage.AccessToken;\r\n         await logout(token, userDispatch);\r\n         userDispatch({ type: 'AUTHENTICATE' });\r\n         userDispatch({ type: 'UNSET_ERROR_DATA' });\r\n         userDispatch({ type: 'SET_LOGIN_METHOD', data: 'email' });\r\n         userDispatch({ type: 'SET_USER_DATA', data: res.data.user });\r\n         token = res.data.token.split(',')[1].split(\"'\")[1];\r\n         _setAuthToken(token, username);\r\n         userDispatch({ type: 'NOT_LOADING' });\r\n         history.push('/profile');\r\n         window.location.reload(false);\r\n      })\r\n      .catch((e) => {\r\n         userDispatch({ type: 'LOADING' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//facebook login event\r\nexport const loginWithFacebook = async (facebookData, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   await axios\r\n      .post('/users/auth/facebook/', facebookData, config)\r\n      .then((res) => {\r\n         userDispatch({ type: 'AUTHENTICATE' });\r\n         userDispatch({ type: 'UNSET_ERROR_DATA' });\r\n         userDispatch({ type: 'SET_LOGIN_METHOD', data: 'facebook' });\r\n         userDispatch({ type: 'SET_USER_DATA', data: res.data.user });\r\n         const token = res.data.token.split(',')[1].split(\"'\")[1];\r\n         _setAuthToken(token, res.data.user.username);\r\n         userDispatch({ type: 'NOT_LOADING' });\r\n         window.location.reload(false);\r\n      })\r\n      .catch((e) => {\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'LOADING' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//update info event\r\nexport const updateUserInfo = async (userInfo, username, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   await axios\r\n      .put(`/users/userinfo/${username}/`, userInfo, config)\r\n      .then((res) => {\r\n         userDispatch({ type: 'UNSET_ERROR_DATA' });\r\n         userDispatch({\r\n            type: 'SET_USER_PROFILE_PICTURE',\r\n            data: res.data.profile_picture,\r\n         });\r\n         window.location.reload(false);\r\n      })\r\n      .catch((e) => {\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//update username event\r\nexport const updateUsername = async (userInfo, userId, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   await axios\r\n      .put(`/users/changeusername/${userId}/`, userInfo, config)\r\n      .then((res) => {\r\n         userDispatch({ type: 'UNSET_ERROR_DATA' });\r\n         userDispatch({\r\n            type: 'SET_USERNAME',\r\n            data: res.data.username,\r\n         });\r\n         localStorage.setItem('Username', res.data.username);\r\n      })\r\n      .catch((e) => {\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//register event\r\nexport const registerWithEmail = async (userData, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   await axios\r\n      .post('/users/auth/registration/', userData, config)\r\n      .then((res) => {\r\n         userDispatch({ type: 'AUTHENTICATE' });\r\n         userDispatch({ type: 'UNSET_ERROR_DATA' });\r\n         userDispatch({ type: 'SET_LOGIN_METHOD', data: 'email' });\r\n         userDispatch({ type: 'SET_USER_DATA', data: res.data.user });\r\n         const token = res.data.token.split(',')[1].split(\"'\")[1];\r\n         _setAuthToken(token, userData.username);\r\n      })\r\n      .catch((e) => {\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'LOADING' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//logout event\r\nexport const logoutAll = async (token, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const data = {\r\n      token: token,\r\n   };\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   await axios\r\n      .post('/users/auth/knox/logoutall/', data, config)\r\n      .then(() => {\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'LOADING' });\r\n         _unsetAuthToken();\r\n      })\r\n      .catch((e) => {\r\n         console.log(e.response.data);\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'LOADING' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//logout from all devices event\r\nexport const logout = async (token, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const data = {\r\n      token: token,\r\n   };\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   await axios\r\n      .post('/users/auth/knox/logout/', data, config)\r\n      .then(() => {\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         _unsetAuthToken();\r\n      })\r\n      .catch((e) => {\r\n         console.log(e.response.data);\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//set user data event\r\nexport const setUserData = async (username, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n   const token = localStorage.AccessToken;\r\n\r\n   await axios\r\n      .get(`/users/userdetails/${username}/`)\r\n      .then((res) => {\r\n         userDispatch({ type: 'AUTHENTICATE' });\r\n         userDispatch({ type: 'UNSET_ERROR_DATA' });\r\n         userDispatch({ type: 'SET_LOGIN_METHOD', data: 'email' });\r\n         userDispatch({ type: 'SET_USER_DATA', data: res.data });\r\n         axios.defaults.headers.common['Authorization'] = token;\r\n      })\r\n      .catch((e) => {\r\n         console.log(e.response.data);\r\n      });\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n};\r\n\r\n//reset user password\r\nexport const resetPasswordSend = async (emailData, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   const result = await axios\r\n      .post('/users/auth/password/reset/', emailData, config)\r\n      .then((res) => {\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         return res.status;\r\n      })\r\n      .catch((e) => {\r\n         console.log(e.response.data);\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n         return 0;\r\n      });\r\n\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n   return result;\r\n};\r\n\r\n//reset user password\r\nexport const resetPasswordConfirm = async (newPasswordData, userDispatch) => {\r\n   userDispatch({ type: 'LOADING' });\r\n\r\n   const config = {\r\n      headers: {\r\n         'Content-Type': 'application/json',\r\n         'X-CSRFToken': '{{csrf_token}}',\r\n      },\r\n   };\r\n\r\n   const result = await axios\r\n      .post('/users/auth/password/reset/confirm/', newPasswordData, config)\r\n      .then((res) => {\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         return res.status;\r\n      })\r\n      .catch((e) => {\r\n         console.log(e.response.data);\r\n         userDispatch({ type: 'UNSET_STATE' });\r\n         userDispatch({ type: 'SET_ERROR_DATA', data: e.response.data });\r\n         return 0;\r\n      });\r\n\r\n   userDispatch({ type: 'NOT_LOADING' });\r\n   return result;\r\n};\r\n\r\n//INTERNAL FUNCTIONS\r\n//set local storage values\r\nconst _setAuthToken = async (token, username) => {\r\n   const AccessToken = `Bearer ${token}`;\r\n   localStorage.setItem('AccessToken', AccessToken);\r\n   localStorage.setItem('Username', username);\r\n   axios.defaults.headers.common['Authorization'] = AccessToken;\r\n};\r\n\r\n//remove local storage values\r\nconst _unsetAuthToken = async () => {\r\n   localStorage.removeItem('AccessToken');\r\n   localStorage.removeItem('Username');\r\n   delete axios.defaults.headers.common['Authorization'];\r\n};\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\MainPostContext.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\MainPostReducer.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\MainPostEvents.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Home.jsx",["299","300","301","302"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//home page components\r\nimport Hero from '../components/Static/HeroHome';\r\nimport ImageSlider from '../components/Static/ImageSlider';\r\nimport ImageWithContent from '../components/Static/ImageWithContent';\r\n\r\n//assets\r\nimport SectionOneImage from '../assets/SectionOne.png';\r\nimport SectionOneBackground from '../assets/SectionBackground.png';\r\n\r\n//slider image\r\nimport Slider1 from '../assets/slider/1.png';\r\nimport Slider2 from '../assets/slider/2.png';\r\nimport Slider3 from '../assets/slider/3.png';\r\nimport Slider4 from '../assets/slider/4.jpg';\r\nimport Slider5 from '../assets/slider/5.jpeg';\r\nimport Slider6 from '../assets/slider/6.jpg';\r\n\r\n//MUI Imports\r\nimport {\r\n   Grid,\r\n   makeStyles,\r\n   Typography,\r\n   Link as MUILink,\r\n   Container,\r\n} from '@material-ui/core';\r\nimport ContentInMiddle from '../components/Static/ContentInMiddle';\r\n\r\n//use styles\r\nconst useStyles = makeStyles({\r\n   containerMargin: {\r\n      marginTop: 75,\r\n      marginBottom: 75,\r\n   },\r\n   monFont: {\r\n      fontFamily: 'Montserrat',\r\n      fontWeight: 500,\r\n   },\r\n});\r\n\r\nexport default function Home() {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <div>\r\n         <Hero />\r\n         <div>\r\n            <ImageWithContent\r\n               imageLeft={false}\r\n               title={\r\n                  <Typography variant=\"h3\" className={classes.monFont}>\r\n                     WE ALL NEED A LITTLE HELP.\r\n                  </Typography>\r\n               }\r\n               imgUrl={SectionOneImage}\r\n               content={\r\n                  <Typography variant=\"body1\" className={classes.monFont}>\r\n                     StyleDiscover is here to help you discover the latest\r\n                     trends and the styles from the top influencers in the\r\n                     country. You can find inspiration and shop for styles that\r\n                     you love - all in one place.\r\n                  </Typography>\r\n               }\r\n               cta={true}\r\n               background={SectionOneBackground}\r\n               // ctaText=\"Signup\"\r\n               // ctaUrl=\"/login\"\r\n            />\r\n         </div>\r\n         <div className={classes.containerMargin}>\r\n            <ImageSlider\r\n               data={[\r\n                  {\r\n                     imageUrls: Slider1,\r\n                     name: 'Sheena Sherwani',\r\n                     sliderUrl: '/sheenasherwani',\r\n                  },\r\n                  {\r\n                     imageUrls: Slider2,\r\n                     name: 'Thompson',\r\n                     sliderUrl: '/limitless_adventurer',\r\n                  },\r\n                  {\r\n                     imageUrls: Slider3,\r\n                     name: 'Urmi Daga',\r\n                     sliderUrl: '/urmidaga',\r\n                  },\r\n               ]}\r\n               title={\r\n                  <>\r\n                     <Typography variant=\"h3\" className={classes.monFont}>\r\n                        IF IT'S IN TREND, YOU'LL FIND IT HERE.\r\n                     </Typography>\r\n                     <Typography\r\n                        variant=\"h6\"\r\n                        className={classes.monFont}\r\n                        style={{ marginTop: 10 }}\r\n                     >\r\n                        Check out the latest styles by our top influencers\r\n                     </Typography>\r\n                  </>\r\n               }\r\n            />\r\n         </div>\r\n         <div className={classes.containerMargin}>\r\n            {' '}\r\n            {/* <ContentInMiddle background={false}> */}\r\n            <Container maxWidth=\"sm\">\r\n               <Grid container={true} spacing={3}>\r\n                  <Grid item={true} xs={6} md={6} style={{ margin: 'auto' }}>\r\n                     <MUILink component={Link} to=\"/sd/iamabrand\">\r\n                        <Typography\r\n                           variant=\"h5\"\r\n                           style={{\r\n                              padding: '25px 0px',\r\n                              cursor: 'pointer',\r\n                              backgroundColor: '#4f5964',\r\n                              color: '#eacec5',\r\n                              borderRadius: 15,\r\n                           }}\r\n                           align=\"center\"\r\n                        >\r\n                           I am a Brand\r\n                        </Typography>\r\n                     </MUILink>\r\n                  </Grid>\r\n                  <Grid item={true} xs={6} md={6} style={{ margin: 'auto' }}>\r\n                     <MUILink component={Link} to=\"/sd/iamaninfluencer\">\r\n                        <Typography\r\n                           variant=\"h5\"\r\n                           style={{\r\n                              padding: '25px 0px',\r\n                              cursor: 'pointer',\r\n                              backgroundColor: '#4f5964',\r\n                              color: '#eacec5',\r\n                              borderRadius: 15,\r\n                           }}\r\n                           align=\"center\"\r\n                        >\r\n                           I am an Influencer\r\n                        </Typography>\r\n                     </MUILink>\r\n                  </Grid>\r\n               </Grid>\r\n            </Container>\r\n            {/* </ContentInMiddle> */}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\Navbar.jsx",["303","304","305","306"],"//react imports\r\nimport React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//context and events\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { logout, logoutAll } from '../../events/UserEvents';\r\n\r\n//MUI Core imports\r\nimport {\r\n   AppBar,\r\n   Toolbar,\r\n   Container,\r\n   IconButton,\r\n   Avatar,\r\n   Link as MUILink,\r\n   Slide,\r\n   SwipeableDrawer,\r\n   useScrollTrigger,\r\n   List,\r\n   Divider,\r\n   ListItem,\r\n   makeStyles,\r\n   ListItemIcon,\r\n   ListItemText,\r\n   Badge,\r\n   Typography,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons Import\r\nimport {\r\n   Person,\r\n   PowerSettingsNew,\r\n   Favorite,\r\n   Home,\r\n   Menu,\r\n   Add,\r\n   Info,\r\n   SupervisorAccount,\r\n   CollectionsBookmark,\r\n} from '@material-ui/icons';\r\n\r\n//use style\r\nconst useStyle = makeStyles({\r\n   list: {\r\n      width: 250,\r\n   },\r\n   logo: {\r\n      fontFamily: 'Megrim',\r\n      color: 'black',\r\n      fontSize: '1.8em',\r\n      textDecoration: 'None',\r\n   },\r\n   iconStyle: {\r\n      fontSize: 25,\r\n   },\r\n});\r\n\r\n//hide on scroll functions\r\nfunction HideOnScroll(props) {\r\n   const { children, window } = props;\r\n   // Note that you normally won't need to set the window ref as useScrollTrigger\r\n   // will default to window.\r\n   // This is only being set here because the demo is in an iframe.\r\n   const trigger = useScrollTrigger({ target: window });\r\n\r\n   return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n         {children}\r\n      </Slide>\r\n   );\r\n}\r\n\r\nexport default function Navbar(props) {\r\n   // get user dispatch\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //states\r\n   const [drawer, setDrawer] = useState(false);\r\n\r\n   //use styles\r\n   const classes = useStyle();\r\n\r\n   //logout function\r\n   const handleLogout = (event) => {\r\n      const token = localStorage.AccessToken;\r\n      logout(token, userDispatch);\r\n   };\r\n\r\n   const handleLogoutAll = (event) => {\r\n      const token = localStorage.AccessToken;\r\n      logoutAll(token, userDispatch);\r\n   };\r\n\r\n   //drawer toggle\r\n   const toggleDrawer = (open) => (event) => {\r\n      if (\r\n         event &&\r\n         event.type === 'keydown' &&\r\n         (event.key === 'Tab' || event.key === 'Shift')\r\n      ) {\r\n         return;\r\n      }\r\n      setDrawer(open);\r\n   };\r\n\r\n   //drawer list\r\n   const list = (anchor) => (\r\n      <div\r\n         className={classes.list}\r\n         role=\"presentation\"\r\n         onClick={toggleDrawer(false)}\r\n         onKeyDown={toggleDrawer(false)}\r\n      >\r\n         {!user.isAuthenticated && (\r\n            <List>\r\n               <ListItem button key=\"login\" component={Link} to=\"/login\">\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <Person />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Login\" />\r\n               </ListItem>\r\n               <ListItem button key=\"signup\" component={Link} to=\"/signup\">\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <Add />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Signup\" />\r\n               </ListItem>\r\n            </List>\r\n         )}\r\n         {user.isAuthenticated && user.userData.modified_username && (\r\n            <List>\r\n               <ListItem button key=\"login\" component={Link} to=\"/profile\">\r\n                  <ListItemIcon>\r\n                     {user.userData.profile_picture ? (\r\n                        <Avatar\r\n                           src={user.userData.profile_picture}\r\n                           alt={\r\n                              user.userData.name !== ''\r\n                                 ? user.userData.name\r\n                                 : user.userData.username\r\n                           }\r\n                           style={{ height: 25, width: 25 }}\r\n                        ></Avatar>\r\n                     ) : (\r\n                        <Avatar\r\n                           alt={\r\n                              user.userData.name !== ''\r\n                                 ? user.userData.name\r\n                                 : user.userData.username\r\n                           }\r\n                           style={{ height: 25, width: 25 }}\r\n                        ></Avatar>\r\n                     )}\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                     primary={\r\n                        user.userData.name !== ''\r\n                           ? user.userData.name\r\n                           : user.userData.username\r\n                     }\r\n                  />\r\n               </ListItem>\r\n               <ListItem button key=\"wishlist\" component={Link} to=\"/create\">\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <Add className={classes.iconStyle} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Create\" />\r\n               </ListItem>\r\n               <ListItem button key=\"wishlist\" component={Link} to=\"/wishlist\">\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <Favorite />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Wishlist\" />\r\n               </ListItem>\r\n               <ListItem\r\n                  button\r\n                  key=\"collections\"\r\n                  component={Link}\r\n                  to=\"/mycollection\"\r\n               >\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <CollectionsBookmark />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"My Collections\" />\r\n               </ListItem>\r\n            </List>\r\n         )}\r\n         {user.isAuthenticated && user.userData.account_type === 'AD' && (\r\n            <>\r\n               <Divider />\r\n               <ListItem>\r\n                  <Typography>Admin</Typography>\r\n               </ListItem>\r\n               <List>\r\n                  <ListItem\r\n                     button\r\n                     key=\"about us\"\r\n                     component={Link}\r\n                     to=\"/sd/admin/loginasuser\"\r\n                  >\r\n                     <ListItemIcon>\r\n                        {' '}\r\n                        <SupervisorAccount />\r\n                     </ListItemIcon>\r\n                     <ListItemText primary=\"Login As User\" />\r\n                  </ListItem>\r\n               </List>\r\n            </>\r\n         )}\r\n         <Divider />\r\n         <List>\r\n            <ListItem button key=\"about us\" component={Link} to=\"/sd/aboutus\">\r\n               <ListItemIcon>\r\n                  {' '}\r\n                  <Info />\r\n               </ListItemIcon>\r\n               <ListItemText primary=\"About Us\" />\r\n            </ListItem>\r\n            {user.isAuthenticated && (\r\n               <ListItem button key=\"logout\" onClick={handleLogout}>\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <PowerSettingsNew />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Logout\" />\r\n               </ListItem>\r\n            )}\r\n         </List>\r\n      </div>\r\n   );\r\n\r\n   return (\r\n      <HideOnScroll {...props}>\r\n         <AppBar\r\n            color=\"inherit\"\r\n            // style={{ background: 'rgba(255,255,255,0.5)' }}\r\n         >\r\n            <Container maxWidth=\"md\" component=\"div\">\r\n               <Toolbar>\r\n                  <Typography\r\n                     component={Link}\r\n                     to=\"/\"\r\n                     style={{ WebkitTapHighlightColor: 'transparent' }}\r\n                     className={classes.logo}\r\n                  >\r\n                     StyleDiscover\r\n                  </Typography>\r\n                  <div style={{ flexGrow: 1 }}></div>\r\n                  <div>\r\n                     <IconButton onClick={toggleDrawer(true)} color=\"inherit\">\r\n                        <Menu />\r\n                     </IconButton>\r\n                     <SwipeableDrawer\r\n                        anchor=\"right\"\r\n                        open={drawer}\r\n                        onClose={toggleDrawer(false)}\r\n                        onOpen={toggleDrawer(true)}\r\n                     >\r\n                        {list(drawer)}\r\n                     </SwipeableDrawer>\r\n                  </div>\r\n               </Toolbar>\r\n            </Container>\r\n         </AppBar>\r\n      </HideOnScroll>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Login.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\AuthRoute.jsx",["307"],"import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n//import context\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => {\r\n   const { user } = useContext(UserContext);\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         render={(props) =>\r\n            localStorage.AccessToken ? (\r\n               <Redirect to=\"/profile\" />\r\n            ) : (\r\n               <Component {...props} />\r\n            )\r\n         }\r\n      />\r\n   );\r\n};\r\n\r\nexport default AuthRoute;\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\Theme.jsx",["308"],"export default {\r\n   palette: {\r\n      primary: {\r\n         // main: '#2196f3',\r\n         main: '#333333',\r\n      },\r\n      secondary: {\r\n         main: '#ffad33',\r\n      },\r\n   },\r\n};\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Register.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Create.jsx",["309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\UnAuthRoute.jsx",["323"],"import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst UnAuthRoute = ({ component: Component, ...rest }) => {\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         render={(props) =>\r\n            !localStorage.AccessToken ? (\r\n               <Redirect to=\"/login\" />\r\n            ) : (\r\n               <Component {...props} />\r\n            )\r\n         }\r\n      />\r\n   );\r\n};\r\n\r\nexport default UnAuthRoute;\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ComponentPost\\EditableComponentPost.jsx",["324","325","326"],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\UserPage.jsx",["327","328","329","330","331"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n//context and events\r\nimport { MainPostContext } from '../context/MainPostContext';\r\nimport { sendPageViewAnalytics } from '../events/AnalyticsEvents'; //analytics events\r\nimport { getMainPost } from '../events/MainPostEvents';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   Grid,\r\n   Avatar,\r\n   Link as MUILink,\r\n   makeStyles,\r\n} from '@material-ui/core';\r\nimport NonEditableMainPost from '../components/MainPost/NonEditableMainPost';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   customUsername: {\r\n      textAlign: 'center',\r\n      marginBottom: 20,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '600',\r\n      color: 'black',\r\n   },\r\n   customPaper: {\r\n      paddingTop: 20,\r\n      color: '#333333',\r\n      margin: '20px 0px',\r\n   },\r\n   customNoPostMessage: {\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '400',\r\n      textAlign: 'center',\r\n   },\r\n});\r\n\r\nexport default function UserPage() {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { mainPostDispatch } = useContext(MainPostContext);\r\n\r\n   //get the username\r\n   let { username } = useParams();\r\n\r\n   //states\r\n   const [userData, setUserData] = useState();\r\n\r\n   //useeffect\r\n   useEffect(() => {\r\n      getMainPost(username, mainPostDispatch).then((data) => {\r\n         setUserData(data);\r\n         if (data.id) {\r\n            sendPageViewAnalytics(data.id);\r\n         }\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <Container maxWidth=\"lg\" className=\"margin-top-80\">\r\n         {userData && userData.detail && (\r\n            <div>\r\n               <Typography className={classes.customNoPostMessage}>\r\n                  404 USER NOT FOUND\r\n               </Typography>\r\n            </div>\r\n         )}\r\n         {userData && userData.username && (\r\n            <div>\r\n               {/* USER PROFILE PICTURE STARTS */}\r\n               <Typography variant=\"body1\" className={classes.customUsername}>\r\n                  {userData.profile_picture ? (\r\n                     <Avatar\r\n                        style={{\r\n                           margin: '0px auto 10px auto',\r\n                           width: 75,\r\n                           height: 75,\r\n                        }}\r\n                        src={userData.profile_picture}\r\n                        alt={userData.username}\r\n                     ></Avatar>\r\n                  ) : (\r\n                     <Avatar\r\n                        style={{\r\n                           margin: '0px auto 10px auto',\r\n                           width: 75,\r\n                           height: 75,\r\n                        }}\r\n                        alt={userData.username}\r\n                     ></Avatar>\r\n                  )}\r\n                  @{userData.username}\r\n               </Typography>\r\n               {/* USER PROFILE PICTURE ENDS */}\r\n               {/*  */}\r\n               {/*  */}\r\n               {/* USER POSTS STARTS */}\r\n               {userData.main_posts.length > 0 && (\r\n                  <Grid container={true} spacing={2}>\r\n                     {userData.main_posts.map((id) => {\r\n                        return (\r\n                           <Grid item={true} xs={12} sm={6} lg={4}>\r\n                              <NonEditableMainPost id={id} />\r\n                           </Grid>\r\n                        );\r\n                     })}\r\n                  </Grid>\r\n               )}\r\n               {userData.main_posts.length === 0 && (\r\n                  <Typography\r\n                     className={classes.customNoPostMessage}\r\n                     variant=\"body2\"\r\n                  >\r\n                     No Posts\r\n                  </Typography>\r\n               )}\r\n               {/* USER POSTS ENDS */}\r\n            </div>\r\n         )}\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\MainPost\\NonEditableMainPost.jsx",["332","333","334"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n//import component\r\nimport NonEditableComponentPost from '../ComponentPost/NonEditableComponentPost';\r\n\r\n//crypto imports\r\nimport AES from 'crypto-js/aes';\r\n\r\n//context and events imports\r\nimport { MainPostContext } from '../../context/MainPostContext';\r\nimport { getMainPostById } from '../../events/MainPostEvents';\r\n\r\n//time ago\r\nimport TimeAgo from 'react-timeago';\r\n\r\n//MUI Imports\r\nimport {\r\n   Card,\r\n   CardMedia,\r\n   CardContent,\r\n   Grid,\r\n   makeStyles,\r\n   CardHeader,\r\n   Typography,\r\n   Avatar,\r\n   IconButton,\r\n} from '@material-ui/core';\r\n\r\n//MUI make style\r\nconst useStyles = makeStyles({\r\n   imgStyle: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      WebkitTapHighlightColor: 'transparent',\r\n      cursor: 'pointer',\r\n   },\r\n   mainPostRoot: {\r\n      backgroundPosition: 'cover',\r\n   },\r\n});\r\n\r\nexport default function NonEditableMainPost({ id }) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { mainPostDispatch } = useContext(MainPostContext);\r\n\r\n   //states\r\n   const [mainPostData, setMainPostData] = useState();\r\n\r\n   //use history\r\n   const history = useHistory();\r\n\r\n   const encryptedId = AES.encrypt(`${id}`, 'Pjmaq7EV2C7lQeaUuLVD')\r\n      .toString()\r\n      .replace(/\\//g, '*');\r\n\r\n   //use effect\r\n   useEffect(() => {\r\n      getMainPostById(id, mainPostDispatch).then((data) =>\r\n         setMainPostData(data)\r\n      );\r\n   }, []);\r\n\r\n   return (\r\n      <div>\r\n         {mainPostData && (\r\n            <Card>\r\n               {/* CARD HEADER STARTS */}\r\n               <CardHeader\r\n                  title={\r\n                     <Typography variant=\"body1\" style={{ fontSize: 14 }}>\r\n                        {mainPostData.name\r\n                           ? mainPostData.name\r\n                           : mainPostData.username}\r\n                     </Typography>\r\n                  }\r\n                  subheader={\r\n                     <Typography variant=\"body2\" style={{ fontSize: 11 }}>\r\n                        <TimeAgo\r\n                           date={mainPostData.created_at}\r\n                           minPeriod={30}\r\n                        />\r\n                     </Typography>\r\n                  }\r\n                  avatar={\r\n                     mainPostData.profile_picture !== null ? (\r\n                        <Avatar\r\n                           src={mainPostData.profile_picture}\r\n                           alt={mainPostData.username}\r\n                           style={{\r\n                              width: 30,\r\n                              height: 30,\r\n                           }}\r\n                        ></Avatar>\r\n                     ) : (\r\n                        <Avatar\r\n                           alt={mainPostData.username}\r\n                           style={{\r\n                              width: 30,\r\n                              height: 30,\r\n                           }}\r\n                        ></Avatar>\r\n                     )\r\n                  }\r\n                  // action={\r\n                  //    <div>\r\n                  //       <IconButton\r\n                  //          style={{ margin: '0px 5px' }}\r\n                  //          aria-controls=\"edit-menu\"\r\n                  //          aria-haspopup=\"true\"\r\n                  //          onClick={OpenEditMenu}\r\n                  //       >\r\n                  //          <MoreVert />\r\n                  //       </IconButton>\r\n                  //    </div>\r\n                  // }\r\n               ></CardHeader>\r\n               {/* CARD HEADER ENDS */}\r\n\r\n               {/* MAIN IMAGE STARTS */}\r\n               {mainPostData.media_type === 'IM' && (\r\n                  <CardMedia\r\n                     className={classes.imgStyle}\r\n                     image={mainPostData.media_url}\r\n                     classes={{\r\n                        root: classes.mainPostRoot,\r\n                     }}\r\n                     onClick={() => {\r\n                        history.push(`/post/${encryptedId}`);\r\n                     }}\r\n                  ></CardMedia>\r\n               )}\r\n               {mainPostData.media_type === 'VD' && (\r\n                  <CardMedia\r\n                     image={mainPostData.media_url}\r\n                     component=\"video\"\r\n                     autoPlay\r\n                     loop\r\n                     muted\r\n                     style={{ cursor: 'pointer' }}\r\n                     onClick={() => {\r\n                        history.push(`/post/${encryptedId}`);\r\n                     }}\r\n                  ></CardMedia>\r\n               )}\r\n               {/* MAIN IMAGE ENDS */}\r\n               {/* COMPONENT IMAGES START */}\r\n               <CardContent>\r\n                  <Grid container={true} spacing={2}>\r\n                     {mainPostData.component_posts.length > 0 &&\r\n                        mainPostData.component_posts.map((componentId) => {\r\n                           return (\r\n                              <Grid item xs={3} key={componentId}>\r\n                                 <NonEditableComponentPost\r\n                                    componentId={componentId}\r\n                                    mainPostId={mainPostData.id}\r\n                                    userId={mainPostData.user_id}\r\n                                 />\r\n                              </Grid>\r\n                           );\r\n                        })}\r\n                  </Grid>\r\n               </CardContent>\r\n               {/* COMPONENT IMAGES END */}\r\n            </Card>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ComponentPost\\NonEditableComponentPost.jsx",["335","336","337","338"],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Profile.jsx",["339","340","341","342"],"//react imports\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//context and events\r\nimport { MainPostContext } from '../context/MainPostContext';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { updateUserInfo } from '../events/UserEvents';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   Grid,\r\n   Avatar,\r\n   Link as MUILink,\r\n   makeStyles,\r\n   Badge,\r\n   Tooltip,\r\n   withStyles,\r\n   Fab,\r\n   CircularProgress,\r\n   Snackbar,\r\n   SnackbarContent,\r\n   IconButton,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons imports\r\nimport { Add, CameraAlt, Close } from '@material-ui/icons';\r\n\r\n//components\r\nimport EditableMainPOst from '../components/MainPost/EditableMainPost';\r\nimport CopyRedirect from '../components/Profile/CopyRedirect';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   customUsername: {\r\n      textAlign: 'center',\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '600',\r\n      color: 'black',\r\n   },\r\n   customProfilePicture: {\r\n      textAlign: 'center',\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '600',\r\n      color: 'black',\r\n      marginBottom: 20,\r\n   },\r\n   customName: {\r\n      textAlign: 'center',\r\n      marginBottom: 20,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '600',\r\n      color: 'black',\r\n   },\r\n   customPaper: {\r\n      paddingTop: 20,\r\n      color: '#333333',\r\n      margin: '20px 0px',\r\n   },\r\n   customNoPostMessage: {\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '400',\r\n      textAlign: 'center',\r\n   },\r\n   customCreateButton: {\r\n      margin: 'auto',\r\n      display: 'flex',\r\n      padding: '10px 15px',\r\n      boxShadow: 'none',\r\n   },\r\n   customProfileInput: {\r\n      display: 'None',\r\n   },\r\n   customFabButton: {\r\n      width: 30,\r\n      height: 30,\r\n   },\r\n   customSize: {\r\n      height: 20,\r\n      width: 20,\r\n   },\r\n   custiomButtonRoot: {\r\n      minHeight: 0,\r\n   },\r\n   customChangeProPicIcon: {\r\n      width: 20,\r\n      height: 20,\r\n   },\r\n\r\n   customCopySnackbar: {\r\n      backgroundColor: '#2196f3',\r\n   },\r\n});\r\n\r\nexport default function Profile(props) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use history\r\n   const history = useHistory();\r\n\r\n   //use context\r\n   const { mainPostDispatch, mainPosts } = useContext(MainPostContext);\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //created a new post flag\r\n   const [openPublishSnackbar, setOpenPublishSnackbar] = useState(false);\r\n\r\n   // use effect\r\n\r\n   //function\r\n   //tooltips\r\n   const DarkTooltip = withStyles(() => ({\r\n      tooltip: {\r\n         backgroundColor: '#333333',\r\n         color: '#eeeeee',\r\n         fontSize: 11,\r\n      },\r\n      arrow: {\r\n         color: '#333333',\r\n      },\r\n   }))(Tooltip);\r\n\r\n   //change profile picture\r\n   const updateProfilePicture = async (event) => {\r\n      if (event.target.files && event.target.files[0]) {\r\n         var userInfo = new FormData();\r\n         userInfo.append('profile_picture', event.target.files[0]);\r\n\r\n         await updateUserInfo(userInfo, user.userData.username, userDispatch);\r\n      }\r\n   };\r\n\r\n   //snackbar functions\r\n   const handleCloseCopySnackbar = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n         return;\r\n      }\r\n\r\n      setOpenPublishSnackbar(false);\r\n   };\r\n\r\n   return (\r\n      <Container maxWidth=\"lg\" className=\"margin-top-80\">\r\n         <div>\r\n            {/* USER PROFILE PICTURE, USERnAME, NAME STARTS */}\r\n\r\n            <div className={classes.customProfilePicture}>\r\n               {user.userData.profile_picture !== null ? (\r\n                  <Badge\r\n                     overlap=\"circle\"\r\n                     anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                     }}\r\n                     badgeContent={\r\n                        <div>\r\n                           <input\r\n                              accept=\"image/*\"\r\n                              className={classes.customProfileInput}\r\n                              id=\"icon-button-file\"\r\n                              type=\"file\"\r\n                              onChange={updateProfilePicture}\r\n                           />\r\n                           <label htmlFor=\"icon-button-file\">\r\n                              {!user.loading && (\r\n                                 <DarkTooltip title=\"Update Picture\" arrow>\r\n                                    <Fab\r\n                                       component=\"span\"\r\n                                       className={classes.customFabButton}\r\n                                       classes={{\r\n                                          sizeSmall: classes.customSize,\r\n                                          root: classes.custiomButtonRoot,\r\n                                       }}\r\n                                    >\r\n                                       <CameraAlt\r\n                                          className={\r\n                                             classes.customChangeProPicIcon\r\n                                          }\r\n                                       />\r\n                                    </Fab>\r\n                                 </DarkTooltip>\r\n                              )}\r\n                              {user.loading && (\r\n                                 <Fab\r\n                                    component=\"span\"\r\n                                    className={classes.customFabButton}\r\n                                    disabled\r\n                                 >\r\n                                    <CircularProgress size={15} />\r\n                                 </Fab>\r\n                              )}\r\n                           </label>\r\n                        </div>\r\n                     }\r\n                  >\r\n                     <Avatar\r\n                        style={{\r\n                           margin: '0px auto 10px auto',\r\n                           width: 75,\r\n                           height: 75,\r\n                        }}\r\n                        src={user.userData.profile_picture}\r\n                        alt={user.userData.username}\r\n                     ></Avatar>\r\n                  </Badge>\r\n               ) : (\r\n                  <Badge\r\n                     overlap=\"circle\"\r\n                     anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                     }}\r\n                     badgeContent={\r\n                        <div>\r\n                           <input\r\n                              accept=\"image/*\"\r\n                              className={classes.customProfileInput}\r\n                              id=\"icon-button-file\"\r\n                              type=\"file\"\r\n                              onChange={updateProfilePicture}\r\n                           />\r\n                           <label htmlFor=\"icon-button-file\">\r\n                              {!user.loading && (\r\n                                 <DarkTooltip title=\"Update Picture\" arrow>\r\n                                    <Fab\r\n                                       component=\"span\"\r\n                                       className={classes.customFabButton}\r\n                                       classes={{\r\n                                          sizeSmall: classes.customSize,\r\n                                          root: classes.custiomButtonRoot,\r\n                                       }}\r\n                                    >\r\n                                       <CameraAlt\r\n                                          className={\r\n                                             classes.customChangeProPicIcon\r\n                                          }\r\n                                       />\r\n                                    </Fab>\r\n                                 </DarkTooltip>\r\n                              )}\r\n                              {user.loading && (\r\n                                 <Fab\r\n                                    component=\"span\"\r\n                                    className={classes.customFabButton}\r\n                                    disabled\r\n                                 >\r\n                                    <CircularProgress size={15} />\r\n                                 </Fab>\r\n                              )}\r\n                           </label>\r\n                        </div>\r\n                     }\r\n                  >\r\n                     <Avatar\r\n                        style={{\r\n                           margin: '0px auto 10px auto',\r\n                           width: 75,\r\n                           height: 75,\r\n                        }}\r\n                        alt={user.userData.username}\r\n                     ></Avatar>\r\n                  </Badge>\r\n               )}\r\n            </div>\r\n            <Typography variant=\"body1\" className={classes.customUsername}>\r\n               @{user.userData.username}\r\n            </Typography>\r\n            <Typography variant=\"h6\" className={classes.customName}>\r\n               {user.userData.name}\r\n            </Typography>\r\n            {/* USER PROFILE PICTURE, USERnAME, NAME ENDS */}\r\n\r\n            {/* USER COPY BUTTON STARTS */}\r\n            <CopyRedirect />\r\n            {/* USER COPY BUTTON ENDS */}\r\n\r\n            {/* ADD BUTTON STARTS */}\r\n            <Container\r\n               maxWidth=\"xs\"\r\n               style={{\r\n                  padding: '0px',\r\n                  margin: '20px auto',\r\n                  width: '100%',\r\n               }}\r\n            >\r\n               <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.customCreateButton}\r\n                  startIcon={<Add />}\r\n                  onClick={() => history.push('/create')}\r\n               >\r\n                  Create A Post\r\n               </Button>\r\n            </Container>\r\n            {/* ADD BUTTON ENDS */}\r\n\r\n            {/* USER POSTS STARTS */}\r\n            {mainPosts.mainPosts.length === 0 && (\r\n               <Typography\r\n                  className={classes.customNoPostMessage}\r\n                  variant=\"body2\"\r\n               >\r\n                  No Posts\r\n               </Typography>\r\n            )}\r\n            <Grid container={true} spacing={2}>\r\n               {mainPosts.mainPosts.map((id) => {\r\n                  return (\r\n                     <Grid item={true} xs={12} sm={6} lg={4} key={id}>\r\n                        <EditableMainPOst id={id} />\r\n                     </Grid>\r\n                  );\r\n               })}\r\n            </Grid>\r\n            {/* USER POSTS ENDS */}\r\n         </div>\r\n\r\n         {/* SNACKBAR STARTS*/}\r\n         <Snackbar\r\n            anchorOrigin={{\r\n               vertical: 'bottom',\r\n               horizontal: 'center',\r\n            }}\r\n            open={openPublishSnackbar}\r\n            autoHideDuration={6000}\r\n            onClose={handleCloseCopySnackbar}\r\n         >\r\n            <SnackbarContent\r\n               className={classes.customCopySnackbar}\r\n               action={\r\n                  <IconButton\r\n                     size=\"small\"\r\n                     aria-label=\"close\"\r\n                     onClick={handleCloseCopySnackbar}\r\n                     color=\"inherit\"\r\n                  >\r\n                     <Close fontSize=\"small\" />\r\n                  </IconButton>\r\n               }\r\n               message=\"Published!\"\r\n            />\r\n         </Snackbar>\r\n         {/* SNACKBAR ENDS */}\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Profile\\CopyRedirect.jsx",["343"],"import React, { useState, useContext } from 'react';\r\n\r\n//copy to clipboard\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Container,\r\n   Paper,\r\n   IconButton,\r\n   Snackbar,\r\n   SnackbarContent,\r\n   Tooltip,\r\n} from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\n//MUI Icons Import\r\nimport { FilterNoneRounded as FilterNone, OpenInNew } from '@material-ui/icons';\r\n\r\n//Contexts\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   customCopyPaper: {\r\n      margin: '10px 0px',\r\n      padding: '10px 10px',\r\n      display: 'flex',\r\n      textAlign: 'center',\r\n      backgroundColor: '#eeeeee',\r\n      color: '#333333',\r\n   },\r\n   customCopyButton: {\r\n      fontSize: '1.2em',\r\n      color: '#333333',\r\n   },\r\n   customFabButton: {\r\n      margin: '0px 3px',\r\n      position: 'relative',\r\n   },\r\n   customCopySnackbar: {\r\n      backgroundColor: '#2196f3',\r\n   },\r\n});\r\n\r\nfunction CopyRedirect() {\r\n   //init vars\r\n   const base_pro_pic_url =\r\n      window.location.port === '3000'\r\n         ? 'http://localhost:8000'\r\n         : `https://${window.location.hostname + ':' + window.location.port}`;\r\n\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //states\r\n   const [openCopySnackbar, setOpenCopySnackbar] = useState(false);\r\n\r\n   //contexts\r\n   const { user } = useContext(UserContext);\r\n\r\n   //markup functions\r\n   const DarkTooltip = withStyles(() => ({\r\n      tooltip: {\r\n         backgroundColor: '#333333',\r\n         color: '#eeeeee',\r\n         fontSize: 11,\r\n      },\r\n      arrow: {\r\n         color: '#333333',\r\n      },\r\n   }))(Tooltip);\r\n\r\n   //functions\r\n   const handleOpenCopySnackbar = () => {\r\n      setOpenCopySnackbar(true);\r\n   };\r\n\r\n   const handleCloseCopySnackbar = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n         return;\r\n      }\r\n\r\n      setOpenCopySnackbar(false);\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <Container maxWidth=\"xs\" style={{ padding: 0, marginBottom: 10 }}>\r\n            <Paper className={classes.customCopyPaper} elevation=\"0\">\r\n               <Typography noWrap style={{ flexGrow: 1, margin: 'auto' }}>\r\n                  <Typography noWrap variant=\"body1\">\r\n                     {'stylediscover.in/' + user.userData.username}\r\n                  </Typography>\r\n               </Typography>\r\n               <DarkTooltip title=\"Copy Link\" arrow>\r\n                  <CopyToClipboard\r\n                     text={'https://stylediscover.in/' + user.userData.username}\r\n                  >\r\n                     <IconButton\r\n                        size=\"small\"\r\n                        className={classes.customFabButton}\r\n                        color=\"inherit\"\r\n                        onClick={handleOpenCopySnackbar}\r\n                     >\r\n                        <FilterNone className={classes.customCopyButton} />\r\n                     </IconButton>\r\n                  </CopyToClipboard>\r\n               </DarkTooltip>\r\n               <DarkTooltip title=\"Preview\" arrow>\r\n                  <IconButton\r\n                     size=\"small\"\r\n                     className={classes.customFabButton}\r\n                     color=\"inherit\"\r\n                     onClick={() => {\r\n                        const url =\r\n                           'https://stylediscover.in/' + user.userData.username;\r\n                        window.open(url, '_blank');\r\n                     }}\r\n                  >\r\n                     <OpenInNew className={classes.customCopyButton} />\r\n                  </IconButton>\r\n               </DarkTooltip>\r\n            </Paper>\r\n         </Container>\r\n\r\n         <Snackbar\r\n            anchorOrigin={{\r\n               vertical: 'bottom',\r\n               horizontal: 'center',\r\n            }}\r\n            open={openCopySnackbar}\r\n            autoHideDuration={6000}\r\n            onClose={handleCloseCopySnackbar}\r\n         >\r\n            <SnackbarContent\r\n               className={classes.customCopySnackbar}\r\n               action={\r\n                  <IconButton\r\n                     size=\"small\"\r\n                     aria-label=\"close\"\r\n                     onClick={handleCloseCopySnackbar}\r\n                     color=\"inherit\"\r\n                  >\r\n                     <Close fontSize=\"small\" />\r\n                  </IconButton>\r\n               }\r\n               message=\"Link Copied!\"\r\n            />\r\n         </Snackbar>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default CopyRedirect;\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\WishlistContext.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\WishlistEvents.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\WishlistReducer.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Wishlist.jsx",["344","345","346","347","348","349"],"//react imports\r\nimport React, { useContext } from 'react';\r\n\r\n//context and events\r\nimport { WishlistContext } from '../context/WishlistContext';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   Grid,\r\n   Avatar,\r\n   Link as MUILink,\r\n   makeStyles,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons imports\r\nimport { Add } from '@material-ui/icons';\r\n\r\n//components\r\nimport WishlistComponent from '../components/Wishlist/WishlistComponent';\r\nimport NonEditableComponentPost from '../components/ComponentPost/NonEditableComponentPost';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   customUsername: {\r\n      textAlign: 'center',\r\n      marginBottom: 20,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '600',\r\n      color: 'black',\r\n   },\r\n   customPaper: {\r\n      paddingTop: 20,\r\n      color: '#333333',\r\n      margin: '20px 0px',\r\n   },\r\n   customNoPostMessage: {\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '400',\r\n      textAlign: 'center',\r\n   },\r\n   customCreateButton: {\r\n      margin: 'auto',\r\n      display: 'flex',\r\n      padding: '10px 15px',\r\n      boxShadow: 'none',\r\n   },\r\n   customTitle: {\r\n      marginBottom: 20,\r\n      textAlign: 'center',\r\n   },\r\n});\r\n\r\nexport default function Wishlist() {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { wishlists } = useContext(WishlistContext);\r\n   const { user } = useContext(UserContext);\r\n\r\n   return (\r\n      <Container maxWidth=\"lg\" className=\"margin-top-80\">\r\n         <div>\r\n            {/* WISHLIST TITLE STARTS*/}\r\n            <Typography variant=\"h5\" className={classes.customTitle}>\r\n               Wishlist of{' '}\r\n               {user.userData.name !== ''\r\n                  ? user.userData.name\r\n                  : user.userData.username}\r\n            </Typography>\r\n            {/* WISHLIST TITLE ENDS */}\r\n\r\n            {/* USER WISHLISTS STARTS */}\r\n            {wishlists.wishlists.length === 0 && (\r\n               <Typography\r\n                  className={classes.customNoPostMessage}\r\n                  variant=\"body2\"\r\n               >\r\n                  No Wishlists\r\n               </Typography>\r\n            )}\r\n            <Grid container={true} spacing={2}>\r\n               {wishlists.wishlists.map((id) => {\r\n                  return (\r\n                     <Grid item={true} xs={4} md={3} lg={2} key={id}>\r\n                        <NonEditableComponentPost componentId={id} />\r\n                     </Grid>\r\n                  );\r\n               })}\r\n            </Grid>\r\n            {/* USER WISHLISTS ENDS */}\r\n         </div>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Wishlist\\WishlistComponent.jsx",["350"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\n\r\n//context and events\r\nimport { WishlistContext } from '../../context/WishlistContext';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { addWishlist, removeWishlist } from '../../events/WishlistEvents';\r\n\r\n//MUI Imports\r\nimport { Paper, CardMedia, makeStyles, Button } from '@material-ui/core';\r\n\r\n//MUI Icons\r\nimport { FavoriteBorder, Favorite } from '@material-ui/icons';\r\n\r\n//component events import\r\nimport { getComponentById } from '../../events/MainPostEvents';\r\n\r\n//style MUI\r\nconst useStyle = makeStyles({\r\n   ComponentImageRoot: {\r\n      backgroundPosition: 'top',\r\n   },\r\n   dialogPaper: {\r\n      width: '100%',\r\n   },\r\n   customBuyButton: {\r\n      width: '100%',\r\n      marginTop: 10,\r\n   },\r\n   customFavButton: {\r\n      width: '100%',\r\n      marginTop: 10,\r\n   },\r\n   dialogImgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n   },\r\n});\r\n\r\nexport default function WishlistComponent({ componentId }) {\r\n   //MUI style classes\r\n   const classes = useStyle();\r\n\r\n   //states\r\n   const [componentPostData, setComponentPostData] = useState(); //component post data\r\n\r\n   //use context\r\n   const { wishlists, wishlistDispatch } = useContext(WishlistContext);\r\n   const { user } = useContext(UserContext);\r\n\r\n   useEffect(() => {\r\n      getComponentById(componentId).then((data) => setComponentPostData(data));\r\n   }, []);\r\n\r\n   //Functions\r\n   const handleWishlist = async (event) => {\r\n      event.stopPropagation();\r\n\r\n      const wishlistData = {\r\n         component_id: componentId,\r\n      };\r\n\r\n      if (wishlists.wishlists.includes(componentId)) {\r\n         await removeWishlist(\r\n            user.userData.username,\r\n            wishlistData,\r\n            wishlistDispatch\r\n         );\r\n      } else {\r\n         await addWishlist(\r\n            user.userData.username,\r\n            wishlistData,\r\n            wishlistDispatch\r\n         );\r\n      }\r\n   };\r\n   return (\r\n      <div>\r\n         {/* WISHLIST COMPONENT STARTS */}\r\n         {componentPostData && (\r\n            <div>\r\n               <Paper square className={classes.dialogPaper}>\r\n                  <CardMedia\r\n                     image={componentPostData.media_url}\r\n                     className={classes.dialogImgStyles}\r\n                     classes={{\r\n                        root: classes.ComponentImageRoot,\r\n                     }}\r\n                  ></CardMedia>\r\n               </Paper>\r\n               <Button\r\n                  className={classes.customBuyButton}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={() => {\r\n                     window.open(componentPostData.page_url);\r\n                  }}\r\n                  disableElevation\r\n               >\r\n                  Buy on {componentPostData.site_records.shop_site}\r\n               </Button>\r\n               <br />\r\n               <Button\r\n                  className={classes.customFavButton}\r\n                  disabled={wishlists.loading}\r\n                  onClick={handleWishlist}\r\n                  variant=\"outlined\"\r\n                  disableElevation\r\n                  startIcon={\r\n                     wishlists.wishlists &&\r\n                     wishlists.wishlists.includes(componentId) ? (\r\n                        <Favorite style={{ width: 15, height: 15 }} />\r\n                     ) : (\r\n                        <FavoriteBorder style={{ width: 15, height: 15 }} />\r\n                     )\r\n                  }\r\n               >\r\n                  {wishlists.wishlists.includes(componentId) ? (\r\n                     <>Remove</>\r\n                  ) : (\r\n                     <>Add To Wishlist</>\r\n                  )}\r\n               </Button>\r\n            </div>\r\n         )}\r\n         {/* WISHLIST COMPONENT ENDS */}\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\MainPost\\EditableMainPost.jsx",["351","352","353","354","355","356"],"//react imports\r\nimport React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n//crypto imports\r\nimport AES from 'crypto-js/aes';\r\n\r\n//import component\r\nimport EditableComponentPost from '../ComponentPost/EditableComponentPost';\r\nimport AddComponents from '../General/AddComponents';\r\n\r\n//time ago\r\nimport TimeAgo from 'react-timeago';\r\n\r\n//context and events imports\r\nimport { MainPostContext } from '../../context/MainPostContext';\r\nimport {\r\n   getMainPostById,\r\n   editMainPost,\r\n   deleteMainPost,\r\n} from '../../events/MainPostEvents';\r\n\r\n//MUI Imports\r\nimport {\r\n   Card,\r\n   CardMedia,\r\n   CardContent,\r\n   Grid,\r\n   makeStyles,\r\n   CardHeader,\r\n   Typography,\r\n   Avatar,\r\n   IconButton,\r\n   Menu,\r\n   MenuItem,\r\n   Link as MUILink,\r\n   Dialog,\r\n   DialogTitle,\r\n   DialogContent,\r\n   DialogActions,\r\n   Button,\r\n   CircularProgress,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons imports\r\nimport { Delete, Edit, MoreVert } from '@material-ui/icons';\r\n\r\n//MUI make style\r\nconst useStyles = makeStyles({\r\n   imgStyle: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      WebkitTapHighlightColor: 'transparent',\r\n      cursor: 'pointer',\r\n   },\r\n   mainPostRoot: {\r\n      backgroundPosition: 'cover',\r\n   },\r\n   custonFavButton: {\r\n      margin: 0,\r\n      top: 'auto',\r\n      bottom: 55,\r\n      right: 0,\r\n      left: 10,\r\n      position: 'relative',\r\n      background: '#eee',\r\n   },\r\n   customSize: {\r\n      height: 40,\r\n      width: 40,\r\n   },\r\n   custionButtonRoot: {\r\n      minHeight: 0,\r\n   },\r\n   customChangeInput: {\r\n      display: 'None',\r\n   },\r\n   customChangeButton: {\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      padding: 10,\r\n      width: '100%',\r\n   },\r\n   customProgress: {\r\n      marginLeft: 10,\r\n   },\r\n});\r\n\r\nexport default function EditableMainPost({ id }) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { mainPosts, mainPostDispatch } = useContext(MainPostContext);\r\n\r\n   //states\r\n   const [mainPostData, setMainPostData] = useState();\r\n   const [editMenu, setEditMenu] = useState(null);\r\n   const [mediaPreview, setMediaPreview] = useState();\r\n\r\n   //edit dialog\r\n   const [changeDialogOpen, setChangeDialogOpen] = useState(false);\r\n   const [mediaUrl, setMediaUrl] = useState('');\r\n\r\n   //deelte dialog\r\n   const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n\r\n   //add component dialog states\r\n   const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n   const encryptedId = AES.encrypt(`${id}`, 'Pjmaq7EV2C7lQeaUuLVD')\r\n      .toString()\r\n      .replace(/\\//g, '*');\r\n\r\n   //use history\r\n   const history = useHistory();\r\n\r\n   //use effect\r\n   useEffect(() => {\r\n      getMainPostById(id, mainPostDispatch).then((data) =>\r\n         setMainPostData(data)\r\n      );\r\n   }, []);\r\n\r\n   //functions\r\n   const OpenEditMenu = (event) => {\r\n      setEditMenu(event.currentTarget);\r\n   };\r\n\r\n   const CloseEditMenu = () => {\r\n      setEditMenu(null);\r\n   };\r\n\r\n   //for change dialog\r\n   const handleChangeDialogClose = () => {\r\n      setChangeDialogOpen(false);\r\n      mainPostDispatch({ type: 'UNSET_ERROR_DATA' });\r\n      setMediaPreview();\r\n   };\r\n\r\n   const handleChangeDialogOpen = () => {\r\n      setMediaUrl('');\r\n      setChangeDialogOpen(true);\r\n   };\r\n\r\n   const handleUploadChangeMedia = (event) => {\r\n      if (event.target.files && event.target.files[0]) {\r\n         setMediaPreview(URL.createObjectURL(event.target.files[0]));\r\n         setMediaUrl(event.target.files[0]);\r\n      }\r\n   };\r\n\r\n   const handleChangeMedia = async (event) => {\r\n      event.preventDefault();\r\n      var newMainPostData = new FormData();\r\n      newMainPostData.append('media_url', mediaUrl);\r\n      mainPostData.component_posts.forEach((component) => {\r\n         newMainPostData.append('component_posts', component);\r\n      });\r\n\r\n      await editMainPost(\r\n         newMainPostData,\r\n         mainPostData.id,\r\n         mainPostDispatch\r\n      ).then(async () => {\r\n         await getMainPostById(id, mainPostDispatch).then((data) =>\r\n            setMainPostData(data)\r\n         );\r\n      });\r\n      handleChangeDialogClose();\r\n      CloseEditMenu();\r\n   };\r\n\r\n   //for Delete dialog\r\n   const handleDeleteDialogClose = () => {\r\n      setDeleteDialogOpen(false);\r\n   };\r\n\r\n   const handleDeleteDialogOpen = () => {\r\n      setDeleteDialogOpen(true);\r\n   };\r\n\r\n   const handleDeletePost = async (event) => {\r\n      event.preventDefault();\r\n      await deleteMainPost(mainPostData.id, mainPostDispatch);\r\n      handleDeleteDialogClose();\r\n   };\r\n\r\n   //for adding components\r\n   const handleAddDialogOpen = () => {\r\n      setAddDialogOpen(true);\r\n   };\r\n\r\n   const handleAddComponent = async (list) => {\r\n      var newMainPostData = new FormData();\r\n      mainPostData.component_posts.forEach((component) => {\r\n         newMainPostData.append('component_posts', component);\r\n      });\r\n\r\n      list.forEach((component) => {\r\n         newMainPostData.append('component_posts', component);\r\n      });\r\n\r\n      await editMainPost(\r\n         newMainPostData,\r\n         mainPostData.id,\r\n         mainPostDispatch\r\n      ).then(async () => {\r\n         await getMainPostById(id, mainPostDispatch).then((data) =>\r\n            setMainPostData(data)\r\n         );\r\n      });\r\n      handleChangeDialogClose();\r\n      CloseEditMenu();\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         {mainPostData && (\r\n            <Card>\r\n               {/* CARD HEADER STARTS */}\r\n               <CardHeader\r\n                  title={\r\n                     <Typography variant=\"body1\" style={{ fontSize: 14 }}>\r\n                        {mainPostData.name\r\n                           ? mainPostData.name\r\n                           : mainPostData.username}\r\n                     </Typography>\r\n                  }\r\n                  subheader={\r\n                     <Typography variant=\"body2\" style={{ fontSize: 11 }}>\r\n                        <TimeAgo\r\n                           date={mainPostData.created_at}\r\n                           minPeriod={30}\r\n                        />\r\n                     </Typography>\r\n                  }\r\n                  avatar={\r\n                     mainPostData.profile_picture !== null ? (\r\n                        <Avatar\r\n                           src={mainPostData.profile_picture}\r\n                           alt={mainPostData.username}\r\n                           style={{\r\n                              width: 30,\r\n                              height: 30,\r\n                           }}\r\n                        ></Avatar>\r\n                     ) : (\r\n                        <Avatar\r\n                           alt={mainPostData.username}\r\n                           style={{\r\n                              width: 30,\r\n                              height: 30,\r\n                           }}\r\n                        ></Avatar>\r\n                     )\r\n                  }\r\n                  action={\r\n                     <div>\r\n                        <IconButton\r\n                           style={{ margin: '0px 5px' }}\r\n                           aria-controls=\"edit-menu\"\r\n                           aria-haspopup=\"true\"\r\n                           onClick={OpenEditMenu}\r\n                        >\r\n                           <MoreVert />\r\n                        </IconButton>\r\n                     </div>\r\n                  }\r\n               ></CardHeader>\r\n               {/* CARD HEADER ENDS */}\r\n\r\n               {/* MAIN IMAGE STARTS */}\r\n               {mainPostData.media_type === 'IM' && (\r\n                  <CardMedia\r\n                     className={classes.imgStyle}\r\n                     image={mainPostData.media_url}\r\n                     classes={{\r\n                        root: classes.mainPostRoot,\r\n                     }}\r\n                     onClick={() => {\r\n                        history.push(`/post/${encryptedId}`);\r\n                     }}\r\n                  ></CardMedia>\r\n               )}\r\n               {mainPostData.media_type === 'VD' && (\r\n                  <CardMedia\r\n                     image={mainPostData.media_url}\r\n                     component=\"video\"\r\n                     autoPlay\r\n                     loop\r\n                     muted\r\n                     onClick={() => {\r\n                        history.push(`/post/${encryptedId}`);\r\n                     }}\r\n                     style={{ cursor: 'pointer' }}\r\n                  ></CardMedia>\r\n               )}\r\n               {/* MAIN IMAGE ENDS */}\r\n\r\n               {/* COMPONENT IMAGES START */}\r\n               <CardContent>\r\n                  <Grid container={true} spacing={2}>\r\n                     {mainPostData.component_posts.length > 0 &&\r\n                        mainPostData.component_posts\r\n                           .slice(0, 8)\r\n                           .map((componentId) => {\r\n                              return (\r\n                                 <Grid item xs={3} key={componentId}>\r\n                                    <EditableComponentPost\r\n                                       componentId={componentId}\r\n                                       mainPostId={id}\r\n                                       mainPostComponentList={\r\n                                          mainPostData.component_posts\r\n                                       }\r\n                                       userId={mainPostData.user_id}\r\n                                       refreshMainPost={(data) =>\r\n                                          setMainPostData(data)\r\n                                       }\r\n                                    />\r\n                                 </Grid>\r\n                              );\r\n                           })}\r\n                  </Grid>\r\n               </CardContent>\r\n               {/* COMPONENT IMAGES END */}\r\n            </Card>\r\n         )}\r\n\r\n         {/* EDIT MENU ITEMS STARTS */}\r\n         <Menu\r\n            id=\"edit-menu\"\r\n            anchorEl={editMenu}\r\n            keepMounted={true}\r\n            open={Boolean(editMenu)}\r\n            onClose={CloseEditMenu}\r\n         >\r\n            <MenuItem onClick={handleChangeDialogOpen}>\r\n               <Typography variant=\"body1\">\r\n                  Change{' '}\r\n                  {mainPostData &&\r\n                     (mainPostData.media_type === 'VD' ? 'Video' : 'Image')}\r\n               </Typography>\r\n            </MenuItem>\r\n            <MenuItem\r\n               onClick={handleAddDialogOpen}\r\n               disabled={\r\n                  mainPostData\r\n                     ? mainPostData.component_posts.length >= 8\r\n                     : false\r\n               }\r\n            >\r\n               <Typography variant=\"body1\">Add Components</Typography>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleDeleteDialogOpen}>\r\n               <Typography variant=\"body1\" style={{ color: 'red' }}>\r\n                  Delete\r\n               </Typography>\r\n            </MenuItem>\r\n         </Menu>\r\n         {/* EDIT MENU ITEMS ENDS */}\r\n\r\n         {/* ADD COMPONENT STARTS */}\r\n         {mainPostData && (\r\n            <AddComponents\r\n               openDialog={addDialogOpen}\r\n               media={mainPostData.media_url}\r\n               mediaType={mainPostData.media_type}\r\n               handleSubmit={(list) => {\r\n                  handleAddComponent(list);\r\n               }}\r\n               closeDialog={(close) => setAddDialogOpen(close)}\r\n            />\r\n         )}\r\n         {/* ADD COMPONENT ENDS */}\r\n\r\n         {/* CHANGE IMAGE/VIDEO DIALOG STARTS */}\r\n         <Dialog\r\n            maxWidth=\"lg\"\r\n            open={changeDialogOpen}\r\n            onClose={handleChangeDialogClose}\r\n            aria-labelledby=\"change-component-dialog\"\r\n            PaperProps={{\r\n               style: {\r\n                  backgroundColor: '#eeeeee',\r\n                  color: '#333333',\r\n                  width: 350,\r\n               },\r\n            }}\r\n         >\r\n            <DialogTitle id=\"change-component-dialog\">\r\n               Change{' '}\r\n               {mainPostData &&\r\n                  (mainPostData.media_type === 'VD' ? 'Video' : 'Image')}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n               {mediaPreview && mainPostData.media_type === 'IM' && (\r\n                  <CardMedia\r\n                     className={classes.imgStyle}\r\n                     image={mediaPreview}\r\n                     classes={{\r\n                        root: classes.mainPostRoot,\r\n                     }}\r\n                  ></CardMedia>\r\n               )}\r\n               {mediaPreview && mainPostData.media_type === 'VD' && (\r\n                  <CardMedia\r\n                     image={mediaPreview}\r\n                     component=\"video\"\r\n                     autoPlay\r\n                     loop\r\n                     muted\r\n                  ></CardMedia>\r\n               )}\r\n               {mainPostData && mainPostData.media_type === 'IM' && (\r\n                  <input\r\n                     accept=\"image/*\"\r\n                     className={classes.customChangeInput}\r\n                     id=\"upload-component\"\r\n                     type=\"file\"\r\n                     onChange={handleUploadChangeMedia}\r\n                     disabled={Boolean(mediaUrl)}\r\n                  />\r\n               )}\r\n               {mainPostData && mainPostData.media_type === 'VD' && (\r\n                  <input\r\n                     accept=\"video/*\"\r\n                     className={classes.customChangeInput}\r\n                     id=\"upload-component\"\r\n                     type=\"file\"\r\n                     onChange={handleUploadChangeMedia}\r\n                     disabled={Boolean(mediaUrl)}\r\n                  />\r\n               )}\r\n               <label htmlFor=\"upload-component\">\r\n                  <Button\r\n                     variant=\"outlined\"\r\n                     color=\"primary\"\r\n                     className={classes.customChangeButton}\r\n                     component=\"span\"\r\n                     disabled={Boolean(mediaUrl)}\r\n                  >\r\n                     Choose{' '}\r\n                     {mainPostData &&\r\n                        (mainPostData.media_type === 'VD'\r\n                           ? 'A Video'\r\n                           : 'An Image')}\r\n                  </Button>\r\n               </label>\r\n            </DialogContent>\r\n            <DialogActions>\r\n               <Button\r\n                  onClick={handleChangeDialogClose}\r\n                  color=\"inherit\"\r\n                  disabled={mainPosts.loading}\r\n               >\r\n                  Cancel\r\n               </Button>\r\n               <Button\r\n                  onClick={handleChangeMedia}\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  disabled={mainPosts.loading || !Boolean(mediaUrl)}\r\n               >\r\n                  Change{' '}\r\n                  {mainPostData &&\r\n                     (mainPostData.media_type === 'VD' ? 'Video' : 'Image')}\r\n                  {mainPosts.loading && (\r\n                     <CircularProgress\r\n                        size={20}\r\n                        className={classes.customProgress}\r\n                     />\r\n                  )}\r\n               </Button>\r\n            </DialogActions>\r\n         </Dialog>\r\n         {/* CHANGE IMAGE/VIDEO DIALOG ENDS */}\r\n\r\n         {/* DELTE DIALOG STARTS */}\r\n         <Dialog\r\n            maxWidth=\"lg\"\r\n            open={deleteDialogOpen}\r\n            onClose={handleDeleteDialogClose}\r\n            aria-labelledby=\"delete-component-dialog\"\r\n            PaperProps={{\r\n               style: {\r\n                  backgroundColor: '#eeeeee',\r\n                  color: '#333333',\r\n                  width: 350,\r\n               },\r\n            }}\r\n         >\r\n            <DialogTitle id=\"delete-component-dialog\">Delete Post</DialogTitle>\r\n            <DialogContent>\r\n               <Typography>Delete Post?</Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n               <Button\r\n                  onClick={handleDeleteDialogClose}\r\n                  color=\"inherit\"\r\n                  disabled={mainPosts.loading}\r\n               >\r\n                  Cancel\r\n               </Button>\r\n               <Button\r\n                  onClick={handleDeletePost}\r\n                  style={{ color: 'red' }}\r\n                  disabled={mainPosts.loading}\r\n               >\r\n                  Delete\r\n                  {mainPosts.loading && (\r\n                     <CircularProgress\r\n                        size={20}\r\n                        className={classes.customProgress}\r\n                     />\r\n                  )}\r\n               </Button>\r\n            </DialogActions>\r\n         </Dialog>\r\n         {/* DELTE DIALOG ENDS */}\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Login\\FacebookLogin.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\ChangeUsername.jsx",["357","358"],"//react imports\r\nimport React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   TextField,\r\n   Link as MUILink,\r\n   CircularProgress,\r\n   makeStyles,\r\n} from '@material-ui/core';\r\n\r\n//context and events import\r\nimport { UserContext } from '../context/UserContext';\r\nimport { updateUsername } from '../events/UserEvents';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   inputStyles: {\r\n      marginTop: 20,\r\n   },\r\n   submitStyles: {\r\n      marginTop: 20,\r\n      marginRight: 10,\r\n   },\r\n   createAccount: {\r\n      marginLeft: 5,\r\n   },\r\n   customError: {\r\n      color: 'red',\r\n      fontSize: '0.8rem',\r\n      marginTop: 10,\r\n   },\r\n   customProgress: {\r\n      marginLeft: 10,\r\n   },\r\n});\r\n\r\nexport default function ChangeUsername(props) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use state\r\n   const [newUsername, setNewUsername] = useState('');\r\n\r\n   //use context\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //use history\r\n   let history = props.history;\r\n\r\n   //funtions\r\n   const handleChange = (event) => {\r\n      //set username\r\n      if (event.target.name === 'username') {\r\n         setNewUsername(event.target.value);\r\n      }\r\n   };\r\n\r\n   const handleSubmitNo = async (event) => {\r\n      event.preventDefault();\r\n      const newData = {\r\n         username: user.userData.username,\r\n         modified_username: true,\r\n      };\r\n      await updateUsername(newData, user.userData.id, userDispatch);\r\n   };\r\n   const handleSubmitChange = async (event) => {\r\n      event.preventDefault();\r\n      const newData = {\r\n         username: newUsername.toLowerCase().replace(/\\s/g, ''),\r\n         modified_username: true,\r\n      };\r\n      await updateUsername(newData, user.userData.id, userDispatch);\r\n   };\r\n\r\n   if (user.userData.modified_username && history) {\r\n      history.push('/profile');\r\n   }\r\n\r\n   return (\r\n      <Container className=\"margin-top-80\" maxWidth=\"sm\">\r\n         <Paper className={classes.paperStyles}>\r\n            <Typography variant=\"h4\">Change Username</Typography>\r\n            {!user.userData.modified_username && (\r\n               <div\r\n                  style={{\r\n                     marginTop: 10,\r\n                  }}\r\n               >\r\n                  <Typography variant=\"body1\">\r\n                     Your randomly generated username is{' '}\r\n                     <b>{`${user.userData.username}`}</b>\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                     Do you wnat to change it?\r\n                  </Typography>\r\n               </div>\r\n            )}\r\n            {user.userData.modified_username && (\r\n               <div\r\n                  style={{\r\n                     marginTop: 10,\r\n                  }}\r\n               >\r\n                  <Typography variant=\"body1\">Username Changed.</Typography>\r\n                  {/* <Typography variant=\"body2\">\r\n                     Do you wnat to change it?\r\n                  </Typography> */}\r\n               </div>\r\n            )}\r\n            <form noValidate>\r\n               <TextField\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  size=\"small\"\r\n                  fullWidth={true}\r\n                  label=\"New Username\"\r\n                  type=\"text\"\r\n                  value={newUsername}\r\n                  helperText={\r\n                     user.errorData.username ? user.errorData.username[0] : null\r\n                  }\r\n                  error={user.errorData.username ? true : false}\r\n                  onChange={handleChange}\r\n                  className={classes.inputStyles}\r\n                  variant=\"outlined\"\r\n                  disabled={user.userData.modified_username}\r\n               />\r\n               <br />\r\n               {user.errorData.detail && (\r\n                  <Typography variant=\"body2\" className={classes.customError}>\r\n                     {user.errorData.detail}\r\n                  </Typography>\r\n               )}\r\n               <div className=\"usernameLogin\">\r\n                  <Button\r\n                     type=\"submit\"\r\n                     color=\"primary\"\r\n                     variant=\"outlined\"\r\n                     disableElevation\r\n                     className={classes.submitStyles}\r\n                     disabled={user.loading || user.userData.modified_username}\r\n                     onClick={handleSubmitNo}\r\n                  >\r\n                     No\r\n                     {newUsername === '' && user.loading && (\r\n                        <CircularProgress\r\n                           size={20}\r\n                           className={classes.customProgress}\r\n                        />\r\n                     )}\r\n                  </Button>\r\n                  <Button\r\n                     type=\"submit\"\r\n                     color=\"primary\"\r\n                     variant=\"contained\"\r\n                     disableElevation\r\n                     className={classes.submitStyles}\r\n                     disabled={\r\n                        newUsername === '' ||\r\n                        user.loading ||\r\n                        user.userData.modified_username\r\n                     }\r\n                     onClick={handleSubmitChange}\r\n                  >\r\n                     Change Username\r\n                     {newUsername === '' && user.loading && (\r\n                        <CircularProgress\r\n                           size={20}\r\n                           className={classes.customProgress}\r\n                        />\r\n                     )}\r\n                  </Button>\r\n               </div>\r\n            </form>\r\n         </Paper>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\ResetPassword.jsx",["359","360"],"//react imports\r\nimport React, { useContext, useState } from 'react';\r\n\r\n//component imports\r\nimport ResetEmailSentScreen from '../components/ResetPassword/ResetEmailSentScreen';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   TextField,\r\n   Link as MUILink,\r\n   CircularProgress,\r\n   makeStyles,\r\n} from '@material-ui/core';\r\n\r\n//context and events import\r\nimport { UserContext } from '../context/UserContext';\r\nimport { resetPasswordSend } from '../events/UserEvents';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   inputStyles: {\r\n      marginTop: 20,\r\n   },\r\n   submitStyles: {\r\n      marginTop: 20,\r\n      marginRight: 10,\r\n   },\r\n   createAccount: {\r\n      marginLeft: 5,\r\n   },\r\n   customError: {\r\n      color: 'red',\r\n      fontSize: '0.8rem',\r\n      marginTop: 10,\r\n   },\r\n   customProgress: {\r\n      marginLeft: 10,\r\n   },\r\n});\r\nexport default function ResetPassword(props) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use state\r\n   const [email, setEmail] = useState('');\r\n   const [emailSent, setEmailSent] = useState(false);\r\n\r\n   //use context\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //use history\r\n   let history = props.history;\r\n\r\n   //funtions\r\n   const handleChange = (event) => {\r\n      //set email\r\n      if (event.target.name === 'email') {\r\n         setEmail(event.target.value);\r\n      }\r\n   };\r\n\r\n   const handleSubmitChange = async (event) => {\r\n      event.preventDefault();\r\n\r\n      const emailData = {\r\n         email,\r\n      };\r\n\r\n      const result = await resetPasswordSend(emailData, userDispatch);\r\n\r\n      if (result === 200) {\r\n         setEmailSent(true);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <Container className=\"margin-top-80\" maxWidth=\"sm\">\r\n         {!emailSent && (\r\n            <Paper className={classes.paperStyles}>\r\n               <Typography variant=\"h4\">Reset Password</Typography>\r\n               <div\r\n                  style={{\r\n                     marginTop: 10,\r\n                  }}\r\n               >\r\n                  <Typography variant=\"body2\" align=\"justify\">\r\n                     Enter the email address you used to create an account on\r\n                     StyleDiscover.\r\n                  </Typography>\r\n               </div>\r\n               <form noValidate>\r\n                  <TextField\r\n                     id=\"email\"\r\n                     name=\"email\"\r\n                     size=\"small\"\r\n                     fullWidth={true}\r\n                     label=\"Email\"\r\n                     type=\"text\"\r\n                     value={email}\r\n                     helperText={\r\n                        user.errorData.email ? user.errorData.email[0] : null\r\n                     }\r\n                     error={user.errorData.email ? true : false}\r\n                     onChange={handleChange}\r\n                     className={classes.inputStyles}\r\n                     variant=\"outlined\"\r\n                     disabled={user.userData.modified_username}\r\n                  />\r\n                  <br />\r\n                  {user.errorData.detail && (\r\n                     <Typography\r\n                        variant=\"body2\"\r\n                        className={classes.customError}\r\n                     >\r\n                        {user.errorData.detail}\r\n                     </Typography>\r\n                  )}\r\n                  <div className=\"usernameLogin\">\r\n                     <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        disableElevation\r\n                        className={classes.submitStyles}\r\n                        disabled={email === '' || user.loading}\r\n                        onClick={handleSubmitChange}\r\n                     >\r\n                        Send Reset Link\r\n                        {user.loading && (\r\n                           <CircularProgress\r\n                              size={20}\r\n                              className={classes.customProgress}\r\n                           />\r\n                        )}\r\n                     </Button>\r\n                  </div>\r\n               </form>\r\n            </Paper>\r\n         )}\r\n         {emailSent && <ResetEmailSentScreen />}\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ResetPassword\\ResetEmailSentScreen.jsx",["361","362","363","364","365","366"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   Link as MUILink,\r\n} from '@material-ui/core';\r\nimport { Check } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   customVerifiedText: {\r\n      marginLeft: '10px',\r\n      fontSize: '30px',\r\n      color: 'green',\r\n   },\r\n   customHeroButton: {\r\n      marginTop: 10,\r\n      width: '100%',\r\n   },\r\n});\r\n\r\nfunction ResetEmailSentScreen() {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Paper className={classes.paperStyles}>\r\n         <div>\r\n            <Check style={{ fontSize: 25, color: 'green' }} />\r\n            <Typography\r\n               variant=\"h4\"\r\n               className={classes.customVerifiedText}\r\n               display=\"inline\"\r\n            >\r\n               Reset Link Sent!\r\n            </Typography>\r\n            <br />\r\n            <div\r\n               style={{\r\n                  marginTop: 10,\r\n               }}\r\n            >\r\n               <Typography variant=\"body1\" align=\"justify\">\r\n                  Please check your email for reset link.\r\n               </Typography>\r\n            </div>\r\n         </div>\r\n      </Paper>\r\n   );\r\n}\r\n\r\nexport default ResetEmailSentScreen;\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\ResetPasswordConfirm.jsx",["367"],"//react imports\r\nimport React, { useState, useContext } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//import context and events\r\nimport { UserContext } from '../context/UserContext';\r\nimport { resetPasswordConfirm } from '../events/UserEvents';\r\n\r\n//components\r\nimport LoginAfterResetScreen from '../components/ResetPassword/LoginAfterResetScreen';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   TextField,\r\n   CircularProgress,\r\n} from '@material-ui/core';\r\nimport { Check } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   inputStyles: {\r\n      marginTop: 20,\r\n   },\r\n   submitStyles: {\r\n      marginTop: 20,\r\n   },\r\n   createAccount: {\r\n      marginLeft: 5,\r\n   },\r\n   customError: {\r\n      color: 'red',\r\n      fontSize: '0.8rem',\r\n      marginTop: 10,\r\n   },\r\n   customProgress: {\r\n      marginLeft: 10,\r\n   },\r\n});\r\n\r\nexport default function ResetPasswordConfirm() {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //states\r\n   const [new_password1, setNewPassword] = useState('');\r\n   const [renew_Password, setReNewPassword] = useState('');\r\n   const [resetSuccess, setResetSuccess] = useState(false);\r\n\r\n   //get the reset token\r\n   let { uid, token } = useParams();\r\n\r\n   //function\r\n   const handleChange = (event) => {\r\n      //set new_password1\r\n      if (event.target.name === 'new_password1') {\r\n         setNewPassword(event.target.value);\r\n      }\r\n\r\n      //set new_password2\r\n      if (event.target.name === 'new_password2') {\r\n         setReNewPassword(event.target.value);\r\n      }\r\n   };\r\n\r\n   const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n\r\n      const newPasswordData = {\r\n         uid,\r\n         token,\r\n         new_password1,\r\n         new_password2: renew_Password,\r\n      };\r\n\r\n      const result = await resetPasswordConfirm(newPasswordData, userDispatch);\r\n\r\n      if (result === 200) {\r\n         setResetSuccess(true);\r\n      }\r\n   };\r\n\r\n   return (\r\n      <Container className=\"margin-top-80\" maxWidth=\"sm\">\r\n         {!resetSuccess && (\r\n            <Paper className={classes.paperStyles}>\r\n               <Typography variant=\"h4\">Reset Password</Typography>\r\n               <form noValidate onSubmit={handleSubmit}>\r\n                  <TextField\r\n                     id=\"new_password1\"\r\n                     name=\"new_password1\"\r\n                     size=\"small\"\r\n                     fullWidth={true}\r\n                     label=\"New Password\"\r\n                     type=\"password\"\r\n                     value={new_password1}\r\n                     helperText={\r\n                        user.errorData.new_password1\r\n                           ? user.errorData.new_password1[0]\r\n                           : null\r\n                     }\r\n                     error={user.errorData.new_password1 ? true : false}\r\n                     onChange={handleChange}\r\n                     className={classes.inputStyles}\r\n                     classes={{\r\n                        root: classes.dialogTextFieldRoot,\r\n                     }}\r\n                     InputProps={{\r\n                        className: classes.dialogTextFieldRoot,\r\n                     }}\r\n                     InputLabelProps={{\r\n                        className: classes.dialogTextFieldRoot,\r\n                     }}\r\n                     variant=\"outlined\"\r\n                     autoComplete=\"off\"\r\n                  />\r\n                  <br />\r\n                  <TextField\r\n                     id=\"new_password2\"\r\n                     name=\"new_password2\"\r\n                     size=\"small\"\r\n                     fullWidth={true}\r\n                     label=\"Confirm New Password\"\r\n                     type=\"password\"\r\n                     value={renew_Password}\r\n                     helperText={\r\n                        user.errorData.new_password2\r\n                           ? user.errorData.new_password2[0]\r\n                           : null\r\n                     }\r\n                     error={user.errorData.new_password2 ? true : false}\r\n                     onChange={handleChange}\r\n                     className={classes.inputStyles}\r\n                     classes={{\r\n                        root: classes.dialogTextFieldRoot,\r\n                     }}\r\n                     InputProps={{\r\n                        className: classes.dialogTextFieldRoot,\r\n                     }}\r\n                     InputLabelProps={{\r\n                        className: classes.dialogTextFieldRoot,\r\n                     }}\r\n                     variant=\"outlined\"\r\n                     autoComplete=\"off\"\r\n                  />\r\n                  <br />\r\n                  {user.errorData.non_field_errors && (\r\n                     <Typography\r\n                        variant=\"body2\"\r\n                        className={classes.customError}\r\n                     >\r\n                        {user.errorData.non_field_errors}\r\n                     </Typography>\r\n                  )}\r\n\r\n                  {user.errorData.token && (\r\n                     <Typography\r\n                        variant=\"body2\"\r\n                        className={classes.customError}\r\n                     >\r\n                        {user.errorData.token}\r\n                     </Typography>\r\n                  )}\r\n                  <div className=\"usernameLogin\">\r\n                     <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        disableElevation\r\n                        className={classes.submitStyles}\r\n                        disabled={user.loading}\r\n                     >\r\n                        Reset New Password\r\n                        {user.loading && (\r\n                           <CircularProgress\r\n                              size={20}\r\n                              className={classes.customProgress}\r\n                           />\r\n                        )}\r\n                     </Button>\r\n                  </div>\r\n               </form>\r\n            </Paper>\r\n         )}\r\n         {resetSuccess && <LoginAfterResetScreen />}\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ResetPassword\\LoginAfterResetScreen.jsx",["368"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//MUI Imports\r\nimport { Typography, Button, Container, Paper } from '@material-ui/core';\r\nimport { Check } from '@material-ui/icons';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   customVerifiedText: {\r\n      marginLeft: '10px',\r\n      fontSize: '30px',\r\n      color: 'green',\r\n   },\r\n   customHeroButton: {\r\n      marginTop: 10,\r\n      width: '100%',\r\n   },\r\n});\r\n\r\nfunction LoginAfterResetScreen() {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   return (\r\n      <Paper className={classes.paperStyles}>\r\n         <div>\r\n            <Check style={{ fontSize: 25, color: 'green' }} />\r\n            <Typography\r\n               variant=\"h4\"\r\n               className={classes.customVerifiedText}\r\n               display=\"inline\"\r\n            >\r\n               Password Reset Successfully!\r\n            </Typography>\r\n            <br />\r\n            <div\r\n               style={{\r\n                  marginTop: 10,\r\n                  marginBottom: 10,\r\n               }}\r\n            >\r\n               <Typography variant=\"body1\" align=\"justify\">\r\n                  Please login again.\r\n               </Typography>\r\n            </div>\r\n            {/* <Typography variant=\"body1\">Login now!</Typography> */}\r\n            <Button\r\n               className={classes.customHeroButton}\r\n               variant=\"contained\"\r\n               component={Link}\r\n               color=\"primary\"\r\n               to=\"/login\"\r\n               disableElevation\r\n            >\r\n               Login\r\n            </Button>\r\n         </div>\r\n      </Paper>\r\n   );\r\n}\r\n\r\nexport default LoginAfterResetScreen;\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\AnalyticsEvents.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\TermsAndConditions.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Create\\MyComponents.jsx",["369","370","371","372","373","374","375"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\n\r\n//context and events imports\r\nimport { MainPostContext } from '../../context/MainPostContext';\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { MyComponentsContext } from '../../context/MyComponentContext';\r\n\r\n//MUI Imports\r\nimport {\r\n   Paper,\r\n   CardMedia,\r\n   makeStyles,\r\n   Typography,\r\n   FormControl,\r\n   InputLabel,\r\n   Select,\r\n   MenuItem,\r\n   Grid,\r\n} from '@material-ui/core';\r\nimport SelectableComponentPost from './SelectableComponentPost';\r\n\r\n//style MUI\r\nconst useStyle = makeStyles({\r\n   imgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      cursor: 'pointer',\r\n      position: 'relative',\r\n   },\r\n   ComponentImageRoot: {\r\n      backgroundPosition: 'top',\r\n   },\r\n   custonFavButton: {\r\n      margin: 0,\r\n      bottom: 3,\r\n      left: 3,\r\n      position: 'absolute',\r\n      background: '#eee',\r\n   },\r\n   customSize: {\r\n      height: 20,\r\n      width: 20,\r\n   },\r\n   custionButtonRoot: {\r\n      minHeight: 0,\r\n   },\r\n   dialogPaper: {\r\n      width: 250,\r\n   },\r\n   customBuyButton: {\r\n      width: 250,\r\n      marginTop: 10,\r\n   },\r\n   customFavButton: {\r\n      width: 250,\r\n      marginTop: 10,\r\n   },\r\n   customDialogContent: {\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n   },\r\n   dialogImgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n   },\r\n});\r\n\r\nexport default function MyComponents() {\r\n   //MUI style classes\r\n   const classes = useStyle();\r\n\r\n   //   use state\r\n   const [selectedComponent, setSelectedComponent] = useState([]);\r\n\r\n   //use context\r\n   const { mainPostDispatch } = useContext(MainPostContext);\r\n   const { user } = useContext(UserContext);\r\n   const { myComponentData, componentDispatch } = useContext(\r\n      MyComponentsContext\r\n   );\r\n\r\n   //funtion\r\n\r\n   const handleSelect = (component) => (event) => {\r\n      event.preventDefault();\r\n      if (!myComponentData.addComponents.includes(component)) {\r\n         componentDispatch({\r\n            type: 'ADD_COMPONENT',\r\n            id: [component],\r\n         });\r\n         setSelectedComponent([...selectedComponent, component]);\r\n      }\r\n   };\r\n   return (\r\n      <div>\r\n         <Grid container spacing={2} style={{ padding: '0px' }}>\r\n            {selectedComponent.map(\r\n               (component, index) =>\r\n                  myComponentData.addComponents.includes(component) && (\r\n                     <Grid item xs={4} sm={3} key={index}>\r\n                        <div onClick={handleSelect(component)}>\r\n                           <SelectableComponentPost componentId={component} />\r\n                        </div>\r\n                     </Grid>\r\n                  )\r\n            )}\r\n         </Grid>\r\n         <br />\r\n         <FormControl\r\n            className={classes.formControl}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n         >\r\n            <InputLabel id=\"mycomponents-label\">My Components</InputLabel>\r\n            <Select\r\n               labelId=\"mycomponents-label\"\r\n               id=\"mycomponents\"\r\n               label=\"My Components\"\r\n               onChange={(event) => event.preventDefault()}\r\n            >\r\n               <Grid\r\n                  container\r\n                  spacing={2}\r\n                  style={{ padding: '0px 10px', maxHeight: 250 }}\r\n               >\r\n                  {myComponentData.myCollection.map((component, index) => (\r\n                     <Grid item xs={4} sm={3} key={index}>\r\n                        <div onClick={handleSelect(component)}>\r\n                           <SelectableComponentPost componentId={component} />\r\n                        </div>\r\n                     </Grid>\r\n                  ))}\r\n               </Grid>\r\n            </Select>\r\n         </FormControl>\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\MyComponentContext.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\MyComponentReducer.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Create\\SelectableComponentPost.jsx",["376","377","378","379","380","381","382","383","384"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\n\r\n//for history\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//context and events\r\nimport { MyComponentsContext } from '../../context/MyComponentContext';\r\n\r\n//MUI Imports\r\nimport {\r\n   Paper,\r\n   CardMedia,\r\n   makeStyles,\r\n   Fab,\r\n   Dialog,\r\n   DialogActions,\r\n   DialogContent,\r\n   Button,\r\n   Typography,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons\r\nimport { Close } from '@material-ui/icons';\r\n\r\n//component events import\r\nimport { getComponentById } from '../../events/MainPostEvents';\r\n\r\n//style MUI\r\nconst useStyle = makeStyles({\r\n   imgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      cursor: 'pointer',\r\n      position: 'relative',\r\n   },\r\n   ComponentImageRoot: {\r\n      backgroundPosition: 'top',\r\n   },\r\n   custonFavButton: {\r\n      margin: 0,\r\n      top: -3,\r\n      right: -3,\r\n      position: 'absolute',\r\n      background: '#eee',\r\n   },\r\n   customSize: {\r\n      height: 20,\r\n      width: 20,\r\n   },\r\n   custionButtonRoot: {\r\n      minHeight: 0,\r\n   },\r\n   dialogPaper: {\r\n      width: 250,\r\n   },\r\n   customBuyButton: {\r\n      width: 250,\r\n      marginTop: 10,\r\n   },\r\n   customFavButton: {\r\n      width: 250,\r\n      marginTop: 10,\r\n   },\r\n   customDialogContent: {\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n   },\r\n   dialogImgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n   },\r\n});\r\n\r\nexport default function NonEditableComponentPost({\r\n   componentId,\r\n   mainPostId,\r\n   userId,\r\n}) {\r\n   //MUI style classes\r\n   const classes = useStyle();\r\n\r\n   //use history\r\n   const history = useHistory();\r\n\r\n   //states\r\n   const [componentPostData, setComponentPostData] = useState(); //component post data\r\n   const [open, setOpen] = useState(false); //buy dialog open flag\r\n\r\n   //use context\r\n   const { myComponentData, componentDispatch } = useContext(\r\n      MyComponentsContext\r\n   );\r\n\r\n   useEffect(() => {\r\n      getComponentById(componentId).then((data) => setComponentPostData(data));\r\n   }, []);\r\n\r\n   //GUnctions\r\n   //dialog functions\r\n   const handleClickOpen = () => {\r\n      setOpen(true);\r\n   };\r\n\r\n   const handleClose = () => {\r\n      setOpen(false);\r\n   };\r\n\r\n   const handleRemove = async (event) => {\r\n      event.stopPropagation();\r\n      componentDispatch({ type: 'REMOVE_COMPONENT', id: componentId });\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         {/* Component Box Starts Here */}\r\n         {componentPostData && (\r\n            <Paper square>\r\n               {\r\n                  <CardMedia\r\n                     onClick={handleClickOpen}\r\n                     image={componentPostData.media_url}\r\n                     className={classes.imgStyles}\r\n                     classes={{\r\n                        root: classes.ComponentImageRoot,\r\n                     }}\r\n                     title=\"Image\"\r\n                  >\r\n                     {myComponentData.addComponents &&\r\n                     myComponentData.addComponents.includes(componentId) ? (\r\n                        <Fab\r\n                           disabled={myComponentData.loading}\r\n                           onClick={handleRemove}\r\n                           classes={{\r\n                              sizeSmall: classes.customSize,\r\n                              root: classes.custionButtonRoot,\r\n                           }}\r\n                           size=\"small\"\r\n                           aria-label=\"add\"\r\n                           className={classes.custonFavButton}\r\n                        >\r\n                           <Close style={{ width: 15, height: 15 }} />\r\n                        </Fab>\r\n                     ) : (\r\n                        <></>\r\n                     )}\r\n                  </CardMedia>\r\n               }\r\n            </Paper>\r\n         )}\r\n         {/* Component box Ends Here */}\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\PostPage.jsx",["385","386","387","388","389","390","391","392","393","394","395"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n//import post\r\nimport PostPageMainPost from '../components/MainPost/PostPageMainPost';\r\n\r\n//crypto imports\r\nimport AES from 'crypto-js/aes';\r\nimport enc from 'crypto-js/enc-utf8';\r\n\r\n//MUI Imports\r\nimport {\r\n   Card,\r\n   CardMedia,\r\n   CardContent,\r\n   Grid,\r\n   makeStyles,\r\n   CardHeader,\r\n   Typography,\r\n   Avatar,\r\n   IconButton,\r\n   Container,\r\n} from '@material-ui/core';\r\n\r\n//MUI icons\r\nimport { ArrowBack } from '@material-ui/icons';\r\n\r\n//MUI make style\r\nconst useStyles = makeStyles({\r\n   imgStyle: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      WebkitTapHighlightColor: 'transparent',\r\n      cursor: 'pointer',\r\n   },\r\n   mainPostRoot: {\r\n      backgroundPosition: 'cover',\r\n   },\r\n});\r\n\r\nexport default function PostPage(props) {\r\n   //get the post ID\r\n   const { id } = useParams();\r\n\r\n   //use states\r\n   const [postId, setPostId] = useState(null);\r\n\r\n   useEffect(() => {\r\n      var newId = null;\r\n      const realId = id.replace(/\\*/g, '/');\r\n      console.log(realId);\r\n      newId = AES.decrypt(realId, 'Pjmaq7EV2C7lQeaUuLVD');\r\n      newId = newId.toString(enc);\r\n      setPostId(newId);\r\n   }, []);\r\n\r\n   return (\r\n      postId && (\r\n         <Container className=\"margin-top-80\" maxWidth=\"lg\">\r\n            <IconButton onClick={() => props.history.goBack()}>\r\n               <ArrowBack />\r\n            </IconButton>\r\n            <br />\r\n            <PostPageMainPost id={postId} />\r\n         </Container>\r\n      )\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\MainPost\\PostPageMainPost.jsx",["396","397","398"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import component\r\nimport NonEditableComponentPost from '../ComponentPost/NonEditableComponentPost';\r\n\r\n//context and events imports\r\nimport { MainPostContext } from '../../context/MainPostContext';\r\nimport { getMainPostById } from '../../events/MainPostEvents';\r\nimport { sendPageViewAnalytics } from '../../events/AnalyticsEvents'; //analytics events\r\n\r\n//time ago\r\nimport TimeAgo from 'react-timeago';\r\n\r\n//MUI Imports\r\nimport {\r\n   Card,\r\n   CardMedia,\r\n   CardContent,\r\n   Grid,\r\n   makeStyles,\r\n   CardHeader,\r\n   Typography,\r\n   Avatar,\r\n   IconButton,\r\n} from '@material-ui/core';\r\n\r\n//MUI make style\r\nconst useStyles = makeStyles({\r\n   imgStyle: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      WebkitTapHighlightColor: 'transparent',\r\n   },\r\n   mainPostRoot: {\r\n      backgroundPosition: 'cover',\r\n   },\r\n});\r\n\r\nexport default function PostPageMainPost({ id }) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { mainPostDispatch } = useContext(MainPostContext);\r\n\r\n   //states\r\n   const [mainPostData, setMainPostData] = useState();\r\n\r\n   //use effect\r\n   useEffect(() => {\r\n      getMainPostById(id, mainPostDispatch).then((data) => {\r\n         setMainPostData(data);\r\n         sendPageViewAnalytics(data.user_id, data.id);\r\n      });\r\n   }, []);\r\n\r\n   return (\r\n      <div style={{ marginBottom: 25 }}>\r\n         {mainPostData && (\r\n            <Card>\r\n               {/* CARD HEADER STARTS */}\r\n               <CardHeader\r\n                  title={\r\n                     <Typography variant=\"body1\" style={{ fontSize: 14 }}>\r\n                        {mainPostData.name\r\n                           ? mainPostData.name\r\n                           : mainPostData.username}\r\n                     </Typography>\r\n                  }\r\n                  subheader={\r\n                     <Typography variant=\"body2\" style={{ fontSize: 11 }}>\r\n                        <TimeAgo\r\n                           date={mainPostData.created_at}\r\n                           minPeriod={30}\r\n                        />\r\n                     </Typography>\r\n                  }\r\n                  avatar={\r\n                     mainPostData.profile_picture !== null ? (\r\n                        <Avatar\r\n                           src={mainPostData.profile_picture}\r\n                           alt={mainPostData.username}\r\n                           style={{\r\n                              width: 30,\r\n                              height: 30,\r\n                           }}\r\n                        ></Avatar>\r\n                     ) : (\r\n                        <Avatar\r\n                           alt={mainPostData.username}\r\n                           style={{\r\n                              width: 30,\r\n                              height: 30,\r\n                           }}\r\n                        ></Avatar>\r\n                     )\r\n                  }\r\n                  // action={\r\n                  //    <div>\r\n                  //       <IconButton\r\n                  //          style={{ margin: '0px 5px' }}\r\n                  //          aria-controls=\"edit-menu\"\r\n                  //          aria-haspopup=\"true\"\r\n                  //          onClick={OpenEditMenu}\r\n                  //       >\r\n                  //          <MoreVert />\r\n                  //       </IconButton>\r\n                  //    </div>\r\n                  // }\r\n               ></CardHeader>\r\n               {/* CARD HEADER ENDS */}\r\n\r\n               <Grid container spacing={2}>\r\n                  {/* MAIN IMAGE STARTS */}\r\n\r\n                  <Grid item xs={12} md={6}>\r\n                     {mainPostData.media_type === 'IM' && (\r\n                        <CardMedia\r\n                           className={classes.imgStyle}\r\n                           image={mainPostData.media_url}\r\n                           classes={{\r\n                              root: classes.mainPostRoot,\r\n                           }}\r\n                        ></CardMedia>\r\n                     )}\r\n                     {mainPostData.media_type === 'VD' && (\r\n                        <CardMedia\r\n                           image={mainPostData.media_url}\r\n                           component=\"video\"\r\n                           autoPlay\r\n                           loop\r\n                           muted\r\n                        ></CardMedia>\r\n                     )}\r\n                  </Grid>\r\n\r\n                  {/* MAIN IMAGE ENDS */}\r\n\r\n                  {/* COMPONENT IMAGES START */}\r\n\r\n                  <Grid item xs={12} md={6} style={{ margin: 'auto' }}>\r\n                     <CardContent>\r\n                        <Grid container={true} spacing={2}>\r\n                           {mainPostData.component_posts.length > 0 &&\r\n                              mainPostData.component_posts.map(\r\n                                 (componentId) => {\r\n                                    return (\r\n                                       <Grid item xs={3} key={componentId}>\r\n                                          <NonEditableComponentPost\r\n                                             componentId={componentId}\r\n                                             mainPostId={mainPostData.id}\r\n                                             userId={mainPostData.user_id}\r\n                                          />\r\n                                       </Grid>\r\n                                    );\r\n                                 }\r\n                              )}\r\n                        </Grid>\r\n                     </CardContent>\r\n                  </Grid>\r\n\r\n                  {/* COMPONENT IMAGES END */}\r\n               </Grid>\r\n            </Card>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\AboutUs.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\PrivacyPolicy.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\IAmBrand.jsx",["399","400","401"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//brand page components\r\nimport Hero from '../components/Static/HeroBrand';\r\nimport ImageWithFrame from '../components/Static/ImageWithFrame';\r\n\r\n//assets\r\nimport SectionOneImage from '../assets/BrandSectionOne.png';\r\nimport SectionOneBackground from '../assets/SectionBackground.png';\r\nimport SectionOneBackgroundFlipped from '../assets/SectionBackgroundFlipped.png';\r\nimport FormBackground from '../assets/FormBackground.png';\r\nimport HeroBackground from '../assets/HeroBackground.png';\r\n\r\n//slider image\r\n\r\n//MUI Imports\r\nimport {\r\n   Grid,\r\n   makeStyles,\r\n   Typography,\r\n   Button,\r\n   Link as MUILink,\r\n} from '@material-ui/core';\r\nimport ContentInMiddle from '../components/Static/ContentInMiddle';\r\n\r\n//use styles\r\nconst useStyles = makeStyles({\r\n   containerMargin: {\r\n      marginTop: 75,\r\n      marginBottom: 75,\r\n      position: 'relative',\r\n   },\r\n   monFont: {\r\n      fontFamily: 'Montserrat',\r\n      fontWeight: 500,\r\n   },\r\n   customButton: {\r\n      fontFamily: 'Montserrat',\r\n      fontWeight: 500,\r\n      backgroundColor: '#333333',\r\n      padding: 30,\r\n      borderRadius: 15,\r\n      color: '#eacec5',\r\n   },\r\n});\r\nexport default function IAmBrand() {\r\n   //use styles\r\n   const classes = useStyles();\r\n   return (\r\n      <div>\r\n         <Hero />\r\n         <div>\r\n            <ImageWithFrame\r\n               imageLeft={false}\r\n               title={\r\n                  <Typography variant=\"h3\" className={classes.monFont}>\r\n                     FROM DISCOVERY TO SHOPPING.\r\n                  </Typography>\r\n               }\r\n               imgUrl={SectionOneImage}\r\n               content={\r\n                  <Typography variant=\"body1\" className={classes.monFont}>\r\n                     Do you often struggle in redirecting your audience from\r\n                     Instagram to the right product on your website? Style\r\n                     Discover is a unique platform that allows you to turn every\r\n                     Instagram post into a shoppable experience for your\r\n                     audience.\r\n                  </Typography>\r\n               }\r\n               cta={true}\r\n               background={SectionOneBackground}\r\n               // ctaText=\"Signup\"\r\n               // ctaUrl=\"/login\"\r\n            />\r\n         </div>\r\n         <div>\r\n            <ContentInMiddle background={FormBackground}>\r\n               <Grid container={true}>\r\n                  <Grid item={true} xs={12}>\r\n                     <Typography\r\n                        align=\"center\"\r\n                        variant=\"h2\"\r\n                        className={classes.monFont}\r\n                     >\r\n                        Can't wait to get started?\r\n                     </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                     item={true}\r\n                     style={{ margin: 'auto', padding: '50px 0px' }}\r\n                     xs={12}\r\n                     md={4}\r\n                  >\r\n                     <MUILink component={Link} to=\"/signup\">\r\n                        <Typography\r\n                           align=\"center\"\r\n                           variant=\"h5\"\r\n                           className={classes.customButton}\r\n                        >\r\n                           SIGNUP TODAY\r\n                        </Typography>\r\n                     </MUILink>\r\n                  </Grid>\r\n                  <Grid item={true} xs={12}>\r\n                     <Typography\r\n                        align=\"center\"\r\n                        variant=\"body1\"\r\n                        className={classes.monFont}\r\n                     >\r\n                        Have Questions? Reach out to us at\r\n                     </Typography>\r\n                     <Typography\r\n                        align=\"center\"\r\n                        variant=\"body1\"\r\n                        className={classes.monFont}\r\n                     >\r\n                        hello@stylediscover.in\r\n                     </Typography>\r\n                  </Grid>\r\n               </Grid>\r\n            </ContentInMiddle>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\AddComponents.jsx",["402","403","404","405","406","407","408"],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\AdminRoute.jsx",["409"],"import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n//import context\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n   const { user } = useContext(UserContext);\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         render={(props) =>\r\n            !localStorage.AccessToken ? (\r\n               <Redirect to=\"/login\" />\r\n            ) : (\r\n               <Component {...props} />\r\n            )\r\n         }\r\n      />\r\n   );\r\n};\r\n\r\nexport default AdminRoute;\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\LoginAsUser.jsx",["410"],"//react imports\r\nimport React, { useContext, useState } from 'react';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   TextField,\r\n   Link as MUILink,\r\n   CircularProgress,\r\n   makeStyles,\r\n} from '@material-ui/core';\r\n\r\n//context and events import\r\nimport { UserContext } from '../context/UserContext';\r\nimport { adminLoginAsUser } from '../events/UserEvents';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   inputStyles: {\r\n      marginTop: 20,\r\n   },\r\n   submitStyles: {\r\n      marginTop: 20,\r\n      marginRight: 10,\r\n   },\r\n   createAccount: {\r\n      marginLeft: 5,\r\n   },\r\n   customError: {\r\n      color: 'red',\r\n      fontSize: '0.8rem',\r\n      marginTop: 10,\r\n   },\r\n   customProgress: {\r\n      marginLeft: 10,\r\n   },\r\n});\r\n\r\nexport default function LoginAsUser(props) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use state\r\n   const [username, setUsername] = useState('');\r\n\r\n   //use context\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //use history\r\n   let history = props.history;\r\n\r\n   //funtions\r\n   const handleChange = (event) => {\r\n      //set username\r\n      if (event.target.name === 'username') {\r\n         setUsername(event.target.value);\r\n      }\r\n   };\r\n\r\n   const handleSubmitChange = async (event) => {\r\n      event.preventDefault();\r\n\r\n      await adminLoginAsUser(username, userDispatch, history);\r\n   };\r\n   return (\r\n      <Container className=\"margin-top-80\" maxWidth=\"sm\">\r\n         {user.userData.account_type === 'AD' && (\r\n            <Paper className={classes.paperStyles}>\r\n               <Typography variant=\"h4\">Login As User</Typography>\r\n               <div\r\n                  style={{\r\n                     marginTop: 10,\r\n                  }}\r\n               >\r\n                  <Typography variant=\"body2\" align=\"justify\">\r\n                     Enter the username you want to login on behalf of.\r\n                  </Typography>\r\n               </div>\r\n               <form noValidate>\r\n                  <TextField\r\n                     id=\"username\"\r\n                     name=\"username\"\r\n                     size=\"small\"\r\n                     fullWidth={true}\r\n                     label=\"Username\"\r\n                     type=\"text\"\r\n                     value={username}\r\n                     helperText={\r\n                        user.errorData.username\r\n                           ? user.errorData.username[0]\r\n                           : null\r\n                     }\r\n                     error={user.errorData.detail ? true : false}\r\n                     onChange={handleChange}\r\n                     className={classes.inputStyles}\r\n                     variant=\"outlined\"\r\n                  />\r\n                  <br />\r\n                  {user.errorData.detail && (\r\n                     <Typography\r\n                        variant=\"body2\"\r\n                        className={classes.customError}\r\n                     >\r\n                        {user.errorData.detail}\r\n                     </Typography>\r\n                  )}\r\n                  <div className=\"usernameLogin\">\r\n                     <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        disableElevation\r\n                        className={classes.submitStyles}\r\n                        disabled={username === '' || user.loading}\r\n                        onClick={handleSubmitChange}\r\n                     >\r\n                        Login\r\n                        {user.loading && (\r\n                           <CircularProgress\r\n                              size={20}\r\n                              className={classes.customProgress}\r\n                           />\r\n                        )}\r\n                     </Button>\r\n                  </div>\r\n               </form>\r\n            </Paper>\r\n         )}\r\n         {user.userData.account_type !== 'AD' && (\r\n            <Paper className={classes.paperStyles}>\r\n               <Typography>\r\n                  You are not authorized to perform this action.\r\n               </Typography>\r\n            </Paper>\r\n         )}\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\MyCollection.jsx",["411","412","413","414","415","416","417","418","419","420","421"],"//react imports\r\nimport React, { useContext, useEffect, useState } from 'react';\r\n\r\n//context and events\r\nimport { UserContext } from '../context/UserContext';\r\nimport { MainPostContext } from '../context/MainPostContext';\r\nimport { getUserComponents } from '../events/MainPostEvents';\r\nimport { MyComponentsContext } from '../context/MyComponentContext';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   Grid,\r\n   Avatar,\r\n   Link as MUILink,\r\n   makeStyles,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons imports\r\nimport { Add } from '@material-ui/icons';\r\n\r\n//components\r\nimport WishlistComponent from '../components/Wishlist/WishlistComponent';\r\nimport NonEditableComponentPost from '../components/ComponentPost/NonEditableComponentPost';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   customUsername: {\r\n      textAlign: 'center',\r\n      marginBottom: 20,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '600',\r\n      color: 'black',\r\n   },\r\n   customPaper: {\r\n      paddingTop: 20,\r\n      color: '#333333',\r\n      margin: '20px 0px',\r\n   },\r\n   customNoPostMessage: {\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '400',\r\n      textAlign: 'center',\r\n   },\r\n   customCreateButton: {\r\n      margin: 'auto',\r\n      display: 'flex',\r\n      padding: '10px 15px',\r\n      boxShadow: 'none',\r\n   },\r\n   customTitle: {\r\n      marginBottom: 20,\r\n      textAlign: 'center',\r\n   },\r\n});\r\n\r\nexport default function MyCollection() {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { user } = useContext(UserContext);\r\n   const { myComponentData, componentDispatch } = useContext(\r\n      MyComponentsContext\r\n   );\r\n   return (\r\n      <Container maxWidth=\"lg\" className=\"margin-top-80\">\r\n         {\r\n            <div>\r\n               {/* WISHLIST TITLE STARTS*/}\r\n               <Typography variant=\"h5\" className={classes.customTitle}>\r\n                  Collection of{' '}\r\n                  {user.userData.name !== ''\r\n                     ? user.userData.name\r\n                     : user.userData.username}\r\n               </Typography>\r\n               {/* WISHLIST TITLE ENDS */}\r\n\r\n               {/* USER WISHLISTS STARTS */}\r\n               {myComponentData.myCollection.length === 0 && (\r\n                  <Typography\r\n                     className={classes.customNoPostMessage}\r\n                     variant=\"body2\"\r\n                  >\r\n                     No Product In Collection.\r\n                  </Typography>\r\n               )}\r\n               <Grid container={true} spacing={2}>\r\n                  {myComponentData.myCollection.map((component, index) => (\r\n                     <Grid item={true} xs={4} md={3} lg={2} key={index}>\r\n                        <NonEditableComponentPost componentId={component} />\r\n                     </Grid>\r\n                  ))}\r\n               </Grid>\r\n               {/* USER WISHLISTS ENDS */}\r\n            </div>\r\n         }\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\MyComponentEvents.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\ImageWithContent.jsx",["422","423","424"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//MUI Imports\r\nimport {\r\n   Container,\r\n   Grid,\r\n   Paper,\r\n   Typography,\r\n   Button,\r\n   makeStyles,\r\n   CardMedia,\r\n   Hidden,\r\n} from '@material-ui/core';\r\n\r\n//MUI icons\r\nimport { WhatsApp } from '@material-ui/icons';\r\n\r\n//use styles\r\nconst useStyles = makeStyles({\r\n   autoCenter: {\r\n      margin: 'auto',\r\n   },\r\n   sideImage: {\r\n      paddingTop: '100%',\r\n      height: 250,\r\n   },\r\n   content: {\r\n      margin: '10px 0px',\r\n      color: '#444444',\r\n      textAlign: 'justify',\r\n   },\r\n   subtitle: {\r\n      margin: '10px 0px',\r\n      color: '#444444',\r\n      textAlign: 'justify',\r\n   },\r\n   customHeroButton: {\r\n      margin: '10px 0px',\r\n      padding: '10px 15px',\r\n      borderRadius: 10,\r\n      minWidth: 150,\r\n   },\r\n   customContaienr: {\r\n      padding: '75px 0px',\r\n   },\r\n   customHeroButtonWa: {\r\n      margin: '20px 0px',\r\n      padding: '10px 15px',\r\n      borderRadius: 10,\r\n      backgroundColor: '#075E54',\r\n      color: 'white',\r\n      '&:hover': {\r\n         backgroundColor: '#128C7E',\r\n      },\r\n   },\r\n});\r\n\r\nexport default function ImageWithContent(props) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //get content from props\r\n   const {\r\n      imageLeft,\r\n      title,\r\n      subtitle,\r\n      content,\r\n      ctaText,\r\n      imgUrl,\r\n      cta,\r\n      background,\r\n   } = props;\r\n\r\n   const contentMarkup = (\r\n      <div style={{ maxWidth: 750, margin: 'auto' }}>\r\n         <Typography variant=\"h3\">{title}</Typography>\r\n         <Typography variant=\"h6\" className={classes.subtitle}>\r\n            {subtitle}\r\n         </Typography>\r\n         <Typography variant=\"body1\" className={classes.content}>\r\n            {content}\r\n         </Typography>\r\n         {cta && (\r\n            <Button\r\n               className={classes.customHeroButtonWa}\r\n               variant=\"contained\"\r\n               onClick={() => {\r\n                  window.open('https://wa.me/17345459845', '_blank');\r\n               }}\r\n               color=\"secondary\"\r\n               disableElevation\r\n               startIcon={<WhatsApp />}\r\n            >\r\n               I Want to Learn More\r\n            </Button>\r\n         )}\r\n      </div>\r\n   );\r\n\r\n   const imageMarkup = (\r\n      <CardMedia image={imgUrl} className={classes.sideImage}></CardMedia>\r\n   );\r\n\r\n   return (\r\n      <Container\r\n         maxWidth=\"xl\"\r\n         className={classes.customContaienr}\r\n         style={{\r\n            background: `url(${background}) no-repeat center center fixed`,\r\n            backgroundSize: 'cover',\r\n            // minHeight: '100vh',\r\n         }}\r\n      >\r\n         <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n               <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={imageLeft ? 4 : 8}\r\n                  className={classes.autoCenter}\r\n               >\r\n                  {imageLeft ? (\r\n                     imageMarkup\r\n                  ) : (\r\n                     <>\r\n                        <Hidden only={['xs']}>{contentMarkup}</Hidden>\r\n                        <Hidden smUp>{imageMarkup}</Hidden>\r\n                     </>\r\n                  )}\r\n               </Grid>\r\n               <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={imageLeft ? 8 : 4}\r\n                  className={classes.autoCenter}\r\n               >\r\n                  {imageLeft ? (\r\n                     contentMarkup\r\n                  ) : (\r\n                     <>\r\n                        <Hidden only={['xs']}>{imageMarkup}</Hidden>\r\n                        <Hidden smUp>{contentMarkup}</Hidden>\r\n                     </>\r\n                  )}\r\n               </Grid>\r\n            </Grid>\r\n         </Container>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\HeroHome.jsx",["425","426","427"],"import React from 'react';\r\n\r\n//MUI Imports\r\nimport { Typography, makeStyles, Container } from '@material-ui/core';\r\n\r\n//hero\r\nimport LazyHero from 'react-lazy-hero';\r\n\r\n//components\r\nimport VideoWithContent from './VideoWithContent';\r\n\r\n//video import\r\nimport HeroVideo from '../../assets/hero.mp4';\r\nimport HeroImage from '../../assets/hero.png';\r\nimport HeroBackground from '../../assets/HeroBackground.png';\r\nimport ImageWithContent from './ImageWithContent';\r\n\r\n//usestyles\r\nconst useStyles = makeStyles({\r\n   customLogo: {\r\n      fontFamily: 'Megrim',\r\n   },\r\n});\r\n\r\nexport default function Hero() {\r\n   //use styles\r\n   const classes = useStyles();\r\n   return (\r\n      <LazyHero\r\n         imageSrc={HeroBackground}\r\n         minHeight=\"100vh\"\r\n         opacity=\"0.5\"\r\n         parallaxOffset=\"1\"\r\n      >\r\n         <VideoWithContent\r\n            imageLeft={true}\r\n            title={\r\n               <Typography variant=\"h1\" className={classes.customLogo}>\r\n                  StyleDiscover\r\n               </Typography>\r\n            }\r\n            subtitle={\r\n               <Typography\r\n                  variant=\"h4\"\r\n                  className={classes.customLogo}\r\n                  style={{ color: '#b66d79' }}\r\n               >\r\n                  <b>Discover | Get Inspired | Shop</b>\r\n               </Typography>\r\n            }\r\n            vidUrl={HeroImage}\r\n         />\r\n      </LazyHero>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\ImageSlider.jsx",["428","429","430","431","432"],"//react imports\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//MUI Imports\r\nimport {\r\n   Grid,\r\n   Hidden,\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   makeStyles,\r\n   GridList,\r\n   GridListTile,\r\n   CardMedia,\r\n   Paper,\r\n   Link as MUILink,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons Imports\r\nimport { ArrowForwardIos } from '@material-ui/icons';\r\n\r\n//usestyles\r\nconst useStyles = makeStyles({\r\n   sideImage: {\r\n      paddingTop: '100%',\r\n      // width: '100%',\r\n      borderRadius: 15,\r\n   },\r\n   imageSlider: {\r\n      flexWrap: 'nowrap',\r\n      transform: 'translateZ(0)',\r\n   },\r\n   customImagePaper: {\r\n      borderRadius: 15,\r\n   },\r\n   mainPostRoot: {\r\n      backgroundPosition: 'top',\r\n   },\r\n});\r\n\r\nexport default function ImageSlider(props) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //get props\r\n   const { data, title } = props;\r\n\r\n   //markups\r\n   const gridListTileMarkup = data.map((item) => {\r\n      return (\r\n         <GridListTile cols={1} rows={1} key={item.imageUrls.indexOf(item)}>\r\n            <MUILink component={Link} to={item.sliderUrl}>\r\n               <CardMedia\r\n                  image={item.imageUrls}\r\n                  className={classes.sideImage}\r\n                  classes={{\r\n                     root: classes.mainPostRoot,\r\n                  }}\r\n               ></CardMedia>\r\n\r\n               <Typography\r\n                  align=\"center\"\r\n                  variant=\"h6\"\r\n                  style={{ marginTop: 10, fontFamily: 'Montserrat' }}\r\n               >\r\n                  {item.name}\r\n               </Typography>\r\n            </MUILink>\r\n            <br />\r\n            <Typography align=\"left\" variant=\"body1\">\r\n               {item.content}\r\n            </Typography>\r\n         </GridListTile>\r\n      );\r\n   });\r\n\r\n   return (\r\n      <Container maxWidth=\"lg\" style={{ overflow: 'hidden' }}>\r\n         <div style={{ marginBottom: 37.5 }}>{title}</div>\r\n         <Hidden only={['xs']}>\r\n            <GridList\r\n               cellHeight=\"auto\"\r\n               spacing={10}\r\n               cols={Object.keys(data).length > 3 ? 3.65 : 3}\r\n               className={classes.imageSlider}\r\n               spacing={75}\r\n            >\r\n               {gridListTileMarkup}\r\n            </GridList>\r\n         </Hidden>\r\n         <Hidden smUp>\r\n            <GridList\r\n               cellHeight=\"auto\"\r\n               spacing={10}\r\n               cols=\"2.65\"\r\n               className={classes.imageSlider}\r\n            >\r\n               {gridListTileMarkup}\r\n            </GridList>\r\n         </Hidden>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\VideoWithContent.jsx",["433"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//MUI Imports\r\nimport {\r\n   Container,\r\n   Grid,\r\n   Paper,\r\n   Typography,\r\n   Button,\r\n   makeStyles,\r\n   CardMedia,\r\n   Hidden,\r\n} from '@material-ui/core';\r\n\r\n//use styles\r\nconst useStyles = makeStyles({\r\n   autoCenter: {\r\n      margin: 'auto',\r\n   },\r\n   sideImage: {\r\n      paddingTop: '100%',\r\n      width: '100%',\r\n   },\r\n   content: {\r\n      margin: '10px 0px',\r\n      color: '#444444',\r\n      textAlign: 'justify',\r\n   },\r\n   subtitle: {\r\n      margin: '10px 0px',\r\n      color: '#444444',\r\n   },\r\n   customHeroButton: {\r\n      margin: '10px 0px',\r\n      padding: '10px 15px',\r\n      borderRadius: 10,\r\n      minWidth: 150,\r\n   },\r\n});\r\n\r\nexport default function VideoWithContent(props) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //get content from props\r\n   const {\r\n      imageLeft,\r\n      title,\r\n      subtitle,\r\n      content,\r\n      ctaText,\r\n      vidUrl,\r\n      ctaUrl,\r\n      fullwidth,\r\n   } = props;\r\n\r\n   const contentMarkup = (\r\n      <div>\r\n         <Typography variant=\"h3\">{title}</Typography>\r\n         <Typography variant=\"h6\" className={classes.subtitle}>\r\n            {subtitle}\r\n         </Typography>\r\n         <Typography variant=\"body1\" className={classes.content}>\r\n            {content}\r\n         </Typography>\r\n         {ctaText && ctaUrl && (\r\n            <Button\r\n               className={classes.customHeroButton}\r\n               variant=\"contained\"\r\n               component={Link}\r\n               to={ctaUrl}\r\n               color=\"primary\"\r\n               disableElevation\r\n            >\r\n               {ctaText}\r\n            </Button>\r\n         )}\r\n      </div>\r\n   );\r\n\r\n   const imageMarkup = (\r\n      <div style={{ padding: 35 }}>\r\n         {!fullwidth && (\r\n            <Paper elevation=\"5\" style={{ width: '250px', margin: 'auto' }}>\r\n               <CardMedia\r\n                  image={vidUrl}\r\n                  component=\"image\"\r\n                  style={{ paddingTop: '100%', height: 250, width: 250 }}\r\n               ></CardMedia>\r\n            </Paper>\r\n         )}\r\n         {fullwidth && (\r\n            <Paper elevation=\"5\" style={{ width: '300px', margin: 'auto' }}>\r\n               <CardMedia\r\n                  image={vidUrl}\r\n                  component=\"image\"\r\n                  style={{\r\n                     paddingTop: '100%',\r\n                     height: 0,\r\n                     width: 300,\r\n                  }}\r\n               ></CardMedia>\r\n            </Paper>\r\n         )}\r\n      </div>\r\n   );\r\n\r\n   return (\r\n      <div style={{ overflow: 'hidden' }}>\r\n         <Grid container spacing={3}>\r\n            <Grid\r\n               item\r\n               xs={12}\r\n               sm={imageLeft ? 4 : 8}\r\n               className={classes.autoCenter}\r\n            >\r\n               {imageLeft ? (\r\n                  imageMarkup\r\n               ) : (\r\n                  <>\r\n                     <Hidden only={['xs']}>{contentMarkup}</Hidden>\r\n                     <Hidden smUp>{imageMarkup}</Hidden>\r\n                  </>\r\n               )}\r\n            </Grid>\r\n            <Grid\r\n               item\r\n               xs={12}\r\n               sm={imageLeft ? 8 : 4}\r\n               className={classes.autoCenter}\r\n            >\r\n               {imageLeft ? (\r\n                  contentMarkup\r\n               ) : (\r\n                  <>\r\n                     <Hidden only={['xs']}>{imageMarkup}</Hidden>\r\n                     <Hidden smUp>{contentMarkup}</Hidden>\r\n                  </>\r\n               )}\r\n            </Grid>\r\n         </Grid>\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\Footer.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\HeroBrand.jsx",["434","435"],"import React from 'react';\r\n\r\n//MUI Imports\r\nimport { Typography, makeStyles, Container } from '@material-ui/core';\r\n\r\n//hero\r\nimport LazyHero from 'react-lazy-hero';\r\n\r\n//components\r\nimport VideoWithContent from './VideoWithContent';\r\n\r\n//video import\r\nimport HeroVideo from '../../assets/hero.mp4';\r\nimport HeroImage from '../../assets/BrandHero.png';\r\nimport HeroBackground from '../../assets/HeroBackground.png';\r\n\r\n//usestyles\r\nconst useStyles = makeStyles({\r\n   customLogo: {\r\n      fontFamily: 'Montserrat',\r\n      fontWeight: 500,\r\n      letterSpacing: 2,\r\n   },\r\n});\r\n\r\nexport default function Hero() {\r\n   //use styles\r\n   const classes = useStyles();\r\n   return (\r\n      <LazyHero\r\n         imageSrc={HeroBackground}\r\n         minHeight=\"100vh\"\r\n         opacity=\"0.5\"\r\n         parallaxOffset=\"1\"\r\n      >\r\n         <VideoWithContent\r\n            imageLeft={true}\r\n            title={\r\n               <Typography\r\n                  variant=\"h2\"\r\n                  className={classes.customLogo}\r\n                  align=\"center\"\r\n               >\r\n                  <b>I'M A BRAND</b>\r\n               </Typography>\r\n            }\r\n            vidUrl={HeroImage}\r\n            fullwidth={false}\r\n         />\r\n      </LazyHero>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\ContentInMiddle.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\ImageWithFrame.jsx",["436","437","438","439","440"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//MUI Imports\r\nimport {\r\n   Container,\r\n   Grid,\r\n   Paper,\r\n   Typography,\r\n   Button,\r\n   makeStyles,\r\n   CardMedia,\r\n   Hidden,\r\n} from '@material-ui/core';\r\n\r\n//MUI icons\r\nimport { WhatsApp } from '@material-ui/icons';\r\n\r\n//use styles\r\nconst useStyles = makeStyles({\r\n   autoCenter: {\r\n      margin: 'auto',\r\n   },\r\n   sideImage: {\r\n      width: '70%',\r\n      borderRadius: 50,\r\n      border: '10px solid #4f5964',\r\n      margin: 'auto',\r\n      display: 'block',\r\n      outlineOffset: '-20px',\r\n      borderTop: '50px solid #4f5964',\r\n      borderBottom: '55px solid #4f5964',\r\n   },\r\n   content: {\r\n      margin: '10px 0px',\r\n      color: '#444444',\r\n      textAlign: 'justify',\r\n   },\r\n   subtitle: {\r\n      margin: '10px 0px',\r\n      color: '#444444',\r\n      textAlign: 'justify',\r\n   },\r\n   customHeroButton: {\r\n      margin: '10px 0px',\r\n      padding: '10px 15px',\r\n      borderRadius: 10,\r\n      minWidth: 150,\r\n   },\r\n   customContaienr: {\r\n      padding: '75px 0px',\r\n   },\r\n   customHeroButtonWa: {\r\n      margin: '20px 0px',\r\n      padding: '10px 15px',\r\n      borderRadius: 10,\r\n      backgroundColor: '#075E54',\r\n      color: 'white',\r\n      '&:hover': {\r\n         backgroundColor: '#128C7E',\r\n      },\r\n   },\r\n});\r\n\r\nexport default function ImageWithFrame(props) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //get content from props\r\n   const {\r\n      imageLeft,\r\n      title,\r\n      subtitle,\r\n      content,\r\n      ctaText,\r\n      imgUrl,\r\n      cta,\r\n      background,\r\n   } = props;\r\n\r\n   const contentMarkup = (\r\n      <div style={{ maxWidth: 750, margin: 'auto' }}>\r\n         <Typography variant=\"h3\">{title}</Typography>\r\n         <Typography variant=\"h6\" className={classes.subtitle}>\r\n            {subtitle}\r\n         </Typography>\r\n         <Typography variant=\"body1\" className={classes.content}>\r\n            {content}\r\n         </Typography>\r\n         {cta && (\r\n            <Button\r\n               className={classes.customHeroButtonWa}\r\n               variant=\"contained\"\r\n               onClick={() => {\r\n                  window.open('https://wa.me/17345459845', '_blank');\r\n               }}\r\n               color=\"secondary\"\r\n               disableElevation\r\n               startIcon={<WhatsApp />}\r\n            >\r\n               I Want to Learn More\r\n            </Button>\r\n         )}\r\n      </div>\r\n   );\r\n\r\n   const imageMarkup = <img src={imgUrl} className={classes.sideImage}></img>;\r\n\r\n   return (\r\n      <Container\r\n         maxWidth=\"xl\"\r\n         className={classes.customContaienr}\r\n         style={{\r\n            background: `url(${background}) no-repeat center center fixed`,\r\n            backgroundSize: 'cover',\r\n         }}\r\n      >\r\n         <Container maxWidth=\"lg\">\r\n            <Grid container spacing={3}>\r\n               <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={imageLeft ? 4 : 8}\r\n                  className={classes.autoCenter}\r\n               >\r\n                  {imageLeft ? (\r\n                     imageMarkup\r\n                  ) : (\r\n                     <>\r\n                        <Hidden only={['xs']}>{contentMarkup}</Hidden>\r\n                        <Hidden smUp>{imageMarkup}</Hidden>\r\n                     </>\r\n                  )}\r\n               </Grid>\r\n               <Grid\r\n                  item\r\n                  xs={12}\r\n                  sm={imageLeft ? 8 : 4}\r\n                  className={classes.autoCenter}\r\n               >\r\n                  {imageLeft ? (\r\n                     contentMarkup\r\n                  ) : (\r\n                     <>\r\n                        <Hidden only={['xs']}>{imageMarkup}</Hidden>\r\n                        <Hidden smUp>{contentMarkup}</Hidden>\r\n                     </>\r\n                  )}\r\n               </Grid>\r\n            </Grid>\r\n         </Container>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\IAmInfluencer.jsx",["441"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//brand page components\r\nimport Hero from '../components/Static/HeroInfluencer';\r\nimport ImageWithFrame from '../components/Static/ImageWithFrame';\r\nimport ImageSlider from '../components/Static/ImageSlider';\r\n\r\n//assets\r\nimport SectionOneImage from '../assets/InfluencerSectionOne.png';\r\nimport SectionTwoImage from '../assets/InfluencerSectionTwo.png';\r\nimport SectionOneBackground from '../assets/SectionBackground.png';\r\nimport HeroBackground from '../assets/HeroBackground.png';\r\nimport FormBackground from '../assets/FormBackground.png';\r\nimport SectionOneBackgroundFlipped from '../assets/SectionBackgroundFlipped.png';\r\n\r\n//slider image\r\nimport Slider1 from '../assets/slider/1.png';\r\nimport Slider2 from '../assets/slider/2.png';\r\nimport Slider3 from '../assets/slider/3.png';\r\n\r\n//slider image\r\n\r\n//MUI Imports\r\nimport {\r\n   Grid,\r\n   makeStyles,\r\n   Typography,\r\n   Button,\r\n   Link as MUILink,\r\n} from '@material-ui/core';\r\nimport ContentInMiddle from '../components/Static/ContentInMiddle';\r\n\r\n//use styles\r\nconst useStyles = makeStyles({\r\n   containerMargin: {\r\n      marginTop: 75,\r\n      marginBottom: 75,\r\n      position: 'relative',\r\n   },\r\n   monFont: {\r\n      fontFamily: 'Montserrat',\r\n      fontWeight: 500,\r\n   },\r\n   customButton: {\r\n      fontFamily: 'Montserrat',\r\n      fontWeight: 500,\r\n      backgroundColor: '#333333',\r\n      padding: 30,\r\n      borderRadius: 15,\r\n      color: '#eacec5',\r\n   },\r\n});\r\nexport default function IAmInfluencer() {\r\n   //use styles\r\n   const classes = useStyles();\r\n   return (\r\n      <div>\r\n         <Hero />\r\n         <div>\r\n            <ImageWithFrame\r\n               imageLeft={true}\r\n               title={\r\n                  <Typography variant=\"h3\" className={classes.monFont}>\r\n                     WE'RE NOT JUST ANOTHER INFLUENCER APP.\r\n                  </Typography>\r\n               }\r\n               imgUrl={SectionOneImage}\r\n               content={\r\n                  <Typography variant=\"body1\" className={classes.monFont}>\r\n                     Here, you inspire your audience and we help them shop your\r\n                     styles.\r\n                  </Typography>\r\n               }\r\n               cta={true}\r\n               background={SectionOneBackgroundFlipped}\r\n               // ctaText=\"Signup\"\r\n               // ctaUrl=\"/login\"\r\n            />\r\n         </div>\r\n         <div>\r\n            <ImageWithFrame\r\n               imageLeft={false}\r\n               title={\r\n                  <Typography variant=\"h3\" className={classes.monFont}>\r\n                     INSPIRE YOUR AUDIENCE TO SHOP.\r\n                  </Typography>\r\n               }\r\n               imgUrl={SectionTwoImage}\r\n               content={\r\n                  <Typography variant=\"body1\" className={classes.monFont}>\r\n                     Do what no one else has ever done before. Be the influencer\r\n                     who truly inspires their audience. Do you often get a lot\r\n                     of DMs asking you where to shop for products you showcase?\r\n                     This is the real influence you have. With StyleDiscover,\r\n                     you can up your game and actually help your audience shop.\r\n                  </Typography>\r\n               }\r\n               cta={true}\r\n               background={SectionOneBackground}\r\n               // ctaText=\"Signup\"\r\n               // ctaUrl=\"/login\"\r\n            />\r\n         </div>\r\n         <div>\r\n            <ContentInMiddle background={FormBackground}>\r\n               <Grid container={true} style={{ paddingTop: 40 }}>\r\n                  <Grid item={true} xs={12}>\r\n                     <Typography\r\n                        align=\"center\"\r\n                        variant=\"h4\"\r\n                        className={classes.monFont}\r\n                     >\r\n                        JOIN THE STYLEDISCOVER NETWORK OF TOP INFLUENCERS\r\n                     </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                     item={true}\r\n                     style={{ margin: 'auto', padding: '50px 0px' }}\r\n                     xs={12}\r\n                     md={4}\r\n                  >\r\n                     <MUILink component={Link} to=\"/signup\">\r\n                        <Typography\r\n                           align=\"center\"\r\n                           variant=\"h5\"\r\n                           className={classes.customButton}\r\n                        >\r\n                           SIGNUP TODAY\r\n                        </Typography>\r\n                     </MUILink>\r\n                  </Grid>\r\n               </Grid>\r\n            </ContentInMiddle>\r\n         </div>\r\n         <div className={classes.containerMargin}>\r\n            <ImageSlider\r\n               data={[\r\n                  {\r\n                     imageUrls: Slider1,\r\n                     name: 'Sheena Sherwani',\r\n                     sliderUrl: '/sheenasherwani',\r\n                     // content:\r\n                     //    \"Testimonials are short quotes from people who love your brand. It's a great way to convince customers to try your services.\",\r\n                  },\r\n                  {\r\n                     imageUrls: Slider2,\r\n                     name: 'Thompson',\r\n                     sliderUrl: '/limitless_adventurer',\r\n                     // content:\r\n                     //    \"Testimonials are short quotes from people who love your brand. It's a great way to convince customers to try your services.\",\r\n                  },\r\n                  {\r\n                     imageUrls: Slider3,\r\n                     name: 'Urmi Daga',\r\n                     sliderUrl: '/urmidaga',\r\n                     // content:\r\n                     //    \"Testimonials are short quotes from people who love your brand. It's a great way to convince customers to try your services.\",\r\n                  },\r\n               ]}\r\n               title={\r\n                  <>\r\n                     <Typography\r\n                        variant=\"h3\"\r\n                        className={classes.monFont}\r\n                        align=\"center\"\r\n                     >\r\n                        NEED MORE INSPIRATION?\r\n                     </Typography>\r\n                     <Typography\r\n                        variant=\"h6\"\r\n                        className={classes.monFont}\r\n                        style={{ marginTop: 10 }}\r\n                        align=\"center\"\r\n                     >\r\n                        Check out our top StyleDiscover influencers\r\n                     </Typography>\r\n                  </>\r\n               }\r\n            />\r\n         </div>\r\n         <div>\r\n            <ContentInMiddle background={HeroBackground}>\r\n               <Grid container={true}>\r\n                  <Grid item={true} xs={12}>\r\n                     <Typography\r\n                        align=\"center\"\r\n                        variant=\"h2\"\r\n                        className={classes.monFont}\r\n                     >\r\n                        Can't wait to get started?\r\n                     </Typography>\r\n                  </Grid>\r\n                  <Grid\r\n                     item={true}\r\n                     style={{ margin: 'auto', padding: '50px 0px' }}\r\n                     xs={12}\r\n                     md={4}\r\n                  >\r\n                     <MUILink component={Link} to=\"/signup\">\r\n                        <Typography\r\n                           align=\"center\"\r\n                           variant=\"h5\"\r\n                           className={classes.customButton}\r\n                        >\r\n                           SIGNUP TODAY\r\n                        </Typography>\r\n                     </MUILink>\r\n                  </Grid>\r\n                  <Grid item={true} xs={12}>\r\n                     <Typography\r\n                        align=\"center\"\r\n                        variant=\"body1\"\r\n                        className={classes.monFont}\r\n                     >\r\n                        Have Questions? Reach out to us at\r\n                     </Typography>\r\n                     <Typography\r\n                        align=\"center\"\r\n                        variant=\"body1\"\r\n                        className={classes.monFont}\r\n                     >\r\n                        hello@stylediscover.in\r\n                     </Typography>\r\n                  </Grid>\r\n               </Grid>\r\n            </ContentInMiddle>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Static\\HeroInfluencer.jsx",["442","443"],"import React from 'react';\r\n\r\n//MUI Imports\r\nimport { Typography, makeStyles, Container } from '@material-ui/core';\r\n\r\n//hero\r\nimport LazyHero from 'react-lazy-hero';\r\n\r\n//components\r\nimport VideoWithContent from './VideoWithContent';\r\n\r\n//video import\r\nimport HeroVideo from '../../assets/hero.mp4';\r\nimport HeroImage from '../../assets/InfluencerHero.png';\r\nimport HeroBackground from '../../assets/HeroBackground.png';\r\n\r\n//usestyles\r\nconst useStyles = makeStyles({\r\n   customLogo: {\r\n      fontFamily: 'Montserrat',\r\n      fontWeight: 500,\r\n   },\r\n});\r\n\r\nexport default function Hero() {\r\n   //use styles\r\n   const classes = useStyles();\r\n   return (\r\n      <LazyHero\r\n         imageSrc={HeroBackground}\r\n         minHeight=\"100vh\"\r\n         opacity=\"0.5\"\r\n         parallaxOffset=\"1\"\r\n      >\r\n         <VideoWithContent\r\n            imageLeft={true}\r\n            title={\r\n               <Typography variant=\"h2\" className={classes.customLogo}>\r\n                  <b>I'M AN INFLUENCER</b>\r\n               </Typography>\r\n            }\r\n            vidUrl={HeroImage}\r\n            fullwidth={true}\r\n         />\r\n      </LazyHero>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\ScrollToTop.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\Cropper.jsx",["444","445","446","447","448","449"],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\CropUtils.js",[],{"ruleId":"450","replacedBy":"451"},{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","severity":1,"message":"455","line":7,"column":4,"nodeType":"456","messageId":"457","endLine":7,"endColumn":12},{"ruleId":"454","severity":1,"message":"458","line":66,"column":12,"nodeType":"456","messageId":"457","endLine":66,"endColumn":16},{"ruleId":"454","severity":1,"message":"459","line":67,"column":12,"nodeType":"456","messageId":"457","endLine":67,"endColumn":21},{"ruleId":"454","severity":1,"message":"460","line":68,"column":12,"nodeType":"456","messageId":"457","endLine":68,"endColumn":21},{"ruleId":"454","severity":1,"message":"461","line":69,"column":12,"nodeType":"456","messageId":"457","endLine":69,"endColumn":27},{"ruleId":"462","severity":1,"message":"463","line":84,"column":7,"nodeType":"464","endLine":84,"endColumn":9,"suggestions":"465"},{"ruleId":"454","severity":1,"message":"466","line":3,"column":10,"nodeType":"456","messageId":"457","endLine":3,"endColumn":21},{"ruleId":"454","severity":1,"message":"467","line":17,"column":8,"nodeType":"456","messageId":"457","endLine":17,"endColumn":15},{"ruleId":"454","severity":1,"message":"468","line":18,"column":8,"nodeType":"456","messageId":"457","endLine":18,"endColumn":15},{"ruleId":"454","severity":1,"message":"469","line":19,"column":8,"nodeType":"456","messageId":"457","endLine":19,"endColumn":15},{"ruleId":"454","severity":1,"message":"470","line":29,"column":8,"nodeType":"456","messageId":"457","endLine":29,"endColumn":23},{"ruleId":"454","severity":1,"message":"471","line":16,"column":12,"nodeType":"456","messageId":"457","endLine":16,"endColumn":19},{"ruleId":"454","severity":1,"message":"472","line":26,"column":4,"nodeType":"456","messageId":"457","endLine":26,"endColumn":9},{"ruleId":"454","severity":1,"message":"473","line":35,"column":4,"nodeType":"456","messageId":"457","endLine":35,"endColumn":8},{"ruleId":"454","severity":1,"message":"474","line":90,"column":10,"nodeType":"456","messageId":"457","endLine":90,"endColumn":25},{"ruleId":"454","severity":1,"message":"458","line":8,"column":12,"nodeType":"456","messageId":"457","endLine":8,"endColumn":16},{"ruleId":"475","severity":1,"message":"476","line":1,"column":1,"nodeType":"477","endLine":11,"endColumn":3},{"ruleId":"454","severity":1,"message":"478","line":2,"column":39,"nodeType":"456","messageId":"457","endLine":2,"endColumn":48},{"ruleId":"454","severity":1,"message":"479","line":6,"column":8,"nodeType":"456","messageId":"457","endLine":6,"endColumn":20},{"ruleId":"454","severity":1,"message":"480","line":14,"column":4,"nodeType":"456","messageId":"457","endLine":14,"endColumn":16},{"ruleId":"454","severity":1,"message":"481","line":16,"column":4,"nodeType":"456","messageId":"457","endLine":16,"endColumn":17},{"ruleId":"454","severity":1,"message":"482","line":17,"column":4,"nodeType":"456","messageId":"457","endLine":17,"endColumn":16},{"ruleId":"454","severity":1,"message":"483","line":26,"column":4,"nodeType":"456","messageId":"457","endLine":26,"endColumn":13},{"ruleId":"454","severity":1,"message":"484","line":34,"column":4,"nodeType":"456","messageId":"457","endLine":34,"endColumn":10},{"ruleId":"454","severity":1,"message":"485","line":35,"column":4,"nodeType":"456","messageId":"457","endLine":35,"endColumn":15},{"ruleId":"454","severity":1,"message":"486","line":36,"column":4,"nodeType":"456","messageId":"457","endLine":36,"endColumn":17},{"ruleId":"454","severity":1,"message":"487","line":37,"column":4,"nodeType":"456","messageId":"457","endLine":37,"endColumn":17},{"ruleId":"454","severity":1,"message":"488","line":44,"column":22,"nodeType":"456","messageId":"457","endLine":44,"endColumn":44},{"ruleId":"489","severity":1,"message":"490","line":100,"column":4,"nodeType":"491","messageId":"492","endLine":100,"endColumn":18},{"ruleId":"454","severity":1,"message":"493","line":122,"column":20,"nodeType":"456","messageId":"457","endLine":122,"endColumn":30},{"ruleId":"454","severity":1,"message":"494","line":135,"column":8,"nodeType":"456","messageId":"457","endLine":135,"endColumn":25},{"ruleId":"454","severity":1,"message":"495","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":27},{"ruleId":"454","severity":1,"message":"496","line":27,"column":4,"nodeType":"456","messageId":"457","endLine":27,"endColumn":18},{"ruleId":"454","severity":1,"message":"497","line":28,"column":4,"nodeType":"456","messageId":"457","endLine":28,"endColumn":12},{"ruleId":"454","severity":1,"message":"458","line":141,"column":12,"nodeType":"456","messageId":"457","endLine":141,"endColumn":16},{"ruleId":"454","severity":1,"message":"498","line":3,"column":10,"nodeType":"456","messageId":"457","endLine":3,"endColumn":14},{"ruleId":"454","severity":1,"message":"499","line":13,"column":4,"nodeType":"456","messageId":"457","endLine":13,"endColumn":10},{"ruleId":"454","severity":1,"message":"500","line":15,"column":4,"nodeType":"456","messageId":"457","endLine":15,"endColumn":9},{"ruleId":"454","severity":1,"message":"471","line":18,"column":12,"nodeType":"456","messageId":"457","endLine":18,"endColumn":19},{"ruleId":"462","severity":1,"message":"501","line":65,"column":7,"nodeType":"464","endLine":65,"endColumn":9,"suggestions":"502"},{"ruleId":"454","severity":1,"message":"498","line":3,"column":10,"nodeType":"456","messageId":"457","endLine":3,"endColumn":14},{"ruleId":"454","severity":1,"message":"503","line":28,"column":4,"nodeType":"456","messageId":"457","endLine":28,"endColumn":14},{"ruleId":"462","severity":1,"message":"504","line":66,"column":7,"nodeType":"464","endLine":66,"endColumn":9,"suggestions":"505"},{"ruleId":"454","severity":1,"message":"506","line":23,"column":4,"nodeType":"456","messageId":"457","endLine":23,"endColumn":14},{"ruleId":"454","severity":1,"message":"507","line":92,"column":11,"nodeType":"456","messageId":"457","endLine":92,"endColumn":27},{"ruleId":"454","severity":1,"message":"508","line":92,"column":29,"nodeType":"456","messageId":"457","endLine":92,"endColumn":48},{"ruleId":"462","severity":1,"message":"509","line":100,"column":7,"nodeType":"464","endLine":100,"endColumn":9,"suggestions":"510"},{"ruleId":"454","severity":1,"message":"478","line":2,"column":39,"nodeType":"456","messageId":"457","endLine":2,"endColumn":48},{"ruleId":"454","severity":1,"message":"500","line":15,"column":4,"nodeType":"456","messageId":"457","endLine":15,"endColumn":9},{"ruleId":"454","severity":1,"message":"471","line":18,"column":12,"nodeType":"456","messageId":"457","endLine":18,"endColumn":19},{"ruleId":"454","severity":1,"message":"511","line":107,"column":12,"nodeType":"456","messageId":"457","endLine":107,"endColumn":28},{"ruleId":"454","severity":1,"message":"512","line":50,"column":10,"nodeType":"456","messageId":"457","endLine":50,"endColumn":26},{"ruleId":"454","severity":1,"message":"499","line":11,"column":4,"nodeType":"456","messageId":"457","endLine":11,"endColumn":10},{"ruleId":"454","severity":1,"message":"500","line":13,"column":4,"nodeType":"456","messageId":"457","endLine":13,"endColumn":9},{"ruleId":"454","severity":1,"message":"513","line":15,"column":4,"nodeType":"456","messageId":"457","endLine":15,"endColumn":10},{"ruleId":"454","severity":1,"message":"471","line":16,"column":12,"nodeType":"456","messageId":"457","endLine":16,"endColumn":19},{"ruleId":"454","severity":1,"message":"514","line":21,"column":10,"nodeType":"456","messageId":"457","endLine":21,"endColumn":13},{"ruleId":"454","severity":1,"message":"515","line":24,"column":8,"nodeType":"456","messageId":"457","endLine":24,"endColumn":25},{"ruleId":"462","severity":1,"message":"509","line":53,"column":7,"nodeType":"464","endLine":53,"endColumn":9,"suggestions":"516"},{"ruleId":"454","severity":1,"message":"517","line":2,"column":50,"nodeType":"456","messageId":"457","endLine":2,"endColumn":61},{"ruleId":"454","severity":1,"message":"498","line":3,"column":10,"nodeType":"456","messageId":"457","endLine":3,"endColumn":14},{"ruleId":"454","severity":1,"message":"471","line":36,"column":12,"nodeType":"456","messageId":"457","endLine":36,"endColumn":19},{"ruleId":"454","severity":1,"message":"518","line":46,"column":10,"nodeType":"456","messageId":"457","endLine":46,"endColumn":16},{"ruleId":"454","severity":1,"message":"519","line":46,"column":18,"nodeType":"456","messageId":"457","endLine":46,"endColumn":22},{"ruleId":"462","severity":1,"message":"504","line":122,"column":7,"nodeType":"464","endLine":122,"endColumn":9,"suggestions":"520"},{"ruleId":"454","severity":1,"message":"521","line":3,"column":10,"nodeType":"456","messageId":"457","endLine":3,"endColumn":20},{"ruleId":"454","severity":1,"message":"471","line":12,"column":12,"nodeType":"456","messageId":"457","endLine":12,"endColumn":19},{"ruleId":"454","severity":1,"message":"471","line":14,"column":12,"nodeType":"456","messageId":"457","endLine":14,"endColumn":19},{"ruleId":"454","severity":1,"message":"522","line":59,"column":8,"nodeType":"456","messageId":"457","endLine":59,"endColumn":15},{"ruleId":"454","severity":1,"message":"478","line":1,"column":17,"nodeType":"456","messageId":"457","endLine":1,"endColumn":26},{"ruleId":"454","severity":1,"message":"523","line":1,"column":28,"nodeType":"456","messageId":"457","endLine":1,"endColumn":36},{"ruleId":"454","severity":1,"message":"498","line":2,"column":10,"nodeType":"456","messageId":"457","endLine":2,"endColumn":14},{"ruleId":"454","severity":1,"message":"499","line":7,"column":4,"nodeType":"456","messageId":"457","endLine":7,"endColumn":10},{"ruleId":"454","severity":1,"message":"524","line":8,"column":4,"nodeType":"456","messageId":"457","endLine":8,"endColumn":13},{"ruleId":"454","severity":1,"message":"471","line":10,"column":12,"nodeType":"456","messageId":"457","endLine":10,"endColumn":19},{"ruleId":"454","severity":1,"message":"525","line":21,"column":10,"nodeType":"456","messageId":"457","endLine":21,"endColumn":15},{"ruleId":"454","severity":1,"message":"524","line":5,"column":30,"nodeType":"456","messageId":"457","endLine":5,"endColumn":39},{"ruleId":"454","severity":1,"message":"478","line":2,"column":27,"nodeType":"456","messageId":"457","endLine":2,"endColumn":36},{"ruleId":"454","severity":1,"message":"500","line":11,"column":4,"nodeType":"456","messageId":"457","endLine":11,"endColumn":9},{"ruleId":"454","severity":1,"message":"526","line":12,"column":4,"nodeType":"456","messageId":"457","endLine":12,"endColumn":13},{"ruleId":"454","severity":1,"message":"506","line":14,"column":4,"nodeType":"456","messageId":"457","endLine":14,"endColumn":14},{"ruleId":"454","severity":1,"message":"527","line":18,"column":4,"nodeType":"456","messageId":"457","endLine":18,"endColumn":12},{"ruleId":"454","severity":1,"message":"511","line":77,"column":12,"nodeType":"456","messageId":"457","endLine":77,"endColumn":28},{"ruleId":"454","severity":1,"message":"458","line":78,"column":12,"nodeType":"456","messageId":"457","endLine":78,"endColumn":16},{"ruleId":"454","severity":1,"message":"484","line":16,"column":4,"nodeType":"456","messageId":"457","endLine":16,"endColumn":10},{"ruleId":"454","severity":1,"message":"487","line":17,"column":4,"nodeType":"456","messageId":"457","endLine":17,"endColumn":17},{"ruleId":"454","severity":1,"message":"486","line":18,"column":4,"nodeType":"456","messageId":"457","endLine":18,"endColumn":17},{"ruleId":"454","severity":1,"message":"499","line":19,"column":4,"nodeType":"456","messageId":"457","endLine":19,"endColumn":10},{"ruleId":"454","severity":1,"message":"506","line":20,"column":4,"nodeType":"456","messageId":"457","endLine":20,"endColumn":14},{"ruleId":"454","severity":1,"message":"522","line":84,"column":10,"nodeType":"456","messageId":"457","endLine":84,"endColumn":17},{"ruleId":"454","severity":1,"message":"528","line":88,"column":11,"nodeType":"456","messageId":"457","endLine":88,"endColumn":15},{"ruleId":"462","severity":1,"message":"509","line":97,"column":7,"nodeType":"464","endLine":97,"endColumn":9,"suggestions":"529"},{"ruleId":"454","severity":1,"message":"530","line":105,"column":10,"nodeType":"456","messageId":"457","endLine":105,"endColumn":21},{"ruleId":"454","severity":1,"message":"495","line":2,"column":38,"nodeType":"456","messageId":"457","endLine":2,"endColumn":48},{"ruleId":"454","severity":1,"message":"498","line":3,"column":10,"nodeType":"456","messageId":"457","endLine":3,"endColumn":14},{"ruleId":"454","severity":1,"message":"531","line":14,"column":4,"nodeType":"456","messageId":"457","endLine":14,"endColumn":8},{"ruleId":"454","severity":1,"message":"526","line":15,"column":4,"nodeType":"456","messageId":"457","endLine":15,"endColumn":13},{"ruleId":"454","severity":1,"message":"532","line":16,"column":4,"nodeType":"456","messageId":"457","endLine":16,"endColumn":15},{"ruleId":"454","severity":1,"message":"533","line":17,"column":4,"nodeType":"456","messageId":"457","endLine":17,"endColumn":8},{"ruleId":"454","severity":1,"message":"534","line":19,"column":4,"nodeType":"456","messageId":"457","endLine":19,"endColumn":14},{"ruleId":"454","severity":1,"message":"506","line":20,"column":4,"nodeType":"456","messageId":"457","endLine":20,"endColumn":14},{"ruleId":"454","severity":1,"message":"513","line":21,"column":4,"nodeType":"456","messageId":"457","endLine":21,"endColumn":10},{"ruleId":"454","severity":1,"message":"535","line":30,"column":7,"nodeType":"456","messageId":"457","endLine":30,"endColumn":16},{"ruleId":"462","severity":1,"message":"536","line":56,"column":7,"nodeType":"464","endLine":56,"endColumn":9,"suggestions":"537"},{"ruleId":"454","severity":1,"message":"498","line":3,"column":10,"nodeType":"456","messageId":"457","endLine":3,"endColumn":14},{"ruleId":"454","severity":1,"message":"503","line":26,"column":4,"nodeType":"456","messageId":"457","endLine":26,"endColumn":14},{"ruleId":"462","severity":1,"message":"504","line":57,"column":7,"nodeType":"464","endLine":57,"endColumn":9,"suggestions":"538"},{"ruleId":"454","severity":1,"message":"539","line":11,"column":8,"nodeType":"456","messageId":"457","endLine":11,"endColumn":35},{"ruleId":"454","severity":1,"message":"540","line":13,"column":8,"nodeType":"456","messageId":"457","endLine":13,"endColumn":22},{"ruleId":"454","severity":1,"message":"499","line":22,"column":4,"nodeType":"456","messageId":"457","endLine":22,"endColumn":10},{"ruleId":"454","severity":1,"message":"500","line":23,"column":4,"nodeType":"456","messageId":"457","endLine":23,"endColumn":9},{"ruleId":"454","severity":1,"message":"514","line":35,"column":10,"nodeType":"456","messageId":"457","endLine":35,"endColumn":13},{"ruleId":"454","severity":1,"message":"541","line":35,"column":15,"nodeType":"456","messageId":"457","endLine":35,"endColumn":20},{"ruleId":"454","severity":1,"message":"542","line":36,"column":8,"nodeType":"456","messageId":"457","endLine":36,"endColumn":32},{"ruleId":"489","severity":1,"message":"490","line":92,"column":4,"nodeType":"491","messageId":"492","endLine":92,"endColumn":18},{"ruleId":"454","severity":1,"message":"522","line":118,"column":10,"nodeType":"456","messageId":"457","endLine":118,"endColumn":17},{"ruleId":"462","severity":1,"message":"543","line":137,"column":7,"nodeType":"464","endLine":137,"endColumn":22,"suggestions":"544"},{"ruleId":"454","severity":1,"message":"458","line":8,"column":12,"nodeType":"456","messageId":"457","endLine":8,"endColumn":16},{"ruleId":"454","severity":1,"message":"471","line":11,"column":12,"nodeType":"456","messageId":"457","endLine":11,"endColumn":19},{"ruleId":"454","severity":1,"message":"478","line":2,"column":29,"nodeType":"456","messageId":"457","endLine":2,"endColumn":38},{"ruleId":"454","severity":1,"message":"523","line":2,"column":40,"nodeType":"456","messageId":"457","endLine":2,"endColumn":48},{"ruleId":"454","severity":1,"message":"545","line":6,"column":10,"nodeType":"456","messageId":"457","endLine":6,"endColumn":25},{"ruleId":"454","severity":1,"message":"546","line":7,"column":10,"nodeType":"456","messageId":"457","endLine":7,"endColumn":27},{"ruleId":"454","severity":1,"message":"499","line":13,"column":4,"nodeType":"456","messageId":"457","endLine":13,"endColumn":10},{"ruleId":"454","severity":1,"message":"500","line":15,"column":4,"nodeType":"456","messageId":"457","endLine":15,"endColumn":9},{"ruleId":"454","severity":1,"message":"513","line":17,"column":4,"nodeType":"456","messageId":"457","endLine":17,"endColumn":10},{"ruleId":"454","severity":1,"message":"471","line":18,"column":12,"nodeType":"456","messageId":"457","endLine":18,"endColumn":19},{"ruleId":"454","severity":1,"message":"514","line":23,"column":10,"nodeType":"456","messageId":"457","endLine":23,"endColumn":13},{"ruleId":"454","severity":1,"message":"515","line":26,"column":8,"nodeType":"456","messageId":"457","endLine":26,"endColumn":25},{"ruleId":"454","severity":1,"message":"547","line":66,"column":29,"nodeType":"456","messageId":"457","endLine":66,"endColumn":46},{"ruleId":"454","severity":1,"message":"498","line":2,"column":10,"nodeType":"456","messageId":"457","endLine":2,"endColumn":14},{"ruleId":"454","severity":1,"message":"500","line":8,"column":4,"nodeType":"456","messageId":"457","endLine":8,"endColumn":9},{"ruleId":"454","severity":1,"message":"548","line":69,"column":7,"nodeType":"456","messageId":"457","endLine":69,"endColumn":14},{"ruleId":"454","severity":1,"message":"524","line":4,"column":34,"nodeType":"456","messageId":"457","endLine":4,"endColumn":43},{"ruleId":"454","severity":1,"message":"549","line":13,"column":8,"nodeType":"456","messageId":"457","endLine":13,"endColumn":17},{"ruleId":"454","severity":1,"message":"550","line":16,"column":8,"nodeType":"456","messageId":"457","endLine":16,"endColumn":24},{"ruleId":"454","severity":1,"message":"533","line":7,"column":4,"nodeType":"456","messageId":"457","endLine":7,"endColumn":8},{"ruleId":"454","severity":1,"message":"499","line":10,"column":4,"nodeType":"456","messageId":"457","endLine":10,"endColumn":10},{"ruleId":"454","severity":1,"message":"500","line":16,"column":4,"nodeType":"456","messageId":"457","endLine":16,"endColumn":9},{"ruleId":"454","severity":1,"message":"551","line":21,"column":10,"nodeType":"456","messageId":"457","endLine":21,"endColumn":25},{"ruleId":"552","severity":1,"message":"553","line":87,"column":16,"nodeType":"554","endLine":87,"endColumn":28},{"ruleId":"454","severity":1,"message":"524","line":6,"column":4,"nodeType":"456","messageId":"457","endLine":6,"endColumn":13},{"ruleId":"454","severity":1,"message":"524","line":4,"column":34,"nodeType":"456","messageId":"457","endLine":4,"endColumn":43},{"ruleId":"454","severity":1,"message":"549","line":13,"column":8,"nodeType":"456","messageId":"457","endLine":13,"endColumn":17},{"ruleId":"454","severity":1,"message":"498","line":2,"column":10,"nodeType":"456","messageId":"457","endLine":2,"endColumn":14},{"ruleId":"454","severity":1,"message":"500","line":8,"column":4,"nodeType":"456","messageId":"457","endLine":8,"endColumn":9},{"ruleId":"454","severity":1,"message":"526","line":12,"column":4,"nodeType":"456","messageId":"457","endLine":12,"endColumn":13},{"ruleId":"454","severity":1,"message":"548","line":75,"column":7,"nodeType":"456","messageId":"457","endLine":75,"endColumn":14},{"ruleId":"555","severity":1,"message":"556","line":107,"column":24,"nodeType":"557","endLine":107,"endColumn":72},{"ruleId":"454","severity":1,"message":"499","line":29,"column":4,"nodeType":"456","messageId":"457","endLine":29,"endColumn":10},{"ruleId":"454","severity":1,"message":"524","line":4,"column":34,"nodeType":"456","messageId":"457","endLine":4,"endColumn":43},{"ruleId":"454","severity":1,"message":"549","line":13,"column":8,"nodeType":"456","messageId":"457","endLine":13,"endColumn":17},{"ruleId":"454","severity":1,"message":"500","line":10,"column":4,"nodeType":"456","messageId":"457","endLine":10,"endColumn":9},{"ruleId":"454","severity":1,"message":"483","line":11,"column":4,"nodeType":"456","messageId":"457","endLine":11,"endColumn":13},{"ruleId":"454","severity":1,"message":"558","line":65,"column":11,"nodeType":"456","messageId":"457","endLine":65,"endColumn":23},{"ruleId":"462","severity":1,"message":"559","line":103,"column":7,"nodeType":"464","endLine":103,"endColumn":46,"suggestions":"560"},{"ruleId":"462","severity":1,"message":"561","line":136,"column":7,"nodeType":"464","endLine":136,"endColumn":19,"suggestions":"562"},{"ruleId":"454","severity":1,"message":"563","line":206,"column":10,"nodeType":"456","messageId":"457","endLine":206,"endColumn":18},"no-native-reassign",["564"],"no-negated-in-lhs",["565"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'mainPosts' is assigned a value but never used.","'wishlists' is assigned a value but never used.","'myComponentData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'componentDispatch', 'mainPostDispatch', 'userDispatch', and 'wishlistDispatch'. Either include them or remove the dependency array.","ArrayExpression",["566"],"'setMainPost' is defined but never used.","'Slider4' is defined but never used.","'Slider5' is defined but never used.","'Slider6' is defined but never used.","'ContentInMiddle' is defined but never used.","'MUILink' is defined but never used.","'Badge' is defined but never used.","'Home' is defined but never used.","'handleLogoutAll' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","'MyComponents' is defined but never used.","'addComponent' is defined but never used.","'getSiteRecord' is defined but never used.","'getSiteMedia' is defined but never used.","'TextField' is defined but never used.","'Dialog' is defined but never used.","'DialogTitle' is defined but never used.","'DialogContent' is defined but never used.","'DialogActions' is defined but never used.","'ContactSupportOutlined' is defined but never used.","no-dupe-keys","Duplicate key 'customProgress'.","ObjectExpression","unexpected","'setCaption' is assigned a value but never used.","'componentsSeleted' is assigned a value but never used.","'useContext' is defined but never used.","'FavoriteBorder' is defined but never used.","'Favorite' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","React Hook useEffect has missing dependencies: 'mainPostDispatch' and 'username'. Either include them or remove the dependency array.",["567"],"'IconButton' is defined but never used.","React Hook useEffect has missing dependencies: 'id' and 'mainPostDispatch'. Either include them or remove the dependency array.",["568"],"'Typography' is defined but never used.","'loadingComponent' is assigned a value but never used.","'setLoadingComponent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'componentId'. Either include it or remove the dependency array.",["569"],"'mainPostDispatch' is assigned a value but never used.","'base_pro_pic_url' is assigned a value but never used.","'Avatar' is defined but never used.","'Add' is defined but never used.","'WishlistComponent' is defined but never used.",["570"],"'useCallback' is defined but never used.","'Delete' is defined but never used.","'Edit' is defined but never used.",["571"],"'useHistory' is defined but never used.","'history' is assigned a value but never used.","'useState' is defined but never used.","'Container' is defined but never used.","'Check' is defined but never used.","'CardMedia' is defined but never used.","'MenuItem' is defined but never used.","'open' is assigned a value but never used.",["572"],"'handleClose' is assigned a value but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'CardHeader' is defined but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["573"],["574"],"'SectionOneBackgroundFlipped' is defined but never used.","'HeroBackground' is defined but never used.","'Close' is defined but never used.","'NonEditableComponentPost' is defined but never used.","React Hook useEffect has a missing dependency: 'handleSubmit'. Either include it or remove the dependency array. If 'handleSubmit' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["575"],"'MainPostContext' is defined but never used.","'getUserComponents' is defined but never used.","'componentDispatch' is assigned a value but never used.","'ctaText' is assigned a value but never used.","'HeroVideo' is defined but never used.","'ImageWithContent' is defined but never used.","'ArrowForwardIos' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'croppedImage' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'handleAddDialogClose', 'handleSubmit', 'handleSubmitFile', 'mediaName', and 'mediaType'. Either include them or remove the dependency array.",["576"],"React Hook useEffect has missing dependencies: 'addDialogOpen' and 'imageFileSrc'. Either include them or remove the dependency array.",["577"],"'readFile' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"582","fix":"583"},{"desc":"584","fix":"585"},{"desc":"584","fix":"586"},{"desc":"582","fix":"587"},{"desc":"584","fix":"588"},{"desc":"589","fix":"590"},{"desc":"582","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"596","fix":"597"},"Update the dependencies array to be: [componentDispatch, mainPostDispatch, userDispatch, wishlistDispatch]",{"range":"598","text":"599"},"Update the dependencies array to be: [mainPostDispatch, username]",{"range":"600","text":"601"},"Update the dependencies array to be: [id, mainPostDispatch]",{"range":"602","text":"603"},"Update the dependencies array to be: [componentId]",{"range":"604","text":"605"},{"range":"606","text":"605"},{"range":"607","text":"603"},{"range":"608","text":"605"},"Update the dependencies array to be: [id]",{"range":"609","text":"610"},{"range":"611","text":"603"},"Update the dependencies array to be: [componentList, handleSubmit]",{"range":"612","text":"613"},"Update the dependencies array to be: [imageSrc, croppedAreaPixels, rotation, mediaType, mediaName, handleSubmit, handleAddDialogClose, handleSubmitFile]",{"range":"614","text":"615"},"Update the dependencies array to be: [addDialogOpen, imageFileSrc, openDialog]",{"range":"616","text":"617"},[2766,2768],"[componentDispatch, mainPostDispatch, userDispatch, wishlistDispatch]",[1602,1604],"[mainPostDispatch, username]",[1536,1538],"[id, mainPostDispatch]",[2382,2384],"[componentId]",[1433,1435],[2838,2840],[2043,2045],[1258,1260],"[id]",[1418,1420],[3269,3284],"[componentList, handleSubmit]",[2881,2920],"[imageSrc, croppedAreaPixels, rotation, mediaType, mediaName, handleSubmit, handleAddDialogClose, handleSubmitFile]",[3864,3876],"[addDialogOpen, imageFileSrc, openDialog]"]