[{"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\index.js":"1","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\App.js":"2","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\UserContext.js":"3","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\UserReducer.js":"4","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\UserEvents.js":"5","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\MainPostContext.js":"6","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\MainPostReducer.js":"7","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\MainPostEvents.js":"8","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Home.jsx":"9","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\Navbar.jsx":"10","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Login.jsx":"11","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\AuthRoute.jsx":"12","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\Theme.jsx":"13","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Register.jsx":"14","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Create.jsx":"15","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\UnAuthRoute.jsx":"16","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ComponentPost\\EditableComponentPost.jsx":"17","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\UserPage.jsx":"18","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\MainPost\\NonEditableMainPost.jsx":"19","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ComponentPost\\NonEditableComponentPost.jsx":"20","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Profile.jsx":"21","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Profile\\CopyRedirect.jsx":"22"},{"size":483,"mtime":1608549980682,"results":"23","hashOfConfig":"24"},{"size":2344,"mtime":1608730386263,"results":"25","hashOfConfig":"24"},{"size":594,"mtime":1608545608356,"results":"26","hashOfConfig":"24"},{"size":1295,"mtime":1608624326927,"results":"27","hashOfConfig":"24"},{"size":5391,"mtime":1608659126573,"results":"28","hashOfConfig":"24"},{"size":574,"mtime":1608706894624,"results":"29","hashOfConfig":"24"},{"size":1470,"mtime":1608582624696,"results":"30","hashOfConfig":"24"},{"size":5705,"mtime":1608725560840,"results":"31","hashOfConfig":"24"},{"size":138,"mtime":1608620412370,"results":"32","hashOfConfig":"24"},{"size":6459,"mtime":1608731392331,"results":"33","hashOfConfig":"24"},{"size":3879,"mtime":1608659191266,"results":"34","hashOfConfig":"24"},{"size":434,"mtime":1608627659741,"results":"35","hashOfConfig":"24"},{"size":186,"mtime":1608709642938,"results":"36","hashOfConfig":"24"},{"size":5267,"mtime":1608659035505,"results":"37","hashOfConfig":"24"},{"size":12267,"mtime":1608730463167,"results":"38","hashOfConfig":"24"},{"size":460,"mtime":1608625409560,"results":"39","hashOfConfig":"24"},{"size":5987,"mtime":1608725781671,"results":"40","hashOfConfig":"24"},{"size":3767,"mtime":1608730459847,"results":"41","hashOfConfig":"24"},{"size":3147,"mtime":1608727940263,"results":"42","hashOfConfig":"24"},{"size":5979,"mtime":1608733502226,"results":"43","hashOfConfig":"24"},{"size":4905,"mtime":1608744964040,"results":"44","hashOfConfig":"24"},{"size":4597,"mtime":1608744016148,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1ply5lq",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"48"},"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\index.js",[],["103","104"],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\App.js",["105","106","107"],"//react imports\nimport { useEffect, useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n//context imports\nimport { UserContext } from './context/UserContext';\nimport { MainPostContext } from './context/MainPostContext';\n\n//Event imports\nimport { setUserData } from './events/UserEvents';\nimport { setMainPost } from './events/MainPostEvents';\n\n//MUI imports\nimport {\n   ThemeProvider as MUIThemeProvider,\n   createMuiTheme,\n   responsiveFontSizes,\n} from '@material-ui/core';\n\n//page imports\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Register from './pages/Register';\nimport Create from './pages/Create';\nimport UserPage from './pages/UserPage';\nimport Profile from './pages/Profile';\n\n//component imports\nimport Navbar from './components/General/Navbar';\n\n//utils import\nimport AuthRoute from './utils/AuthRoute';\nimport UnAuthRoute from './utils/UnAuthRoute';\nimport Theme from './utils/Theme';\n\n//theme\nlet theme = createMuiTheme(Theme);\ntheme = responsiveFontSizes(theme);\n\nfunction App() {\n   //global consts\n   const { user, userDispatch } = useContext(UserContext);\n   const { mainPosts, mainPostDispatch } = useContext(MainPostContext);\n   useEffect(() => {\n      //get token\n      const token = localStorage.AccessToken;\n      const username = localStorage.Username;\n\n      if (token && username) {\n         setUserData(token, username, userDispatch);\n         setMainPost(username, mainPostDispatch);\n      }\n   }, []);\n\n   return (\n      <MUIThemeProvider theme={theme}>\n         <Router>\n            <Navbar />\n            {/* //scroll to top */}\n            <Switch>\n               <Route exact path=\"/\" component={Home} />\n               {/* AUTH ROUTES CANNOT ACCESS WHEN AUTHENTICATED*/}\n               <AuthRoute exact path=\"/login\" component={Login} />\n               <AuthRoute exact path=\"/signup\" component={Register} />\n               {/* UNAUTH ROUTE CANNOT ACCESS WHEN UNAUTHENTICATED*/}\n               <UnAuthRoute exact path=\"/create\" component={Create} />\n               <UnAuthRoute exact path=\"/profile\" component={Profile} />\n               {/* USERNAME ROUTE */}\n               <Route exact path=\"/:username\" component={UserPage} />\n            </Switch>\n         </Router>\n      </MUIThemeProvider>\n   );\n}\n\nexport default App;\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\UserContext.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\UserReducer.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\UserEvents.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\context\\MainPostContext.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\reducers\\MainPostReducer.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\events\\MainPostEvents.js",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Home.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\General\\Navbar.jsx",["108","109","110","111","112","113","114","115"],"//react imports\r\nimport React, { useState, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//context and events\r\nimport { UserContext } from '../../context/UserContext';\r\nimport { logout, logoutAll } from '../../events/UserEvents';\r\n\r\n//MUI Core imports\r\nimport {\r\n   AppBar,\r\n   Toolbar,\r\n   Container,\r\n   IconButton,\r\n   Avatar,\r\n   Link as MUILink,\r\n   Slide,\r\n   SwipeableDrawer,\r\n   useScrollTrigger,\r\n   List,\r\n   Divider,\r\n   ListItem,\r\n   makeStyles,\r\n   ListItemIcon,\r\n   ListItemText,\r\n   Badge,\r\n   Typography,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons Import\r\nimport {\r\n   Person,\r\n   PowerSettingsNew,\r\n   Favorite,\r\n   Home,\r\n   Menu,\r\n   Add,\r\n   Info,\r\n   ShoppingBasket,\r\n   BubbleChart,\r\n   AddBox,\r\n} from '@material-ui/icons';\r\n\r\n//use style\r\nconst useStyle = makeStyles({\r\n   list: {\r\n      width: 250,\r\n   },\r\n   logo: {\r\n      fontFamily: 'Megrim',\r\n      color: 'black',\r\n      fontSize: '1.8em',\r\n      textDecoration: 'None',\r\n   },\r\n   iconStyle: {\r\n      fontSize: 25,\r\n   },\r\n});\r\n\r\n//hide on scroll functions\r\nfunction HideOnScroll(props) {\r\n   const { children, window } = props;\r\n   // Note that you normally won't need to set the window ref as useScrollTrigger\r\n   // will default to window.\r\n   // This is only being set here because the demo is in an iframe.\r\n   const trigger = useScrollTrigger({ target: window });\r\n\r\n   return (\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n         {children}\r\n      </Slide>\r\n   );\r\n}\r\n\r\nexport default function Navbar(props) {\r\n   // get user dispatch\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //states\r\n   const [drawer, setDrawer] = useState(false);\r\n\r\n   //use styles\r\n   const classes = useStyle();\r\n\r\n   //logout function\r\n   const handleLogout = (event) => {\r\n      const token = localStorage.AccessToken;\r\n      logout(token, userDispatch);\r\n   };\r\n\r\n   const handleLogoutAll = (event) => {\r\n      const token = localStorage.AccessToken;\r\n      logoutAll(token, userDispatch);\r\n   };\r\n\r\n   //drawer toggle\r\n   const toggleDrawer = (open) => (event) => {\r\n      if (\r\n         event &&\r\n         event.type === 'keydown' &&\r\n         (event.key === 'Tab' || event.key === 'Shift')\r\n      ) {\r\n         return;\r\n      }\r\n      setDrawer(open);\r\n   };\r\n\r\n   //drawer list\r\n   const list = (anchor) => (\r\n      <div\r\n         className={classes.list}\r\n         role=\"presentation\"\r\n         onClick={toggleDrawer(false)}\r\n         onKeyDown={toggleDrawer(false)}\r\n      >\r\n         {!user.isAuthenticated && (\r\n            <List>\r\n               <ListItem button key=\"login\" component={Link} to=\"/login\">\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <Person />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Login\" />\r\n               </ListItem>\r\n               <ListItem button key=\"signup\" component={Link} to=\"/signup\">\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <Add />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Signup\" />\r\n               </ListItem>\r\n            </List>\r\n         )}\r\n         {user.isAuthenticated && (\r\n            <List>\r\n               <ListItem button key=\"login\" component={Link} to=\"/profile\">\r\n                  <ListItemIcon>\r\n                     {user.userData.profile_picture ? (\r\n                        <Avatar\r\n                           src={user.userData.profile_picture}\r\n                           alt={user.userData.name}\r\n                           style={{ height: 25, width: 25 }}\r\n                        ></Avatar>\r\n                     ) : (\r\n                        <Avatar\r\n                           alt={user.userData.name}\r\n                           style={{ height: 25, width: 25 }}\r\n                        ></Avatar>\r\n                     )}\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={user.userData.name} />\r\n               </ListItem>\r\n               <ListItem button key=\"wishlist\" component={Link} to=\"/create\">\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <Add className={classes.iconStyle} />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Create\" />\r\n               </ListItem>\r\n               {/* <ListItem button key=\"wishlist\" component={Link} to=\"/wishlist\">\r\n                  <ListItemIcon>\r\n                     {' '}\r\n                     <FavoriteIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary=\"Wishlist\" />\r\n               </ListItem> */}\r\n            </List>\r\n         )}\r\n         <Divider />\r\n         <List>\r\n            <ListItem button key=\"about us\" component={Link} to=\"/about\">\r\n               <ListItemIcon>\r\n                  {' '}\r\n                  <Info />\r\n               </ListItemIcon>\r\n               <ListItemText primary=\"About Us\" />\r\n            </ListItem>\r\n            <ListItem button key=\"logout\" onClick={handleLogout}>\r\n               <ListItemIcon>\r\n                  {' '}\r\n                  <PowerSettingsNew />\r\n               </ListItemIcon>\r\n               <ListItemText primary=\"Logout\" />\r\n            </ListItem>\r\n         </List>\r\n      </div>\r\n   );\r\n\r\n   return (\r\n      <HideOnScroll {...props}>\r\n         <AppBar color=\"inherit\">\r\n            <Container maxWidth=\"md\" component=\"div\">\r\n               <Toolbar>\r\n                  <Typography\r\n                     component={Link}\r\n                     to=\"/\"\r\n                     style={{ WebkitTapHighlightColor: 'transparent' }}\r\n                     className={classes.logo}\r\n                  >\r\n                     StyleDiscover\r\n                  </Typography>\r\n                  <div style={{ flexGrow: 1 }}></div>\r\n                  <div>\r\n                     <IconButton onClick={toggleDrawer(true)} color=\"inherit\">\r\n                        <Menu />\r\n                     </IconButton>\r\n                     <SwipeableDrawer\r\n                        anchor=\"right\"\r\n                        open={drawer}\r\n                        onClose={toggleDrawer(false)}\r\n                        onOpen={toggleDrawer(true)}\r\n                     >\r\n                        {list(drawer)}\r\n                     </SwipeableDrawer>\r\n                  </div>\r\n               </Toolbar>\r\n            </Container>\r\n         </AppBar>\r\n      </HideOnScroll>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Login.jsx",["116"],"//react imports\r\nimport React, { useContext, useState } from 'react';\r\n\r\n//context and events\r\nimport { UserContext } from '../context/UserContext';\r\nimport { loginWithEmail } from '../events/UserEvents';\r\n\r\n//MUI Imports\r\nimport {\r\n   Container,\r\n   makeStyles,\r\n   Typography,\r\n   Paper,\r\n   TextField,\r\n   Button,\r\n   Link as MUILink,\r\n   CircularProgress,\r\n} from '@material-ui/core';\r\n\r\n//use styles\r\nconst useStyle = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   inputStyles: {\r\n      marginTop: 20,\r\n   },\r\n   submitStyles: {\r\n      marginTop: 20,\r\n   },\r\n   createAccount: {\r\n      marginLeft: 5,\r\n   },\r\n   customError: {\r\n      color: 'red',\r\n      fontSize: '0.8rem',\r\n      marginTop: 10,\r\n   },\r\n   customProgress: {\r\n      marginLeft: 10,\r\n   },\r\n});\r\n\r\nexport default function Login() {\r\n   //states\r\n   const [username, setUsername] = useState('');\r\n   const [password, setPassword] = useState('');\r\n\r\n   //MUI classes\r\n   const classes = useStyle();\r\n\r\n   //context\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //funtions\r\n   const handleChange = (event) => {\r\n      if (event.target.name === 'username') {\r\n         setUsername(event.target.value);\r\n      }\r\n\r\n      if (event.target.name === 'password') {\r\n         setPassword(event.target.value);\r\n      }\r\n   };\r\n\r\n   const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      const userData = {\r\n         username,\r\n         password,\r\n      };\r\n      await loginWithEmail(userData, userDispatch);\r\n   };\r\n\r\n   return (\r\n      <Container className=\"margin-top-80\" maxWidth=\"sm\">\r\n         <Paper className={classes.paperStyles}>\r\n            <Typography variant=\"h4\">Login</Typography>\r\n            <form noValidate onSubmit={handleSubmit}>\r\n               <TextField\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  size=\"small\"\r\n                  fullWidth={true}\r\n                  label=\"Username\"\r\n                  type=\"text\"\r\n                  value={username}\r\n                  helperText={user.errorData.username}\r\n                  error={user.errorData.username ? true : false}\r\n                  onChange={handleChange}\r\n                  className={classes.inputStyles}\r\n                  variant=\"outlined\"\r\n               />\r\n               <br />\r\n               <TextField\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  size=\"small\"\r\n                  fullWidth={true}\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  helperText={user.errorData.password}\r\n                  error={user.errorData.password ? true : false}\r\n                  onChange={handleChange}\r\n                  className={classes.inputStyles}\r\n                  variant=\"outlined\"\r\n               />\r\n               <br />\r\n               {user.errorData.non_field_errors && (\r\n                  <Typography variant=\"body2\" className={classes.customError}>\r\n                     {user.errorData.non_field_errors}\r\n                  </Typography>\r\n               )}\r\n               <div className=\"emailLogin\">\r\n                  <Button\r\n                     type=\"submit\"\r\n                     color=\"primary\"\r\n                     variant=\"contained\"\r\n                     disableElevation\r\n                     disabled={user.loading}\r\n                     className={classes.submitStyles}\r\n                  >\r\n                     Login\r\n                     {user.loading && (\r\n                        <CircularProgress\r\n                           size={20}\r\n                           className={classes.customProgress}\r\n                        />\r\n                     )}\r\n                  </Button>\r\n               </div>\r\n            </form>\r\n         </Paper>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\AuthRoute.jsx",[],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\Theme.jsx",["117"],"export default {\r\n   palette: {\r\n      primary: {\r\n         // main: '#2196f3',\r\n         main: '#333333',\r\n      },\r\n      secondary: {\r\n         main: '#ffad33',\r\n      },\r\n   },\r\n};\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Register.jsx",["118"],"//react imports\r\nimport React, { useContext, useState } from 'react';\r\n\r\n//context and events\r\nimport { UserContext } from '../context/UserContext';\r\nimport { registerWithEmail } from '../events/UserEvents';\r\n\r\n//MUI Imports\r\nimport {\r\n   Container,\r\n   makeStyles,\r\n   Typography,\r\n   Paper,\r\n   TextField,\r\n   Button,\r\n   Link as MUILink,\r\n   CircularProgress,\r\n} from '@material-ui/core';\r\n\r\n//use styles\r\nconst useStyle = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   inputStyles: {\r\n      marginTop: 20,\r\n   },\r\n   submitStyles: {\r\n      marginTop: 20,\r\n   },\r\n   createAccount: {\r\n      marginLeft: 5,\r\n   },\r\n   customError: {\r\n      color: 'red',\r\n      fontSize: '0.8rem',\r\n      marginTop: 10,\r\n   },\r\n   customProgress: {\r\n      marginLeft: 10,\r\n   },\r\n});\r\n\r\nexport default function Register() {\r\n   //states\r\n   const [username, setUsername] = useState('');\r\n   const [name, setName] = useState('');\r\n   const [email, setEmail] = useState('');\r\n   const [password, setPassword] = useState('');\r\n\r\n   //MUI classes\r\n   const classes = useStyle();\r\n\r\n   //context\r\n   const { user, userDispatch } = useContext(UserContext);\r\n\r\n   //funtions\r\n   const handleChange = (event) => {\r\n      if (event.target.name === 'username') {\r\n         setUsername(event.target.value);\r\n      } else if (event.target.name === 'name') {\r\n         setName(event.target.value);\r\n      } else if (event.target.name === 'email') {\r\n         setEmail(event.target.value);\r\n      } else if (event.target.name === 'password') {\r\n         setPassword(event.target.value);\r\n      }\r\n   };\r\n\r\n   const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      const userData = {\r\n         username,\r\n         name,\r\n         email,\r\n         password,\r\n      };\r\n      await registerWithEmail(userData, userDispatch);\r\n   };\r\n\r\n   return (\r\n      <Container className=\"margin-top-80\" maxWidth=\"sm\">\r\n         <Paper className={classes.paperStyles}>\r\n            <Typography variant=\"h4\">Signup</Typography>\r\n            <form noValidate onSubmit={handleSubmit}>\r\n               <TextField\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  size=\"small\"\r\n                  fullWidth={true}\r\n                  label=\"Username\"\r\n                  type=\"text\"\r\n                  value={username}\r\n                  helperText={user.errorData.username}\r\n                  error={user.errorData.username ? true : false}\r\n                  onChange={handleChange}\r\n                  className={classes.inputStyles}\r\n                  variant=\"outlined\"\r\n               />\r\n               <br />\r\n               <TextField\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  size=\"small\"\r\n                  fullWidth={true}\r\n                  label=\"Name\"\r\n                  type=\"text\"\r\n                  value={name}\r\n                  helperText={user.errorData.name}\r\n                  error={user.errorData.name ? true : false}\r\n                  onChange={handleChange}\r\n                  className={classes.inputStyles}\r\n                  variant=\"outlined\"\r\n               />\r\n               <br />\r\n               <TextField\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  size=\"small\"\r\n                  fullWidth={true}\r\n                  label=\"Email\"\r\n                  type=\"text\"\r\n                  value={email}\r\n                  helperText={user.errorData.email}\r\n                  error={user.errorData.email ? true : false}\r\n                  onChange={handleChange}\r\n                  className={classes.inputStyles}\r\n                  variant=\"outlined\"\r\n               />\r\n               <br />\r\n               <TextField\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  size=\"small\"\r\n                  fullWidth={true}\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  value={password}\r\n                  helperText={user.errorData.password}\r\n                  error={user.errorData.password ? true : false}\r\n                  onChange={handleChange}\r\n                  className={classes.inputStyles}\r\n                  variant=\"outlined\"\r\n               />\r\n               <br />\r\n               {user.errorData.non_field_errors && (\r\n                  <Typography variant=\"body2\" className={classes.customError}>\r\n                     {user.errorData.non_field_errors}\r\n                  </Typography>\r\n               )}\r\n               <div className=\"emailLogin\">\r\n                  <Button\r\n                     type=\"submit\"\r\n                     color=\"primary\"\r\n                     variant=\"contained\"\r\n                     disableElevation\r\n                     disabled={user.loading}\r\n                     className={classes.submitStyles}\r\n                  >\r\n                     Signup\r\n                     {user.loading && (\r\n                        <CircularProgress\r\n                           size={20}\r\n                           className={classes.customProgress}\r\n                        />\r\n                     )}\r\n                  </Button>\r\n               </div>\r\n            </form>\r\n         </Paper>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Create.jsx",["119","120","121"],"//react imports\r\nimport React, { useContext, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n//context and events imports\r\nimport { MainPostContext } from '../context/MainPostContext';\r\nimport {\r\n   addComponent,\r\n   publishMainPost,\r\n   getSiteRecord,\r\n} from '../events/MainPostEvents';\r\n\r\n//MUI Imports\r\nimport {\r\n   Container,\r\n   makeStyles,\r\n   Typography,\r\n   Paper,\r\n   TextField,\r\n   Button,\r\n   CircularProgress,\r\n   Card,\r\n   CardMedia,\r\n   CardContent,\r\n   Grid,\r\n   Divider,\r\n   Dialog,\r\n   DialogTitle,\r\n   DialogContent,\r\n   DialogActions,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons Import\r\nimport { Add } from '@material-ui/icons';\r\nimport EditableComponentPost from '../components/ComponentPost/EditableComponentPost';\r\n\r\n//use styles\r\nconst useStyle = makeStyles({\r\n   paperStyles: {\r\n      padding: 20,\r\n   },\r\n   inputStyles: {\r\n      marginTop: 20,\r\n   },\r\n   submitStyles: {\r\n      marginTop: 20,\r\n   },\r\n   customError: {\r\n      color: 'red',\r\n      fontSize: '0.8rem',\r\n      marginTop: 10,\r\n   },\r\n   customProgress: {\r\n      marginLeft: 10,\r\n   },\r\n   imgStyle: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      width: '100%',\r\n   },\r\n   paperImgStyle: {\r\n      paddingTop: '50%',\r\n      paddingBottom: '50%',\r\n      cursor: 'pointer',\r\n      textAlign: 'center',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n   },\r\n   customCreateButton: {\r\n      fontSize: 50,\r\n      color: '#aaa',\r\n      position: 'absolute',\r\n   },\r\n   customMainImageInput: {\r\n      display: 'None',\r\n   },\r\n   customDialogField: {\r\n      margin: '10px 0px',\r\n   },\r\n   customPublishButton: {\r\n      marginTop: 10,\r\n      marginBottom: 10,\r\n      padding: 10,\r\n   },\r\n   mainPostRoot: {\r\n      backgroundPosition: 'cover',\r\n   },\r\n});\r\n\r\nexport default function Create() {\r\n   //MUI classes\r\n   const classes = useStyle();\r\n\r\n   //use context\r\n   const { mainPosts, mainPostDispatch } = useContext(MainPostContext);\r\n\r\n   //use history\r\n   const history = useHistory();\r\n\r\n   //state\r\n   const [media, setMedia] = useState();\r\n   const [mediaPreview, setMediaPreview] = useState();\r\n   const [componentList, setComponentList] = useState([]);\r\n   const [caption, setCaption] = useState('');\r\n   const [mediaType, setMediaType] = useState('IM');\r\n\r\n   //add component dialog states\r\n   const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n   const [pageUrl, setPageUrl] = useState('');\r\n   const [mediaUrl, setMediaUrl] = useState('');\r\n\r\n   //flags\r\n   var canPublish = Boolean(media && componentList.length > 0);\r\n\r\n   //funtion\r\n   const addMainPicture = (event) => {\r\n      if (event.target.files && event.target.files[0]) {\r\n         setMediaPreview(URL.createObjectURL(event.target.files[0]));\r\n         setMedia(event.target.files[0]);\r\n         if (event.target.files[0].type.startsWith('video')) {\r\n            setMediaType('VD');\r\n         } else if (event.target.files[0].type.startsWith('image')) {\r\n            setMediaType('IM');\r\n         }\r\n      }\r\n   };\r\n\r\n   const handleAddDialogClose = () => {\r\n      setAddDialogOpen(false);\r\n      mainPostDispatch({ type: 'UNSET_ERROR_DATA' });\r\n   };\r\n\r\n   const handleAddDialogOpen = () => {\r\n      setPageUrl('');\r\n      setMediaUrl('');\r\n      setAddDialogOpen(true);\r\n   };\r\n\r\n   const handlePageUrlChange = (event) => {\r\n      setPageUrl(event.target.value);\r\n   };\r\n\r\n   const handleMediaUrlChange = (event) => {\r\n      setMediaUrl(event.target.value);\r\n   };\r\n\r\n   const handleUploadComponentImage = (event) => {\r\n      if (event.target.files && event.target.files[0]) {\r\n         setMediaUrl(event.target.files[0]);\r\n      }\r\n   };\r\n\r\n   const handleAddDialogSubmit = async (event) => {\r\n      event.preventDefault();\r\n      var siteRecords;\r\n      var hostname;\r\n      var tempComponentId;\r\n\r\n      if (pageUrl.startsWith('http')) {\r\n         var tempPageUrl = new URL(pageUrl);\r\n         var tempHostname = tempPageUrl.hostname.toString();\r\n         if (tempHostname.startsWith('www')) {\r\n            hostname = tempHostname.substring(4);\r\n         } else {\r\n            hostname = tempHostname;\r\n         }\r\n      }\r\n\r\n      siteRecords = await getSiteRecord(hostname);\r\n\r\n      var componentData = new FormData();\r\n      componentData.append('media_url', mediaUrl);\r\n      componentData.append('page_url', pageUrl);\r\n      componentData.append('site_records', siteRecords);\r\n\r\n      tempComponentId = await addComponent(componentData, mainPostDispatch);\r\n\r\n      if (!componentList.includes(tempComponentId) && tempComponentId !== -1) {\r\n         setComponentList([...componentList, tempComponentId]);\r\n         handleAddDialogClose();\r\n      }\r\n   };\r\n\r\n   const handlePublish = async (event) => {\r\n      event.preventDefault();\r\n      var mainPostData = new FormData();\r\n      mainPostData.append('media_url', media);\r\n      mainPostData.append('media_type', mediaType);\r\n      mainPostData.append('caption', caption);\r\n\r\n      await publishMainPost(mainPostData, componentList, mainPostDispatch);\r\n\r\n      history.push('/profile');\r\n   };\r\n\r\n   return (\r\n      <Container className=\"margin-top-80\" maxWidth=\"xs\">\r\n         <Card>\r\n            {media && mediaType === 'IM' && (\r\n               <CardMedia\r\n                  className={classes.imgStyle}\r\n                  image={mediaPreview}\r\n                  classes={{\r\n                     root: classes.mainPostRoot,\r\n                  }}\r\n               ></CardMedia>\r\n            )}\r\n            {media && mediaType === 'VD' && (\r\n               <CardMedia>\r\n                  <video\r\n                     // controls\r\n                     autoPlay\r\n                     loop\r\n                     muted\r\n                     style={{\r\n                        width: '100%',\r\n                     }}\r\n                  >\r\n                     <source\r\n                        src={mediaPreview}\r\n                        title=\"Video\"\r\n                        type=\"video/mp4\"\r\n                     ></source>\r\n                  </video>\r\n               </CardMedia>\r\n            )}\r\n            {!media && (\r\n               <label\r\n                  className={classes.paperImgStyle}\r\n                  htmlFor=\"icon-button-file\"\r\n               >\r\n                  <input\r\n                     accept=\"image/*,video/*\"\r\n                     className={classes.customMainImageInput}\r\n                     id=\"icon-button-file\"\r\n                     type=\"file\"\r\n                     onChange={addMainPicture}\r\n                  />\r\n                  <div className={classes.customCreateButton}>\r\n                     <Add style={{ fontSize: '40' }} />\r\n                     <Typography\r\n                        variant=\"body2\"\r\n                        style={{\r\n                           color: '#aaa',\r\n                        }}\r\n                     >\r\n                        Add Media\r\n                     </Typography>\r\n                  </div>\r\n               </label>\r\n            )}\r\n            <Divider />\r\n            <CardContent>\r\n               <Grid container spacing={2}>\r\n                  {componentList.length > 0 &&\r\n                     componentList.map((componentId) => {\r\n                        return (\r\n                           <Grid item xs={3} key={componentId}>\r\n                              <EditableComponentPost\r\n                                 componentId={componentId}\r\n                              />\r\n                           </Grid>\r\n                        );\r\n                     })}\r\n                  {componentList.length < 8 && (\r\n                     <Grid item xs={3}>\r\n                        <Paper\r\n                           className={classes.paperImgStyle}\r\n                           variant=\"outlined\"\r\n                           onClick={handleAddDialogOpen}\r\n                           square={true}\r\n                        >\r\n                           <Add className={classes.customCreateButton} />\r\n                        </Paper>\r\n                     </Grid>\r\n                  )}\r\n               </Grid>\r\n            </CardContent>\r\n         </Card>\r\n         <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.customPublishButton}\r\n            fullWidth={true}\r\n            onClick={handlePublish}\r\n            disableElevation={true}\r\n            disabled={!canPublish || mainPosts.loading}\r\n         >\r\n            Publish\r\n         </Button>\r\n         {/* DIALOG BOXES */}\r\n         {/* DIALOG BOXES */}\r\n         {/* DIALOG BOXES */}\r\n         <div>\r\n            <Dialog\r\n               maxWidth=\"lg\"\r\n               open={addDialogOpen}\r\n               onClose={handleAddDialogClose}\r\n               aria-labelledby=\"add-component-dialog\"\r\n               PaperProps={{\r\n                  style: {\r\n                     backgroundColor: '#eeeeee',\r\n                     color: '#333333',\r\n                  },\r\n               }}\r\n            >\r\n               <DialogTitle id=\"add-component-dialog\">\r\n                  Add Component\r\n               </DialogTitle>\r\n               <DialogContent>\r\n                  <TextField\r\n                     id=\"title\"\r\n                     label=\"Page URL\"\r\n                     type=\"title\"\r\n                     value={pageUrl}\r\n                     fullWidth={true}\r\n                     className={classes.customDialogField}\r\n                     helperText={\r\n                        mainPosts.errorData.page_url\r\n                           ? mainPosts.errorData.page_url[0]\r\n                           : null\r\n                     }\r\n                     error={mainPosts.errorData.page_url ? true : false}\r\n                     onChange={handlePageUrlChange}\r\n                     variant=\"outlined\"\r\n                     autoComplete=\"off\"\r\n                  />\r\n                  <TextField\r\n                     id=\"url\"\r\n                     label=\"Media URL\"\r\n                     type=\"url\"\r\n                     value={mediaUrl}\r\n                     fullWidth={true}\r\n                     className={classes.customDialogField}\r\n                     helperText={\r\n                        mainPosts.errorData.media_url\r\n                           ? mainPosts.errorData.media_url[0]\r\n                           : null\r\n                     }\r\n                     error={mainPosts.errorData.media_url ? true : false}\r\n                     onChange={handlePageUrlChange}\r\n                     onChange={handleMediaUrlChange}\r\n                     variant=\"outlined\"\r\n                     autoComplete=\"off\"\r\n                     disabled={typeof mediaUrl === 'object'}\r\n                  />\r\n                  <input\r\n                     accept=\"image/*\"\r\n                     className={classes.customMainImageInput}\r\n                     id=\"upload-component\"\r\n                     type=\"file\"\r\n                     onChange={handleUploadComponentImage}\r\n                  />\r\n                  <label htmlFor=\"upload-component\">\r\n                     <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        className={classes.customPublishButton}\r\n                        component=\"span\"\r\n                     >\r\n                        Choose An Image Instead\r\n                     </Button>\r\n                  </label>\r\n               </DialogContent>\r\n               {/* {errors.detail && (\r\n                  <Typography variant=\"body2\" className={classes.customError}>\r\n                     {errors.detail}\r\n                  </Typography>\r\n               )} */}\r\n               <DialogActions>\r\n                  <Button\r\n                     onClick={handleAddDialogClose}\r\n                     color=\"inherit\"\r\n                     disabled={mainPosts.loading}\r\n                  >\r\n                     Cancel\r\n                  </Button>\r\n                  <Button\r\n                     onClick={handleAddDialogSubmit}\r\n                     color=\"primary\"\r\n                     disabled={mainPosts.loading}\r\n                  >\r\n                     Add Component\r\n                  </Button>\r\n               </DialogActions>\r\n            </Dialog>\r\n         </div>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\utils\\UnAuthRoute.jsx",["122"],"import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst UnAuthRoute = ({ component: Component, ...rest }) => {\r\n   return (\r\n      <Route\r\n         {...rest}\r\n         render={(props) =>\r\n            !localStorage.AccessToken ? (\r\n               <Redirect to=\"/login\" />\r\n            ) : (\r\n               <Component {...props} />\r\n            )\r\n         }\r\n      />\r\n   );\r\n};\r\n\r\nexport default UnAuthRoute;\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ComponentPost\\EditableComponentPost.jsx",["123","124","125","126","127","128","129"],"//react imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//MUI Imports\r\nimport {\r\n   Paper,\r\n   CardMedia,\r\n   makeStyles,\r\n   Fab,\r\n   Dialog,\r\n   DialogActions,\r\n   DialogContent,\r\n   Button,\r\n   Typography,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons\r\nimport { FavoriteBorder, Favorite } from '@material-ui/icons';\r\n\r\n//component events import\r\nimport { getComponentById } from '../../events/MainPostEvents';\r\n\r\n//style MUI\r\nconst useStyle = makeStyles({\r\n   imgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      cursor: 'pointer',\r\n   },\r\n   ComponentImageRoot: {\r\n      backgroundPosition: 'top',\r\n   },\r\n   custonFavButton: {\r\n      margin: 0,\r\n      top: 'auto',\r\n      bottom: 27,\r\n      right: 20,\r\n      left: 2,\r\n      position: 'relative',\r\n      background: '#eee',\r\n   },\r\n   customSize: {\r\n      height: 20,\r\n      width: 20,\r\n   },\r\n   custionButtonRoot: {\r\n      minHeight: 0,\r\n   },\r\n   dialogPaper: {\r\n      width: 250,\r\n   },\r\n   customBuyButton: {\r\n      width: 250,\r\n      marginTop: 10,\r\n   },\r\n   customFavButton: {\r\n      width: 250,\r\n      marginTop: 10,\r\n   },\r\n   customDialogContent: {\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n   },\r\n   dialogImgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n   },\r\n});\r\n\r\nexport default function EditableComponentPost({ componentId }) {\r\n   //MUI style classes\r\n   const classes = useStyle();\r\n\r\n   //states\r\n   const [componentPostData, setComponentPostData] = useState(); //component post data\r\n   const [open, setOpen] = useState(false); //buy dialog open flag\r\n   const [loadingComponent, setLoadingComponent] = useState(false); //loading component flag\r\n\r\n   useEffect(() => {\r\n      getComponentById(componentId).then((data) => setComponentPostData(data));\r\n   }, []);\r\n\r\n   //GUnctions\r\n   //dialog functions\r\n   const handleClickOpen = () => {\r\n      setOpen(true);\r\n   };\r\n\r\n   const handleClose = () => {\r\n      setOpen(false);\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         {/* Component Box Starts Here */}\r\n         {componentPostData && (\r\n            <Paper square variant=\"\">\r\n               {\r\n                  <CardMedia\r\n                     onClick={handleClickOpen}\r\n                     image={componentPostData.media_url}\r\n                     className={classes.imgStyles}\r\n                     classes={{\r\n                        root: classes.ComponentImageRoot,\r\n                     }}\r\n                     title=\"Image\"\r\n                  >\r\n                     {/* <Fab disabled={wishlistInProgress} onClick={ handleWishlist }  classes={{sizeSmall: classes.customSize, root: classes.custionButtonRoot}} size=\"small\" aria-label=\"like\" className={ classes.custonFavButton }>\r\n                    {\r\n                        !(Object.entries(wishlistData.content).length === 0) && isWishlisted === true ?\r\n                        wishlistData.content.map(data => {\r\n                            if(data.id === compId){\r\n                                return <FavoriteIcon style={ { width:15, height:15 } } /> \r\n                            }\r\n                            return true\r\n                        }) :\r\n                        <FavoriteBorderIcon style={ { width:15, height:15 } } />\r\n                    }\r\n                </Fab> */}\r\n                  </CardMedia>\r\n               }\r\n            </Paper>\r\n         )}\r\n         {/* Component box Ends Here */}\r\n\r\n         {/* component dialog start */}\r\n         {componentPostData && (\r\n            <Dialog onClose={handleClose} open={open} maxWidth=\"sm\" fullWidth>\r\n               <DialogContent className={classes.customDialogContent}>\r\n                  <Paper square className={classes.dialogPaper}>\r\n                     <CardMedia\r\n                        image={componentPostData.media_url}\r\n                        className={classes.dialogImgStyles}\r\n                        classes={{\r\n                           root: classes.ComponentImageRoot,\r\n                        }}\r\n                     ></CardMedia>\r\n                  </Paper>\r\n                  <Button\r\n                     className={classes.customBuyButton}\r\n                     variant=\"contained\"\r\n                     color=\"secondary\"\r\n                     onClick={() => {\r\n                        window.open(componentPostData.page_url);\r\n                     }}\r\n                     disableElevation\r\n                  >\r\n                     Buy on {componentPostData.site_records.shop_site}\r\n                  </Button>\r\n                  <br />\r\n                  {/* <Button\r\n                  className={classes.customFavButton}\r\n                  disabled={wishlistInProgress}\r\n                  onClick={handleWishlist}\r\n                  variant=\"outlined\"\r\n                  disableElevation\r\n                  startIcon={\r\n                     !(Object.entries(wishlistData.content).length === 0) &&\r\n                     isWishlisted === true ? (\r\n                        wishlistData.content.map((data) => {\r\n                           if (data.id === compId) {\r\n                              return (\r\n                                 <FavoriteIcon\r\n                                    style={{ width: 20, height: 20 }}\r\n                                 />\r\n                              );\r\n                           }\r\n                           return true;\r\n                        })\r\n                     ) : (\r\n                        <FavoriteBorderIcon style={{ width: 20, height: 20 }} />\r\n                     )\r\n                  }\r\n               >\r\n                  {isWishlisted ? <>Remove</> : <>Add To Wishlist</>}\r\n               </Button> */}\r\n               </DialogContent>\r\n               <DialogActions>\r\n                  <Button onClick={handleClose} color=\"inherit\">\r\n                     Close\r\n                  </Button>\r\n               </DialogActions>\r\n            </Dialog>\r\n         )}\r\n         {/* component dialog end */}\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\UserPage.jsx",["130","131","132","133","134"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n//context and events\r\nimport { MainPostContext } from '../context/MainPostContext';\r\nimport { getMainPost } from '../events/MainPostEvents';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Button,\r\n   Container,\r\n   Paper,\r\n   Grid,\r\n   Avatar,\r\n   Link as MUILink,\r\n   makeStyles,\r\n} from '@material-ui/core';\r\nimport NonEditableMainPost from '../components/MainPost/NonEditableMainPost';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   customUsername: {\r\n      textAlign: 'center',\r\n      marginBottom: 20,\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '600',\r\n      color: 'black',\r\n   },\r\n   customPaper: {\r\n      paddingTop: 20,\r\n      color: '#333333',\r\n      margin: '20px 0px',\r\n   },\r\n   customNoPostMessage: {\r\n      fontFamily: 'Roboto, sans-serif',\r\n      fontWeight: '400',\r\n      textAlign: 'center',\r\n   },\r\n});\r\n\r\nexport default function UserPage() {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { mainPostDispatch } = useContext(MainPostContext);\r\n\r\n   //get the username\r\n   let { username } = useParams();\r\n\r\n   //states\r\n   const [userData, setUserData] = useState();\r\n\r\n   //useeffect\r\n   useEffect(() => {\r\n      getMainPost(username, mainPostDispatch).then((data) => setUserData(data));\r\n   }, []);\r\n\r\n   return (\r\n      <Container maxWidth=\"lg\" className=\"margin-top-80\">\r\n         {userData && userData.detail && (\r\n            <div>\r\n               <Typography className={classes.customNoPostMessage}>\r\n                  404 USER NOT FOUND\r\n               </Typography>\r\n            </div>\r\n         )}\r\n         {userData && userData.username && (\r\n            <div>\r\n               {/* USER PROFILE PICTURE STARTS */}\r\n               <Typography variant=\"body1\" className={classes.customUsername}>\r\n                  {userData.profile_picture ? (\r\n                     <Avatar\r\n                        style={{\r\n                           margin: '0px auto 10px auto',\r\n                           width: 75,\r\n                           height: 75,\r\n                        }}\r\n                        src={userData.profile_picture}\r\n                        alt={userData.username}\r\n                     ></Avatar>\r\n                  ) : (\r\n                     <Avatar\r\n                        style={{\r\n                           margin: '0px auto 10px auto',\r\n                           width: 75,\r\n                           height: 75,\r\n                        }}\r\n                        alt={userData.username}\r\n                     ></Avatar>\r\n                  )}\r\n                  @{userData.username}\r\n               </Typography>\r\n               {/* USER PROFILE PICTURE ENDS */}\r\n               {/*  */}\r\n               {/*  */}\r\n               {/* USER POSTS STARTS */}\r\n               {userData.main_posts.length > 0 && (\r\n                  <Grid container={true} spacing={2}>\r\n                     {userData.main_posts.map((id) => {\r\n                        return (\r\n                           <Grid item={true} xs={12} sm={6} lg={4}>\r\n                              <NonEditableMainPost id={id} />\r\n                           </Grid>\r\n                        );\r\n                     })}\r\n                  </Grid>\r\n               )}\r\n               {userData.main_posts.length === 0 && (\r\n                  <Typography\r\n                     className={classes.customNoPostMessage}\r\n                     variant=\"body2\"\r\n                  >\r\n                     No Posts\r\n                  </Typography>\r\n               )}\r\n               {/* USER POSTS ENDS */}\r\n            </div>\r\n         )}\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\MainPost\\NonEditableMainPost.jsx",["135","136"],"//react imports\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//import component\r\nimport NonEditableComponentPost from '../ComponentPost/NonEditableComponentPost';\r\n\r\n//context and events imports\r\nimport { MainPostContext } from '../../context/MainPostContext';\r\nimport { getMainPostById } from '../../events/MainPostEvents';\r\n\r\n//MUI Imports\r\nimport {\r\n   Card,\r\n   CardMedia,\r\n   CardContent,\r\n   Grid,\r\n   makeStyles,\r\n} from '@material-ui/core';\r\n\r\n//MUI make style\r\nconst useStyles = makeStyles({\r\n   imgStyle: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      WebkitTapHighlightColor: 'transparent',\r\n   },\r\n   mainPostRoot: {\r\n      backgroundPosition: 'cover',\r\n   },\r\n});\r\n\r\nexport default function NonEditableMainPost({ id }) {\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //use context\r\n   const { mainPostDispatch } = useContext(MainPostContext);\r\n\r\n   //states\r\n   const [mainPostData, setMainPostData] = useState();\r\n\r\n   //use effect\r\n   useEffect(() => {\r\n      getMainPostById(id, mainPostDispatch).then((data) =>\r\n         setMainPostData(data)\r\n      );\r\n   }, []);\r\n\r\n   return (\r\n      <div>\r\n         {mainPostData && (\r\n            <Card>\r\n               {/* MAIN IMAGE STARTS */}\r\n               {mainPostData.media_type === 'IM' && (\r\n                  <CardMedia\r\n                     className={classes.imgStyle}\r\n                     image={mainPostData.media_url}\r\n                     classes={{\r\n                        root: classes.mainPostRoot,\r\n                     }}\r\n                  ></CardMedia>\r\n               )}\r\n               {mainPostData.media_type === 'VD' && (\r\n                  <CardMedia>\r\n                     <video\r\n                        // controls\r\n                        autoPlay\r\n                        loop\r\n                        muted\r\n                        style={{\r\n                           width: '100%',\r\n                        }}\r\n                     >\r\n                        <source\r\n                           src={mainPostData.media_url}\r\n                           title=\"Video\"\r\n                           type=\"video/mp4\"\r\n                        ></source>\r\n                     </video>\r\n                  </CardMedia>\r\n               )}\r\n               {/* MAIN IMAGE ENDS */}\r\n               {/* COMPONENT IMAGES START */}\r\n               <CardContent>\r\n                  <Grid container={true} spacing={2}>\r\n                     {mainPostData.component_posts.length > 0 &&\r\n                        mainPostData.component_posts.map((componentId) => {\r\n                           return (\r\n                              <Grid item xs={3} key={componentId}>\r\n                                 <NonEditableComponentPost\r\n                                    componentId={componentId}\r\n                                 />\r\n                              </Grid>\r\n                           );\r\n                        })}\r\n                  </Grid>\r\n               </CardContent>\r\n               {/* COMPONENT IMAGES END */}\r\n            </Card>\r\n         )}\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\ComponentPost\\NonEditableComponentPost.jsx",["137","138","139","140","141","142","143"],"//react imports\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n//MUI Imports\r\nimport {\r\n   Paper,\r\n   CardMedia,\r\n   makeStyles,\r\n   Fab,\r\n   Dialog,\r\n   DialogActions,\r\n   DialogContent,\r\n   Button,\r\n   Typography,\r\n} from '@material-ui/core';\r\n\r\n//MUI Icons\r\nimport { FavoriteBorder, Favorite } from '@material-ui/icons';\r\n\r\n//component events import\r\nimport { getComponentById } from '../../events/MainPostEvents';\r\n\r\n//style MUI\r\nconst useStyle = makeStyles({\r\n   imgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n      cursor: 'pointer',\r\n   },\r\n   ComponentImageRoot: {\r\n      backgroundPosition: 'top',\r\n   },\r\n   custonFavButton: {\r\n      margin: 0,\r\n      top: 'auto',\r\n      bottom: 27,\r\n      right: 20,\r\n      left: 2,\r\n      position: 'relative',\r\n      background: '#eee',\r\n   },\r\n   customSize: {\r\n      height: 20,\r\n      width: 20,\r\n   },\r\n   custionButtonRoot: {\r\n      minHeight: 0,\r\n   },\r\n   dialogPaper: {\r\n      width: 250,\r\n   },\r\n   customBuyButton: {\r\n      width: 250,\r\n      marginTop: 10,\r\n   },\r\n   customFavButton: {\r\n      width: 250,\r\n      marginTop: 10,\r\n   },\r\n   customDialogContent: {\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n   },\r\n   dialogImgStyles: {\r\n      height: 0,\r\n      paddingTop: '100%',\r\n   },\r\n});\r\n\r\nexport default function NonEditableComponentPost({ componentId }) {\r\n   //MUI style classes\r\n   const classes = useStyle();\r\n\r\n   //states\r\n   const [componentPostData, setComponentPostData] = useState(); //component post data\r\n   const [open, setOpen] = useState(false); //buy dialog open flag\r\n   const [loadingComponent, setLoadingComponent] = useState(false); //loading component flag\r\n\r\n   useEffect(() => {\r\n      getComponentById(componentId).then((data) => setComponentPostData(data));\r\n   }, []);\r\n\r\n   //GUnctions\r\n   //dialog functions\r\n   const handleClickOpen = () => {\r\n      setOpen(true);\r\n   };\r\n\r\n   const handleClose = () => {\r\n      setOpen(false);\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         {/* Component Box Starts Here */}\r\n         {componentPostData && (\r\n            <Paper square>\r\n               {\r\n                  <CardMedia\r\n                     onClick={handleClickOpen}\r\n                     image={componentPostData.media_url}\r\n                     className={classes.imgStyles}\r\n                     classes={{\r\n                        root: classes.ComponentImageRoot,\r\n                     }}\r\n                     title=\"Image\"\r\n                  >\r\n                     {/* <Fab disabled={wishlistInProgress} onClick={ handleWishlist }  classes={{sizeSmall: classes.customSize, root: classes.custionButtonRoot}} size=\"small\" aria-label=\"like\" className={ classes.custonFavButton }>\r\n                    {\r\n                        !(Object.entries(wishlistData.content).length === 0) && isWishlisted === true ?\r\n                        wishlistData.content.map(data => {\r\n                            if(data.id === compId){\r\n                                return <FavoriteIcon style={ { width:15, height:15 } } /> \r\n                            }\r\n                            return true\r\n                        }) :\r\n                        <FavoriteBorderIcon style={ { width:15, height:15 } } />\r\n                    }\r\n                </Fab> */}\r\n                  </CardMedia>\r\n               }\r\n            </Paper>\r\n         )}\r\n         {/* Component box Ends Here */}\r\n\r\n         {/* component dialog start */}\r\n         {componentPostData && (\r\n            <Dialog onClose={handleClose} open={open} maxWidth=\"sm\" fullWidth>\r\n               <DialogContent className={classes.customDialogContent}>\r\n                  <Paper square className={classes.dialogPaper}>\r\n                     <CardMedia\r\n                        image={componentPostData.media_url}\r\n                        className={classes.dialogImgStyles}\r\n                        classes={{\r\n                           root: classes.ComponentImageRoot,\r\n                        }}\r\n                     ></CardMedia>\r\n                  </Paper>\r\n                  <Button\r\n                     className={classes.customBuyButton}\r\n                     variant=\"contained\"\r\n                     color=\"secondary\"\r\n                     onClick={() => {\r\n                        window.open(componentPostData.page_url);\r\n                     }}\r\n                     disableElevation\r\n                  >\r\n                     Buy on {componentPostData.site_records.shop_site}\r\n                  </Button>\r\n                  <br />\r\n                  {/* <Button\r\n                  className={classes.customFavButton}\r\n                  disabled={wishlistInProgress}\r\n                  onClick={handleWishlist}\r\n                  variant=\"outlined\"\r\n                  disableElevation\r\n                  startIcon={\r\n                     !(Object.entries(wishlistData.content).length === 0) &&\r\n                     isWishlisted === true ? (\r\n                        wishlistData.content.map((data) => {\r\n                           if (data.id === compId) {\r\n                              return (\r\n                                 <FavoriteIcon\r\n                                    style={{ width: 20, height: 20 }}\r\n                                 />\r\n                              );\r\n                           }\r\n                           return true;\r\n                        })\r\n                     ) : (\r\n                        <FavoriteBorderIcon style={{ width: 20, height: 20 }} />\r\n                     )\r\n                  }\r\n               >\r\n                  {isWishlisted ? <>Remove</> : <>Add To Wishlist</>}\r\n               </Button> */}\r\n               </DialogContent>\r\n               <DialogActions>\r\n                  <Button onClick={handleClose} color=\"inherit\">\r\n                     Close\r\n                  </Button>\r\n               </DialogActions>\r\n            </Dialog>\r\n         )}\r\n         {/* component dialog end */}\r\n      </div>\r\n   );\r\n}\r\n","D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\pages\\Profile.jsx",["144","145","146"],"D:\\Documents\\PythonEnviornment\\stylediscover\\frontend\\web\\stylediscover\\src\\components\\Profile\\CopyRedirect.jsx",["147"],"import React, { useState, useContext } from 'react';\r\n\r\n//copy to clipboard\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\n//MUI Imports\r\nimport {\r\n   Typography,\r\n   Container,\r\n   Paper,\r\n   IconButton,\r\n   Snackbar,\r\n   SnackbarContent,\r\n   Tooltip,\r\n} from '@material-ui/core';\r\nimport { Close } from '@material-ui/icons';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\n\r\n//MUI Icons Import\r\nimport { FilterNoneRounded as FilterNone, OpenInNew } from '@material-ui/icons';\r\n\r\n//Contexts\r\nimport { UserContext } from '../../context/UserContext';\r\n\r\n//MUI Make Styles\r\nconst useStyles = makeStyles({\r\n   customCopyPaper: {\r\n      margin: '10px 0px',\r\n      padding: '10px 10px',\r\n      display: 'flex',\r\n      textAlign: 'center',\r\n      backgroundColor: '#eeeeee',\r\n      color: '#333333',\r\n   },\r\n   customCopyButton: {\r\n      fontSize: '1.2em',\r\n      color: '#333333',\r\n   },\r\n   customFabButton: {\r\n      margin: '0px 3px',\r\n      position: 'relative',\r\n   },\r\n   customCopySnackbar: {\r\n      backgroundColor: '#2196f3',\r\n   },\r\n});\r\n\r\nfunction CopyRedirect() {\r\n   //init vars\r\n   const base_pro_pic_url =\r\n      window.location.port === '3000'\r\n         ? 'http://localhost:8000'\r\n         : `https://${window.location.hostname + ':' + window.location.port}`;\r\n\r\n   //use styles\r\n   const classes = useStyles();\r\n\r\n   //states\r\n   const [openCopySnackbar, setOpenCopySnackbar] = useState(false);\r\n\r\n   //contexts\r\n   const { user } = useContext(UserContext);\r\n\r\n   //markup functions\r\n   const DarkTooltip = withStyles(() => ({\r\n      tooltip: {\r\n         backgroundColor: '#333333',\r\n         color: '#eeeeee',\r\n         fontSize: 11,\r\n      },\r\n      arrow: {\r\n         color: '#333333',\r\n      },\r\n   }))(Tooltip);\r\n\r\n   //functions\r\n   const handleOpenCopySnackbar = () => {\r\n      setOpenCopySnackbar(true);\r\n   };\r\n\r\n   const handleCloseCopySnackbar = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n         return;\r\n      }\r\n\r\n      setOpenCopySnackbar(false);\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <Container maxWidth=\"xs\" style={{ padding: 0, marginBottom: 10 }}>\r\n            <Paper className={classes.customCopyPaper} elevation=\"0\">\r\n               <Typography noWrap style={{ flexGrow: 1, margin: 'auto' }}>\r\n                  <Typography noWrap variant=\"body1\">\r\n                     {'stylediscover.in/' + user.userData.username}\r\n                  </Typography>\r\n               </Typography>\r\n               <DarkTooltip title=\"Copy Link\" arrow>\r\n                  <CopyToClipboard\r\n                     text={'https://stylediscover.in/' + user.userData.username}\r\n                  >\r\n                     <IconButton\r\n                        size=\"small\"\r\n                        className={classes.customFabButton}\r\n                        color=\"inherit\"\r\n                        onClick={handleOpenCopySnackbar}\r\n                     >\r\n                        <FilterNone className={classes.customCopyButton} />\r\n                     </IconButton>\r\n                  </CopyToClipboard>\r\n               </DarkTooltip>\r\n               <DarkTooltip title=\"Preview\" arrow>\r\n                  <IconButton\r\n                     size=\"small\"\r\n                     className={classes.customFabButton}\r\n                     color=\"inherit\"\r\n                     onClick={() => {\r\n                        const url =\r\n                           'https://stylediscover.in/' + user.userData.username;\r\n                        window.open(url, '_blank');\r\n                     }}\r\n                  >\r\n                     <OpenInNew className={classes.customCopyButton} />\r\n                  </IconButton>\r\n               </DarkTooltip>\r\n            </Paper>\r\n         </Container>\r\n\r\n         <Snackbar\r\n            anchorOrigin={{\r\n               vertical: 'bottom',\r\n               horizontal: 'center',\r\n            }}\r\n            open={openCopySnackbar}\r\n            autoHideDuration={6000}\r\n            onClose={handleCloseCopySnackbar}\r\n         >\r\n            <SnackbarContent\r\n               className={classes.customCopySnackbar}\r\n               action={\r\n                  <IconButton\r\n                     size=\"small\"\r\n                     aria-label=\"close\"\r\n                     onClick={handleCloseCopySnackbar}\r\n                     color=\"inherit\"\r\n                  >\r\n                     <Close fontSize=\"small\" />\r\n                  </IconButton>\r\n               }\r\n               message=\"Link Copied!\"\r\n            />\r\n         </Snackbar>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default CopyRedirect;\r\n",{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":42,"column":12,"nodeType":"154","messageId":"155","endLine":42,"endColumn":16},{"ruleId":"152","severity":1,"message":"156","line":43,"column":12,"nodeType":"154","messageId":"155","endLine":43,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":53,"column":7,"nodeType":"159","endLine":53,"endColumn":9,"suggestions":"160"},{"ruleId":"152","severity":1,"message":"161","line":16,"column":12,"nodeType":"154","messageId":"155","endLine":16,"endColumn":19},{"ruleId":"152","severity":1,"message":"162","line":26,"column":4,"nodeType":"154","messageId":"155","endLine":26,"endColumn":9},{"ruleId":"152","severity":1,"message":"163","line":34,"column":4,"nodeType":"154","messageId":"155","endLine":34,"endColumn":12},{"ruleId":"152","severity":1,"message":"164","line":35,"column":4,"nodeType":"154","messageId":"155","endLine":35,"endColumn":8},{"ruleId":"152","severity":1,"message":"165","line":39,"column":4,"nodeType":"154","messageId":"155","endLine":39,"endColumn":18},{"ruleId":"152","severity":1,"message":"166","line":40,"column":4,"nodeType":"154","messageId":"155","endLine":40,"endColumn":15},{"ruleId":"152","severity":1,"message":"167","line":41,"column":4,"nodeType":"154","messageId":"155","endLine":41,"endColumn":10},{"ruleId":"152","severity":1,"message":"168","line":91,"column":10,"nodeType":"154","messageId":"155","endLine":91,"endColumn":25},{"ruleId":"152","severity":1,"message":"161","line":16,"column":12,"nodeType":"154","messageId":"155","endLine":16,"endColumn":19},{"ruleId":"169","severity":1,"message":"170","line":1,"column":1,"nodeType":"171","endLine":11,"endColumn":3},{"ruleId":"152","severity":1,"message":"161","line":16,"column":12,"nodeType":"154","messageId":"155","endLine":16,"endColumn":19},{"ruleId":"152","severity":1,"message":"172","line":21,"column":4,"nodeType":"154","messageId":"155","endLine":21,"endColumn":20},{"ruleId":"152","severity":1,"message":"173","line":105,"column":20,"nodeType":"154","messageId":"155","endLine":105,"endColumn":30},{"ruleId":"174","severity":1,"message":"175","line":343,"column":22,"nodeType":"176","endLine":343,"endColumn":53},{"ruleId":"152","severity":1,"message":"177","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":27},{"ruleId":"152","severity":1,"message":"178","line":9,"column":4,"nodeType":"154","messageId":"155","endLine":9,"endColumn":7},{"ruleId":"152","severity":1,"message":"179","line":14,"column":4,"nodeType":"154","messageId":"155","endLine":14,"endColumn":14},{"ruleId":"152","severity":1,"message":"180","line":18,"column":10,"nodeType":"154","messageId":"155","endLine":18,"endColumn":24},{"ruleId":"152","severity":1,"message":"163","line":18,"column":26,"nodeType":"154","messageId":"155","endLine":18,"endColumn":34},{"ruleId":"152","severity":1,"message":"181","line":77,"column":11,"nodeType":"154","messageId":"155","endLine":77,"endColumn":27},{"ruleId":"152","severity":1,"message":"182","line":77,"column":29,"nodeType":"154","messageId":"155","endLine":77,"endColumn":48},{"ruleId":"157","severity":1,"message":"183","line":81,"column":7,"nodeType":"159","endLine":81,"endColumn":9,"suggestions":"184"},{"ruleId":"152","severity":1,"message":"185","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"152","severity":1,"message":"186","line":12,"column":4,"nodeType":"154","messageId":"155","endLine":12,"endColumn":10},{"ruleId":"152","severity":1,"message":"187","line":14,"column":4,"nodeType":"154","messageId":"155","endLine":14,"endColumn":9},{"ruleId":"152","severity":1,"message":"161","line":17,"column":12,"nodeType":"154","messageId":"155","endLine":17,"endColumn":19},{"ruleId":"157","severity":1,"message":"188","line":59,"column":7,"nodeType":"159","endLine":59,"endColumn":9,"suggestions":"189"},{"ruleId":"152","severity":1,"message":"185","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"190","line":48,"column":7,"nodeType":"159","endLine":48,"endColumn":9,"suggestions":"191"},{"ruleId":"152","severity":1,"message":"178","line":9,"column":4,"nodeType":"154","messageId":"155","endLine":9,"endColumn":7},{"ruleId":"152","severity":1,"message":"179","line":14,"column":4,"nodeType":"154","messageId":"155","endLine":14,"endColumn":14},{"ruleId":"152","severity":1,"message":"180","line":18,"column":10,"nodeType":"154","messageId":"155","endLine":18,"endColumn":24},{"ruleId":"152","severity":1,"message":"163","line":18,"column":26,"nodeType":"154","messageId":"155","endLine":18,"endColumn":34},{"ruleId":"152","severity":1,"message":"181","line":77,"column":11,"nodeType":"154","messageId":"155","endLine":77,"endColumn":27},{"ruleId":"152","severity":1,"message":"182","line":77,"column":29,"nodeType":"154","messageId":"155","endLine":77,"endColumn":48},{"ruleId":"157","severity":1,"message":"183","line":81,"column":7,"nodeType":"159","endLine":81,"endColumn":9,"suggestions":"192"},{"ruleId":"152","severity":1,"message":"187","line":14,"column":4,"nodeType":"154","messageId":"155","endLine":14,"endColumn":9},{"ruleId":"152","severity":1,"message":"161","line":17,"column":12,"nodeType":"154","messageId":"155","endLine":17,"endColumn":19},{"ruleId":"157","severity":1,"message":"188","line":74,"column":7,"nodeType":"159","endLine":74,"endColumn":9,"suggestions":"193"},{"ruleId":"152","severity":1,"message":"194","line":50,"column":10,"nodeType":"154","messageId":"155","endLine":50,"endColumn":26},"no-native-reassign",["195"],"no-negated-in-lhs",["196"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'mainPosts' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mainPostDispatch' and 'userDispatch'. Either include them or remove the dependency array.","ArrayExpression",["197"],"'MUILink' is defined but never used.","'Badge' is defined but never used.","'Favorite' is defined but never used.","'Home' is defined but never used.","'ShoppingBasket' is defined but never used.","'BubbleChart' is defined but never used.","'AddBox' is defined but never used.","'handleLogoutAll' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'CircularProgress' is defined but never used.","'setCaption' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useContext' is defined but never used.","'Fab' is defined but never used.","'Typography' is defined but never used.","'FavoriteBorder' is defined but never used.","'loadingComponent' is assigned a value but never used.","'setLoadingComponent' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'componentId'. Either include it or remove the dependency array.",["198"],"'Link' is defined but never used.","'Button' is defined but never used.","'Paper' is defined but never used.","React Hook useEffect has missing dependencies: 'mainPostDispatch' and 'username'. Either include them or remove the dependency array.",["199"],"React Hook useEffect has missing dependencies: 'id' and 'mainPostDispatch'. Either include them or remove the dependency array.",["200"],["201"],["202"],"'base_pro_pic_url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"205","fix":"211"},{"desc":"207","fix":"212"},"Update the dependencies array to be: [mainPostDispatch, userDispatch]",{"range":"213","text":"214"},"Update the dependencies array to be: [componentId]",{"range":"215","text":"216"},"Update the dependencies array to be: [mainPostDispatch, username]",{"range":"217","text":"218"},"Update the dependencies array to be: [id, mainPostDispatch]",{"range":"219","text":"220"},{"range":"221","text":"216"},{"range":"222","text":"218"},[1509,1511],"[mainPostDispatch, userDispatch]",[1784,1786],"[componentId]",[1411,1413],"[mainPostDispatch, username]",[1159,1161],"[id, mainPostDispatch]",[1787,1789],[1742,1744]]